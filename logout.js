/*! For license information please see logout.js.LICENSE.txt */
!function(){var e={14154:function(e,t,r){e.exports=function(){"use strict";function e(e){return"function"==typeof e}var t=Array.isArray?Array.isArray:function(e){return"[object Array]"===Object.prototype.toString.call(e)},n=0,o=void 0,i=void 0,s=function(e,t){g[n]=e,g[n+1]=t,2===(n+=2)&&(i?i(p):v())};var a="undefined"!=typeof window?window:void 0,c=a||{},h=c.MutationObserver||c.WebKitMutationObserver,l="undefined"==typeof self&&"undefined"!=typeof process&&"[object process]"==={}.toString.call(process),d="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function u(){var e=setTimeout;return function(){return e(p,1)}}var g=new Array(1e3);function p(){for(var e=0;e<n;e+=2)(0,g[e])(g[e+1]),g[e]=void 0,g[e+1]=void 0;n=0}var m,f,y,C,v=void 0;function w(e,t){var r=this,n=new this.constructor(A);void 0===n[T]&&x(n);var o=r._state;if(o){var i=arguments[o-1];s((function(){return q(o,n,i,r._result)}))}else O(r,n,e,t);return n}function I(e){if(e&&"object"==typeof e&&e.constructor===this)return e;var t=new this(A);return R(t,e),t}v=l?function(){return process.nextTick(p)}:h?(f=0,y=new h(p),C=document.createTextNode(""),y.observe(C,{characterData:!0}),function(){C.data=f=++f%2}):d?((m=new MessageChannel).port1.onmessage=p,function(){return m.port2.postMessage(0)}):void 0===a?function(){try{var e=Function("return this")().require("vertx");return void 0!==(o=e.runOnLoop||e.runOnContext)?function(){o(p)}:u()}catch(e){return u()}}():u();var T=Math.random().toString(36).substring(2);function A(){}var k=void 0,b=1,S=2;function _(t,r,n){r.constructor===t.constructor&&n===w&&r.constructor.resolve===I?function(e,t){t._state===b?P(e,t._result):t._state===S?M(e,t._result):O(t,void 0,(function(t){return R(e,t)}),(function(t){return M(e,t)}))}(t,r):void 0===n?P(t,r):e(n)?function(e,t,r){s((function(e){var n=!1,o=function(e,t,r,n){try{e.call(t,r,n)}catch(e){return e}}(r,t,(function(r){n||(n=!0,t!==r?R(e,r):P(e,r))}),(function(t){n||(n=!0,M(e,t))}),e._label);!n&&o&&(n=!0,M(e,o))}),e)}(t,r,n):P(t,r)}function R(e,t){if(e===t)M(e,new TypeError("You cannot resolve a promise with itself"));else if(o=typeof(n=t),null===n||"object"!==o&&"function"!==o)P(e,t);else{var r=void 0;try{r=t.then}catch(t){return void M(e,t)}_(e,t,r)}var n,o}function E(e){e._onerror&&e._onerror(e._result),N(e)}function P(e,t){e._state===k&&(e._result=t,e._state=b,0!==e._subscribers.length&&s(N,e))}function M(e,t){e._state===k&&(e._state=S,e._result=t,s(E,e))}function O(e,t,r,n){var o=e._subscribers,i=o.length;e._onerror=null,o[i]=t,o[i+b]=r,o[i+S]=n,0===i&&e._state&&s(N,e)}function N(e){var t=e._subscribers,r=e._state;if(0!==t.length){for(var n=void 0,o=void 0,i=e._result,s=0;s<t.length;s+=3)n=t[s],o=t[s+r],n?q(r,n,o,i):o(i);e._subscribers.length=0}}function q(t,r,n,o){var i=e(n),s=void 0,a=void 0,c=!0;if(i){try{s=n(o)}catch(e){c=!1,a=e}if(r===s)return void M(r,new TypeError("A promises callback cannot return that same promise."))}else s=o;r._state!==k||(i&&c?R(r,s):!1===c?M(r,a):t===b?P(r,s):t===S&&M(r,s))}var H=0;function x(e){e[T]=H++,e._state=void 0,e._result=void 0,e._subscribers=[]}var L=function(){function e(e,r){this._instanceConstructor=e,this.promise=new e(A),this.promise[T]||x(this.promise),t(r)?(this.length=r.length,this._remaining=r.length,this._result=new Array(this.length),0===this.length?P(this.promise,this._result):(this.length=this.length||0,this._enumerate(r),0===this._remaining&&P(this.promise,this._result))):M(this.promise,new Error("Array Methods must be provided an Array"))}return e.prototype._enumerate=function(e){for(var t=0;this._state===k&&t<e.length;t++)this._eachEntry(e[t],t)},e.prototype._eachEntry=function(e,t){var r=this._instanceConstructor,n=r.resolve;if(n===I){var o=void 0,i=void 0,s=!1;try{o=e.then}catch(e){s=!0,i=e}if(o===w&&e._state!==k)this._settledAt(e._state,t,e._result);else if("function"!=typeof o)this._remaining--,this._result[t]=e;else if(r===U){var a=new r(A);s?M(a,i):_(a,e,o),this._willSettleAt(a,t)}else this._willSettleAt(new r((function(t){return t(e)})),t)}else this._willSettleAt(n(e),t)},e.prototype._settledAt=function(e,t,r){var n=this.promise;n._state===k&&(this._remaining--,e===S?M(n,r):this._result[t]=r),0===this._remaining&&P(n,this._result)},e.prototype._willSettleAt=function(e,t){var r=this;O(e,void 0,(function(e){return r._settledAt(b,t,e)}),(function(e){return r._settledAt(S,t,e)}))},e}();var U=function(){function t(e){this[T]=H++,this._result=this._state=void 0,this._subscribers=[],A!==e&&("function"!=typeof e&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof t?function(e,t){try{t((function(t){R(e,t)}),(function(t){M(e,t)}))}catch(t){M(e,t)}}(this,e):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}return t.prototype.catch=function(e){return this.then(null,e)},t.prototype.finally=function(t){var r=this,n=r.constructor;return e(t)?r.then((function(e){return n.resolve(t()).then((function(){return e}))}),(function(e){return n.resolve(t()).then((function(){throw e}))})):r.then(t,t)},t}();return U.prototype.then=w,U.all=function(e){return new L(this,e).promise},U.race=function(e){var r=this;return t(e)?new r((function(t,n){for(var o=e.length,i=0;i<o;i++)r.resolve(e[i]).then(t,n)})):new r((function(e,t){return t(new TypeError("You must pass an array to race."))}))},U.resolve=I,U.reject=function(e){var t=new this(A);return M(t,e),t},U._setScheduler=function(e){i=e},U._setAsap=function(e){s=e},U._asap=s,U.polyfill=function(){var e=void 0;if(void 0!==r.g)e=r.g;else if("undefined"!=typeof self)e=self;else try{e=Function("return this")()}catch(e){throw new Error("polyfill failed because global object is unavailable in this environment")}var t=e.Promise;if(t){var n=null;try{n=Object.prototype.toString.call(t.resolve())}catch(e){}if("[object Promise]"===n&&!t.cast)return}e.Promise=U},U.Promise=U,U}()}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n].call(i.exports,i,i.exports,r),i.exports}r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),function(){"use strict";const e={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_RESPONSE_TYPE:"code",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",FRAGMENT_RESPONSE_MODE:"fragment",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",NOT_AVAILABLE:"Not Available",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],TOKEN_RESPONSE_TYPE:"token",ID_TOKEN_RESPONSE_TYPE:"id_token",SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},t=[e.OPENID_SCOPE,e.PROFILE_SCOPE,e.OFFLINE_ACCESS_SCOPE],n=[...t,e.EMAIL_SCOPE],o="Content-Type",i="Retry-After",s="X-AnchorMailbox",a="x-ms-request-id",c="x-ms-httpver",h="idtoken",l="client.info",d="adal.idtoken",u="error",g="error.description",p="active-account",m="active-account-filters",f="common",y="organizations",C="consumers",v="access_token",w={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},I={PLAIN:"plain",S256:"S256"},T={QUERY:"query",FRAGMENT:"fragment"},A={...T,FORM_POST:"form_post"},k="Generic",b="-",S={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},_="appmetadata",R="1",E="authority-metadata",P="config",M="cache",O="network",N="hardcoded_values",q={SCHEMA_VERSION:5,MAX_CUR_HEADER_BYTES:80,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},H={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},x="throttling";var L;!function(e){e[e.Error=0]="Error",e[e.Warning=1]="Warning",e[e.Info=2]="Info",e[e.Verbose=3]="Verbose",e[e.Trace=4]="Trace"}(L||(L={}));class U{constructor(t,r,n){this.level=L.Info;const o=t||U.createDefaultLoggerOptions();this.localCallback=o.loggerCallback||(()=>{}),this.piiLoggingEnabled=o.piiLoggingEnabled||!1,this.level="number"==typeof o.logLevel?o.logLevel:L.Info,this.correlationId=o.correlationId||e.EMPTY_STRING,this.packageName=r||e.EMPTY_STRING,this.packageVersion=n||e.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:L.Info}}clone(e,t,r){return new U({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:r||this.correlationId},e,t)}logMessage(e,t){if(t.logLevel>this.level||!this.piiLoggingEnabled&&t.containsPii)return;const r=`[${(new Date).toUTCString()}] : [${t.correlationId||this.correlationId||""}] : ${this.packageName}@${this.packageVersion} : ${L[t.logLevel]} - ${e}`;this.executeCallback(t.logLevel,r,t.containsPii||!1)}executeCallback(e,t,r){this.localCallback&&this.localCallback(e,t,r)}error(t,r){this.logMessage(t,{logLevel:L.Error,containsPii:!1,correlationId:r||e.EMPTY_STRING})}errorPii(t,r){this.logMessage(t,{logLevel:L.Error,containsPii:!0,correlationId:r||e.EMPTY_STRING})}warning(t,r){this.logMessage(t,{logLevel:L.Warning,containsPii:!1,correlationId:r||e.EMPTY_STRING})}warningPii(t,r){this.logMessage(t,{logLevel:L.Warning,containsPii:!0,correlationId:r||e.EMPTY_STRING})}info(t,r){this.logMessage(t,{logLevel:L.Info,containsPii:!1,correlationId:r||e.EMPTY_STRING})}infoPii(t,r){this.logMessage(t,{logLevel:L.Info,containsPii:!0,correlationId:r||e.EMPTY_STRING})}verbose(t,r){this.logMessage(t,{logLevel:L.Verbose,containsPii:!1,correlationId:r||e.EMPTY_STRING})}verbosePii(t,r){this.logMessage(t,{logLevel:L.Verbose,containsPii:!0,correlationId:r||e.EMPTY_STRING})}trace(t,r){this.logMessage(t,{logLevel:L.Trace,containsPii:!1,correlationId:r||e.EMPTY_STRING})}tracePii(t,r){this.logMessage(t,{logLevel:L.Trace,containsPii:!0,correlationId:r||e.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}const B="AAD",K="OIDC",D="none",F="unexpected_error",$="post_request_failed",z={[F]:"Unexpected error in authentication.",[$]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."};class G extends Error{constructor(t,r,n){super(r?`${t}: ${r}`:t),Object.setPrototypeOf(this,G.prototype),this.errorCode=t||e.EMPTY_STRING,this.errorMessage=r||e.EMPTY_STRING,this.subError=n||e.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function j(e,t){return new G(e,t?`${z[e]} ${t}`:z[e])}const Q="client_info_decoding_error",W="client_info_empty_error",Y="token_parsing_error",V="null_or_empty_token",J="endpoints_resolution_error",X="network_error",Z="openid_config_error",ee="hash_not_deserialized",te="invalid_state",re="state_mismatch",ne="state_not_found",oe="nonce_mismatch",ie="auth_time_not_found",se="max_age_transpired",ae="multiple_matching_tokens",ce="multiple_matching_accounts",he="multiple_matching_appMetadata",le="request_cannot_be_made",de="cannot_remove_empty_scope",ue="cannot_append_scopeset",ge="empty_input_scopeset",pe="device_code_polling_cancelled",me="device_code_expired",fe="device_code_unknown_error",ye="no_account_in_silent_request",Ce="invalid_cache_record",ve="invalid_cache_environment",we="no_account_found",Ie="no_crypto_object",Te="unexpected_credential_type",Ae="invalid_assertion",ke="invalid_client_credential",be="token_refresh_required",Se="user_timeout_reached",_e="token_claims_cnf_required_for_signedjwt",Re="authorization_code_missing_from_server_response",Ee="binding_key_not_removed",Pe="end_session_endpoint_not_supported",Me="key_id_missing",Oe="no_network_connectivity",Ne="user_canceled",qe="missing_tenant_id_error",He="method_not_implemented",xe="nested_app_auth_bridge_disabled",Le={[Q]:"The client info could not be parsed/decoded correctly",[W]:"The client info was empty",[Y]:"Token cannot be parsed",[V]:"The token is null or empty",[J]:"Endpoints cannot be resolved",[X]:"Network request failed",[Z]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[ee]:"The hash parameters could not be deserialized",[te]:"State was not the expected format",[re]:"State mismatch error",[ne]:"State not found",[oe]:"Nonce mismatch error",[ie]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[se]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[ae]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[ce]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[he]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[le]:"Token request cannot be made without authorization code or refresh token.",[de]:"Cannot remove null or empty scope from ScopeSet",[ue]:"Cannot append ScopeSet",[ge]:"Empty input ScopeSet cannot be processed",[pe]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[me]:"Device code is expired.",[fe]:"Device code stopped polling for unknown reasons.",[ye]:"Please pass an account object, silent flow is not supported without account information",[Ce]:"Cache record object was null or undefined.",[ve]:"Invalid environment when attempting to create cache entry",[we]:"No account found in cache for given key.",[Ie]:"No crypto object detected.",[Te]:"Unexpected credential type.",[Ae]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[ke]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[be]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[Se]:"User defined timeout for device code polling reached",[_e]:"Cannot generate a POP jwt if the token_claims are not populated",[Re]:"Server response does not contain an authorization code to proceed",[Ee]:"Could not remove the credential's binding key from storage.",[Pe]:"The provided authority does not support logout",[Me]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[Oe]:"No network connectivity. Check your internet connection.",[Ne]:"User cancelled the flow.",[qe]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[He]:"This method has not been implemented",[xe]:"The nested app auth bridge is disabled"};class Ue extends G{constructor(e,t){super(e,t?`${Le[e]}: ${t}`:Le[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,Ue.prototype)}}function Be(e,t){return new Ue(e,t)}const Ke={createNewGuid:()=>{throw Be(He)},base64Decode:()=>{throw Be(He)},base64Encode:()=>{throw Be(He)},base64UrlEncode:()=>{throw Be(He)},encodeKid:()=>{throw Be(He)},async getPublicKeyThumbprint(){throw Be(He)},async removeTokenBindingKey(){throw Be(He)},async clearKeystore(){throw Be(He)},async signJwt(){throw Be(He)},async hashString(){throw Be(He)}},De="@azure/msal-common",Fe="14.16.0";function $e(e,t){const r=function(e){if(!e)throw Be(V);const t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(e);if(!t||t.length<4)throw Be(Y);return t[2]}(e);try{const e=t(r);return JSON.parse(e)}catch(e){throw Be(Y)}}function ze(e,t){if(0===t||Date.now()-3e5>e+t)throw Be(se)}function Ge(){return Math.round((new Date).getTime()/1e3)}function je(e,t){const r=Number(e)||0;return Ge()+t>r}function Qe(e){return[tt(e),rt(e),nt(e),ot(e),it(e)].join(b).toLowerCase()}function We(e,t,r,n,o){return{credentialType:S.ID_TOKEN,homeAccountId:e,environment:t,clientId:n,secret:r,realm:o}}function Ye(e,t,r,n,o,i,s,a,c,h,l,d,u,g,p){const m={homeAccountId:e,credentialType:S.ACCESS_TOKEN,secret:r,cachedAt:Ge().toString(),expiresOn:s.toString(),extendedExpiresOn:a.toString(),environment:t,clientId:n,realm:o,target:i,tokenType:l||H.BEARER};if(d&&(m.userAssertionHash=d),h&&(m.refreshOn=h.toString()),g&&(m.requestedClaims=g,m.requestedClaimsHash=p),m.tokenType?.toLowerCase()!==H.BEARER.toLowerCase())switch(m.credentialType=S.ACCESS_TOKEN_WITH_AUTH_SCHEME,m.tokenType){case H.POP:const e=$e(r,c);if(!e?.cnf?.kid)throw Be(_e);m.keyId=e.cnf.kid;break;case H.SSH:m.keyId=u}return m}function Ve(e,t,r,n,o,i,s){const a={credentialType:S.REFRESH_TOKEN,homeAccountId:e,environment:t,clientId:n,secret:r};return i&&(a.userAssertionHash=i),o&&(a.familyId=o),s&&(a.expiresOn=s.toString()),a}function Je(e){return e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("credentialType")&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("secret")}function Xe(e){return!!e&&Je(e)&&e.hasOwnProperty("realm")&&e.hasOwnProperty("target")&&(e.credentialType===S.ACCESS_TOKEN||e.credentialType===S.ACCESS_TOKEN_WITH_AUTH_SCHEME)}function Ze(e){return!!e&&Je(e)&&e.hasOwnProperty("realm")&&e.credentialType===S.ID_TOKEN}function et(e){return!!e&&Je(e)&&e.credentialType===S.REFRESH_TOKEN}function tt(e){return[e.homeAccountId,e.environment].join(b).toLowerCase()}function rt(e){const t=e.credentialType===S.REFRESH_TOKEN&&e.familyId||e.clientId;return[e.credentialType,t,e.realm||""].join(b).toLowerCase()}function nt(e){return(e.target||"").toLowerCase()}function ot(e){return(e.requestedClaimsHash||"").toLowerCase()}function it(e){return e.tokenType&&e.tokenType.toLowerCase()!==H.BEARER.toLowerCase()?e.tokenType.toLowerCase():""}function st(){return Ge()+86400}function at(e,t,r){e.authorization_endpoint=t.authorization_endpoint,e.token_endpoint=t.token_endpoint,e.end_session_endpoint=t.end_session_endpoint,e.issuer=t.issuer,e.endpointsFromNetwork=r,e.jwks_uri=t.jwks_uri}function ct(e,t,r){e.aliases=t.aliases,e.preferred_cache=t.preferred_cache,e.preferred_network=t.preferred_network,e.aliasesFromNetwork=r}function ht(e){return e.expiresAt<=Ge()}r(14154).Promise;const lt="redirect_uri_empty",dt="claims_request_parsing_error",ut="authority_uri_insecure",gt="url_parse_error",pt="empty_url_error",mt="empty_input_scopes_error",ft="invalid_prompt_value",yt="invalid_claims",Ct="token_request_empty",vt="logout_request_empty",wt="invalid_code_challenge_method",It="pkce_params_missing",Tt="invalid_cloud_discovery_metadata",At="invalid_authority_metadata",kt="untrusted_authority",bt="missing_ssh_jwk",St="missing_ssh_kid",_t="missing_nonce_authentication_header",Rt="invalid_authentication_header",Et="cannot_set_OIDCOptions",Pt="cannot_allow_native_broker",Mt="authority_mismatch",Ot={[lt]:"A redirect URI is required for all calls, and none has been set.",[dt]:"Could not parse the given claims request object.",[ut]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[gt]:"URL could not be parsed into appropriate segments.",[pt]:"URL was empty or null.",[mt]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[ft]:"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",[yt]:"Given claims parameter must be a stringified JSON object.",[Ct]:"Token request was empty and not found in cache.",[vt]:"The logout request was null or undefined.",[wt]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[It]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[Tt]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[At]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[kt]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[bt]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[St]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[_t]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[Rt]:"Invalid authentication header provided",[Et]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[Pt]:"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.",[Mt]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."};class Nt extends G{constructor(e){super(e,Ot[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,Nt.prototype)}}function qt(e){return new Nt(e)}class Ht{static isEmptyObj(e){if(e)try{const t=JSON.parse(e);return 0===Object.keys(t).length}catch(e){}return!0}static startsWith(e,t){return 0===e.indexOf(t)}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){const t={},r=e.split("&"),n=e=>decodeURIComponent(e.replace(/\+/g," "));return r.forEach((e=>{if(e.trim()){const[r,o]=e.split(/=(.+)/g,2);r&&o&&(t[n(r)]=n(o))}})),t}static trimArrayEntries(e){return e.map((e=>e.trim()))}static removeEmptyStringsFromArray(e){return e.filter((e=>!!e))}static jsonParseHelper(e){try{return JSON.parse(e)}catch(e){return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}class xt{constructor(e){const t=e?Ht.trimArrayEntries([...e]):[],r=t?Ht.removeEmptyStringsFromArray(t):[];this.validateInputScopes(r),this.scopes=new Set,r.forEach((e=>this.scopes.add(e)))}static fromString(t){const r=(t||e.EMPTY_STRING).split(" ");return new xt(r)}static createSearchScopes(t){const r=new xt(t);return r.containsOnlyOIDCScopes()?r.removeScope(e.OFFLINE_ACCESS_SCOPE):r.removeOIDCScopes(),r}validateInputScopes(e){if(!e||e.length<1)throw qt(mt)}containsScope(e){const t=this.printScopesLowerCase().split(" "),r=new xt(t);return!!e&&r.scopes.has(e.toLowerCase())}containsScopeSet(e){return!(!e||e.scopes.size<=0)&&this.scopes.size>=e.scopes.size&&e.asArray().every((e=>this.containsScope(e)))}containsOnlyOIDCScopes(){let e=0;return n.forEach((t=>{this.containsScope(t)&&(e+=1)})),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach((e=>this.appendScope(e)))}catch(e){throw Be(ue)}}removeScope(e){if(!e)throw Be(de);this.scopes.delete(e.trim())}removeOIDCScopes(){n.forEach((e=>{this.scopes.delete(e)}))}unionScopeSets(e){if(!e)throw Be(ge);const t=new Set;return e.scopes.forEach((e=>t.add(e.toLowerCase()))),this.scopes.forEach((e=>t.add(e.toLowerCase()))),t}intersectingScopeSets(e){if(!e)throw Be(ge);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();const t=this.unionScopeSets(e),r=e.getScopeCount(),n=this.getScopeCount();return t.size<n+r}getScopeCount(){return this.scopes.size}asArray(){const e=[];return this.scopes.forEach((t=>e.push(t))),e}printScopes(){return this.scopes?this.asArray().join(" "):e.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}function Lt(e,t){if(!e)throw Be(W);try{const r=t(e);return JSON.parse(r)}catch(e){throw Be(Q)}}function Ut(t){if(!t)throw Be(Q);const r=t.split(".",2);return{uid:r[0],utid:r.length<2?e.EMPTY_STRING:r[1]}}function Bt(e,t){return!!e&&!!t&&e===t.split(".")[1]}function Kt(e,t,r,n){if(n){const{oid:t,sub:r,tid:o,name:i,tfp:s,acr:a}=n,c=o||s||a||"";return{tenantId:c,localAccountId:t||r||"",name:i,isHomeTenant:Bt(c,e)}}return{tenantId:r,localAccountId:t,isHomeTenant:Bt(r,e)}}function Dt(e,t,r,n){let o=e;if(t){const{isHomeTenant:r,...n}=t;o={...e,...n}}if(r){const{isHomeTenant:t,...i}=Kt(e.homeAccountId,e.localAccountId,e.tenantId,r);return o={...o,...i,idTokenClaims:r,idToken:n},o}return o}function Ft(e){return e&&(e.tid||e.tfp||e.acr)||null}class $t{generateAccountId(){return[this.homeAccountId,this.environment].join(b).toLowerCase()}generateAccountKey(){return $t.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType,tenantProfiles:new Map((this.tenantProfiles||[]).map((e=>[e.tenantId,e])))}}isSingleTenant(){return!this.tenantProfiles}static generateAccountCacheKey(e){const t=e.homeAccountId.split(".")[1];return[e.homeAccountId,e.environment||"",t||e.tenantId||""].join(b).toLowerCase()}static createAccount(e,t,r){const n=new $t;let o;1===t.authorityType?n.authorityType="ADFS":t.protocolMode===B?n.authorityType="MSSTS":n.authorityType=k,e.clientInfo&&r&&(o=Lt(e.clientInfo,r)),n.clientInfo=e.clientInfo,n.homeAccountId=e.homeAccountId,n.nativeAccountId=e.nativeAccountId;const i=e.environment||t&&t.getPreferredCache();if(!i)throw Be(ve);n.environment=i,n.realm=o?.utid||Ft(e.idTokenClaims)||"",n.localAccountId=o?.uid||e.idTokenClaims?.oid||e.idTokenClaims?.sub||"";const s=e.idTokenClaims?.preferred_username||e.idTokenClaims?.upn,a=e.idTokenClaims?.emails?e.idTokenClaims.emails[0]:null;if(n.username=s||a||"",n.name=e.idTokenClaims?.name||"",n.cloudGraphHostName=e.cloudGraphHostName,n.msGraphHost=e.msGraphHost,e.tenantProfiles)n.tenantProfiles=e.tenantProfiles;else{const t=Kt(e.homeAccountId,n.localAccountId,n.realm,e.idTokenClaims);n.tenantProfiles=[t]}return n}static createFromAccountInfo(e,t,r){const n=new $t;return n.authorityType=e.authorityType||k,n.homeAccountId=e.homeAccountId,n.localAccountId=e.localAccountId,n.nativeAccountId=e.nativeAccountId,n.realm=e.tenantId,n.environment=e.environment,n.username=e.username,n.name=e.name,n.cloudGraphHostName=t,n.msGraphHost=r,n.tenantProfiles=Array.from(e.tenantProfiles?.values()||[]),n}static generateHomeAccountId(e,t,r,n,o){if(1!==t&&2!==t){if(e)try{const t=Lt(e,n.base64Decode);if(t.uid&&t.utid)return`${t.uid}.${t.utid}`}catch(e){}r.warning("No client info in response")}return o?.sub||""}static isAccountEntity(e){return!!e&&e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType")}static accountInfoIsEqual(e,t,r){if(!e||!t)return!1;let n=!0;if(r){const r=e.idTokenClaims||{},o=t.idTokenClaims||{};n=r.iat===o.iat&&r.nonce===o.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&n}}function zt(e){return e.startsWith("#/")?e.substring(2):e.startsWith("#")||e.startsWith("?")?e.substring(1):e}function Gt(e){if(!e||e.indexOf("=")<0)return null;try{const t=zt(e),r=Object.fromEntries(new URLSearchParams(t));if(r.code||r.error||r.error_description||r.state)return r}catch(e){throw Be(ee)}return null}class jt{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw qt(pt);e.includes("#")||(this._urlString=jt.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return Ht.endsWith(t,"?")?t=t.slice(0,-1):Ht.endsWith(t,"?/")&&(t=t.slice(0,-2)),Ht.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch(e){throw qt(gt)}if(!e.HostNameAndPort||!e.PathSegments)throw qt(gt);if(!e.Protocol||"https:"!==e.Protocol.toLowerCase())throw qt(ut)}static appendQueryString(e,t){return t?e.indexOf("?")<0?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return jt.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){const t=this.getUrlComponents(),r=t.PathSegments;return!e||0===r.length||r[0]!==f&&r[0]!==y||(r[0]=e),jt.constructAuthorityUriFromObject(t)}getUrlComponents(){const e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw qt(gt);const r={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]};let n=r.AbsolutePath.split("/");return n=n.filter((e=>e&&e.length>0)),r.PathSegments=n,r.QueryString&&r.QueryString.endsWith("/")&&(r.QueryString=r.QueryString.substring(0,r.QueryString.length-1)),r}static getDomainFromUrl(e){const t=RegExp("^([^:/?#]+://)?([^/?#]*)"),r=e.match(t);if(!r)throw qt(gt);return r[2]}static getAbsoluteUrl(t,r){if(t[0]===e.FORWARD_SLASH){const e=new jt(r).getUrlComponents();return e.Protocol+"//"+e.HostNameAndPort+t}return t}static constructAuthorityUriFromObject(e){return new jt(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static hashContainsKnownProperties(e){return!!Gt(e)}}const Qt={"login.microsoftonline.com":{token_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"},"login.chinacloudapi.cn":{token_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",authorization_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"},"login.microsoftonline.us":{token_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"}},Wt={tenant_discovery_endpoint:"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},Yt=new Set;function Vt(e,t,r,n){if(n?.trace(`getAliasesFromMetadata called with source: ${r}`),e&&t){const o=Jt(t,e);if(o)return n?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${r}, returning aliases`),o.aliases;n?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${r}`)}return null}function Jt(e,t){for(let r=0;r<e.length;r++){const n=e[r];if(n.aliases.includes(t))return n}return null}Wt.metadata.forEach((e=>{e.aliases.forEach((e=>{Yt.add(e)}))}));const Xt="cache_quota_exceeded",Zt="cache_error_unknown",er={[Xt]:"Exceeded cache storage capacity.",[Zt]:"Unexpected error occurred when using cache storage."};class tr extends Error{constructor(e,t){const r=t||(er[e]?er[e]:er[Zt]);super(`${e}: ${r}`),Object.setPrototypeOf(this,tr.prototype),this.name="CacheError",this.errorCode=e,this.errorMessage=r}}var rr=r(14154).Promise;class nr{constructor(e,t,r,n){this.clientId=e,this.cryptoImpl=t,this.commonLogger=r.clone(De,Fe),this.staticAuthorityOptions=n}getAllAccounts(e){return this.buildTenantProfiles(this.getAccountsFilteredBy(e||{}),e)}getAccountInfoFilteredBy(e){const t=this.getAllAccounts(e);return t.length>1?t.sort((e=>e.idTokenClaims?-1:1))[0]:1===t.length?t[0]:null}getBaseAccountInfo(e){const t=this.getAccountsFilteredBy(e);return t.length>0?t[0].getAccountInfo():null}buildTenantProfiles(e,t){return e.flatMap((e=>this.getTenantProfilesFromAccountEntity(e,t?.tenantId,t)))}getTenantedAccountInfoByFilter(e,t,r,n){let o,i=null;if(n&&!this.tenantProfileMatchesFilter(r,n))return null;const s=this.getIdToken(e,t,r.tenantId);return s&&(o=$e(s.secret,this.cryptoImpl.base64Decode),!this.idTokenClaimsMatchTenantProfileFilter(o,n))?null:(i=Dt(e,r,o,s?.secret),i)}getTenantProfilesFromAccountEntity(e,t,r){const n=e.getAccountInfo();let o=n.tenantProfiles||new Map;const i=this.getTokenKeys();if(t){const e=o.get(t);if(!e)return[];o=new Map([[t,e]])}const s=[];return o.forEach((e=>{const t=this.getTenantedAccountInfoByFilter(n,i,e,r);t&&s.push(t)})),s}tenantProfileMatchesFilter(e,t){return!(t.localAccountId&&!this.matchLocalAccountIdFromTenantProfile(e,t.localAccountId)||t.name&&e.name!==t.name||void 0!==t.isHomeTenant&&e.isHomeTenant!==t.isHomeTenant)}idTokenClaimsMatchTenantProfileFilter(e,t){if(t){if(t.localAccountId&&!this.matchLocalAccountIdFromTokenClaims(e,t.localAccountId))return!1;if(t.loginHint&&!this.matchLoginHintFromTokenClaims(e,t.loginHint))return!1;if(t.username&&!this.matchUsername(e.preferred_username,t.username))return!1;if(t.name&&!this.matchName(e,t.name))return!1;if(t.sid&&!this.matchSid(e,t.sid))return!1}return!0}async saveCacheRecord(e,t,r){if(!e)throw Be(Ce);try{e.account&&this.setAccount(e.account),e.idToken&&!1!==t?.idToken&&this.setIdTokenCredential(e.idToken),e.accessToken&&!1!==t?.accessToken&&await this.saveAccessToken(e.accessToken),e.refreshToken&&!1!==t?.refreshToken&&this.setRefreshTokenCredential(e.refreshToken),e.appMetadata&&this.setAppMetadata(e.appMetadata)}catch(e){throw this.commonLogger?.error("CacheManager.saveCacheRecord: failed"),e instanceof Error?(this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e.message}`,r),"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name||e.message.includes("exceeded the quota")?(this.commonLogger?.error("CacheManager.saveCacheRecord: exceeded storage quota",r),new tr(Xt)):new tr(e.name,e.message)):(this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e}`,r),new tr(Zt))}}async saveAccessToken(e){const t={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},r=this.getTokenKeys(),n=xt.fromString(e.target),o=[];r.accessToken.forEach((e=>{if(!this.accessTokenKeyMatchesFilter(e,t,!1))return;const r=this.getAccessTokenCredential(e);r&&this.credentialMatchesFilter(r,t)&&xt.fromString(r.target).intersectingScopeSets(n)&&o.push(this.removeAccessToken(e))})),await rr.all(o),this.setAccessTokenCredential(e)}getAccountsFilteredBy(e){const t=this.getAccountKeys(),r=[];return t.forEach((t=>{if(!this.isAccountKey(t,e.homeAccountId))return;const n=this.getAccount(t,this.commonLogger);if(!n)return;if(e.homeAccountId&&!this.matchHomeAccountId(n,e.homeAccountId))return;if(e.username&&!this.matchUsername(n.username,e.username))return;if(e.environment&&!this.matchEnvironment(n,e.environment))return;if(e.realm&&!this.matchRealm(n,e.realm))return;if(e.nativeAccountId&&!this.matchNativeAccountId(n,e.nativeAccountId))return;if(e.authorityType&&!this.matchAuthorityType(n,e.authorityType))return;const o={localAccountId:e?.localAccountId,name:e?.name},i=n.tenantProfiles?.filter((e=>this.tenantProfileMatchesFilter(e,o)));i&&0===i.length||r.push(n)})),r}isAccountKey(e,t,r){return!(e.split(b).length<3||t&&!e.toLowerCase().includes(t.toLowerCase())||r&&!e.toLowerCase().includes(r.toLowerCase()))}isCredentialKey(e){if(e.split(b).length<6)return!1;const t=e.toLowerCase();if(-1===t.indexOf(S.ID_TOKEN.toLowerCase())&&-1===t.indexOf(S.ACCESS_TOKEN.toLowerCase())&&-1===t.indexOf(S.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())&&-1===t.indexOf(S.REFRESH_TOKEN.toLowerCase()))return!1;if(t.indexOf(S.REFRESH_TOKEN.toLowerCase())>-1){const e=`${S.REFRESH_TOKEN}${b}${this.clientId}${b}`,r=`${S.REFRESH_TOKEN}${b}${R}${b}`;if(-1===t.indexOf(e.toLowerCase())&&-1===t.indexOf(r.toLowerCase()))return!1}else if(-1===t.indexOf(this.clientId.toLowerCase()))return!1;return!0}credentialMatchesFilter(e,t){if(t.clientId&&!this.matchClientId(e,t.clientId))return!1;if(t.userAssertionHash&&!this.matchUserAssertionHash(e,t.userAssertionHash))return!1;if("string"==typeof t.homeAccountId&&!this.matchHomeAccountId(e,t.homeAccountId))return!1;if(t.environment&&!this.matchEnvironment(e,t.environment))return!1;if(t.realm&&!this.matchRealm(e,t.realm))return!1;if(t.credentialType&&!this.matchCredentialType(e,t.credentialType))return!1;if(t.familyId&&!this.matchFamilyId(e,t.familyId))return!1;if(t.target&&!this.matchTarget(e,t.target))return!1;if((t.requestedClaimsHash||e.requestedClaimsHash)&&e.requestedClaimsHash!==t.requestedClaimsHash)return!1;if(e.credentialType===S.ACCESS_TOKEN_WITH_AUTH_SCHEME){if(t.tokenType&&!this.matchTokenType(e,t.tokenType))return!1;if(t.tokenType===H.SSH&&t.keyId&&!this.matchKeyId(e,t.keyId))return!1}return!0}getAppMetadataFilteredBy(e){const t=this.getKeys(),r={};return t.forEach((t=>{if(!this.isAppMetadata(t))return;const n=this.getAppMetadata(t);n&&(e.environment&&!this.matchEnvironment(n,e.environment)||e.clientId&&!this.matchClientId(n,e.clientId)||(r[t]=n))})),r}getAuthorityMetadataByAlias(e){const t=this.getAuthorityMetadataKeys();let r=null;return t.forEach((t=>{if(!this.isAuthorityMetadata(t)||-1===t.indexOf(this.clientId))return;const n=this.getAuthorityMetadata(t);n&&-1!==n.aliases.indexOf(e)&&(r=n)})),r}async removeAllAccounts(){const e=this.getAccountKeys(),t=[];e.forEach((e=>{t.push(this.removeAccount(e))})),await rr.all(t)}async removeAccount(e){const t=this.getAccount(e,this.commonLogger);t&&(await this.removeAccountContext(t),this.removeItem(e))}async removeAccountContext(e){const t=this.getTokenKeys(),r=e.generateAccountId(),n=[];t.idToken.forEach((e=>{0===e.indexOf(r)&&this.removeIdToken(e)})),t.accessToken.forEach((e=>{0===e.indexOf(r)&&n.push(this.removeAccessToken(e))})),t.refreshToken.forEach((e=>{0===e.indexOf(r)&&this.removeRefreshToken(e)})),await rr.all(n)}updateOutdatedCachedAccount(e,t,r){if(t&&t.isSingleTenant()){this.commonLogger?.verbose("updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity");const n=this.getAccountKeys().filter((e=>e.startsWith(t.homeAccountId))),o=[];n.forEach((e=>{const t=this.getCachedAccountEntity(e);t&&o.push(t)}));const i=o.find((e=>Bt(e.realm,e.homeAccountId)))||o[0];i.tenantProfiles=o.map((e=>({tenantId:e.realm,localAccountId:e.localAccountId,name:e.name,isHomeTenant:Bt(e.realm,e.homeAccountId)})));const s=nr.toObject(new $t,{...i}),a=s.generateAccountKey();return n.forEach((t=>{t!==a&&this.removeOutdatedAccount(e)})),this.setAccount(s),r?.verbose("Updated an outdated account entity in the cache"),s}return t}async removeAccessToken(e){const t=this.getAccessTokenCredential(e);if(t){if(t.credentialType.toLowerCase()===S.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()&&t.tokenType===H.POP){const e=t.keyId;if(e)try{await this.cryptoImpl.removeTokenBindingKey(e)}catch(e){throw Be(Ee)}}return this.removeItem(e)}}removeAppMetadata(){return this.getKeys().forEach((e=>{this.isAppMetadata(e)&&this.removeItem(e)})),!0}readAccountFromCache(e){const t=$t.generateAccountCacheKey(e);return this.getAccount(t,this.commonLogger)}getIdToken(e,t,r,n,o){this.commonLogger.trace("CacheManager - getIdToken called");const i={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:S.ID_TOKEN,clientId:this.clientId,realm:r},s=this.getIdTokensByFilter(i,t),a=s.size;if(a<1)return this.commonLogger.info("CacheManager:getIdToken - No token found"),null;if(a>1){let t=s;if(!r){const r=new Map;s.forEach(((t,n)=>{t.realm===e.tenantId&&r.set(n,t)}));const n=r.size;if(n<1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"),s.values().next().value;if(1===n)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"),r.values().next().value;t=r}return this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"),t.forEach(((e,t)=>{this.removeIdToken(t)})),n&&o&&n.addFields({multiMatchedID:s.size},o),null}return this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),s.values().next().value}getIdTokensByFilter(e,t){const r=t&&t.idToken||this.getTokenKeys().idToken,n=new Map;return r.forEach((t=>{if(!this.idTokenKeyMatchesFilter(t,{clientId:this.clientId,...e}))return;const r=this.getIdTokenCredential(t);r&&this.credentialMatchesFilter(r,e)&&n.set(t,r)})),n}idTokenKeyMatchesFilter(e,t){const r=e.toLowerCase();return!(t.clientId&&-1===r.indexOf(t.clientId.toLowerCase())||t.homeAccountId&&-1===r.indexOf(t.homeAccountId.toLowerCase()))}removeIdToken(e){this.removeItem(e)}removeRefreshToken(e){this.removeItem(e)}getAccessToken(e,t,r,n,o,i){this.commonLogger.trace("CacheManager - getAccessToken called");const s=xt.createSearchScopes(t.scopes),a=t.authenticationScheme||H.BEARER,c=a&&a.toLowerCase()!==H.BEARER.toLowerCase()?S.ACCESS_TOKEN_WITH_AUTH_SCHEME:S.ACCESS_TOKEN,h={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:c,clientId:this.clientId,realm:n||e.tenantId,target:s,tokenType:a,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},l=r&&r.accessToken||this.getTokenKeys().accessToken,d=[];l.forEach((e=>{if(this.accessTokenKeyMatchesFilter(e,h,!0)){const t=this.getAccessTokenCredential(e);t&&this.credentialMatchesFilter(t,h)&&d.push(t)}}));const u=d.length;return u<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found"),null):u>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them"),d.forEach((e=>{this.removeAccessToken(Qe(e))})),o&&i&&o.addFields({multiMatchedAT:d.length},i),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token"),d[0])}accessTokenKeyMatchesFilter(e,t,r){const n=e.toLowerCase();if(t.clientId&&-1===n.indexOf(t.clientId.toLowerCase()))return!1;if(t.homeAccountId&&-1===n.indexOf(t.homeAccountId.toLowerCase()))return!1;if(t.realm&&-1===n.indexOf(t.realm.toLowerCase()))return!1;if(t.requestedClaimsHash&&-1===n.indexOf(t.requestedClaimsHash.toLowerCase()))return!1;if(t.target){const e=t.target.asArray();for(let t=0;t<e.length;t++){if(r&&!n.includes(e[t].toLowerCase()))return!1;if(!r&&n.includes(e[t].toLowerCase()))return!0}}return!0}getAccessTokensByFilter(e){const t=this.getTokenKeys(),r=[];return t.accessToken.forEach((t=>{if(!this.accessTokenKeyMatchesFilter(t,e,!0))return;const n=this.getAccessTokenCredential(t);n&&this.credentialMatchesFilter(n,e)&&r.push(n)})),r}getRefreshToken(e,t,r,n,o){this.commonLogger.trace("CacheManager - getRefreshToken called");const i=t?R:void 0,s={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:S.REFRESH_TOKEN,clientId:this.clientId,familyId:i},a=r&&r.refreshToken||this.getTokenKeys().refreshToken,c=[];a.forEach((e=>{if(this.refreshTokenKeyMatchesFilter(e,s)){const t=this.getRefreshTokenCredential(e);t&&this.credentialMatchesFilter(t,s)&&c.push(t)}}));const h=c.length;return h<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(h>1&&n&&o&&n.addFields({multiMatchedRT:h},o),this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),c[0])}refreshTokenKeyMatchesFilter(e,t){const r=e.toLowerCase();return!(t.familyId&&-1===r.indexOf(t.familyId.toLowerCase())||!t.familyId&&t.clientId&&-1===r.indexOf(t.clientId.toLowerCase())||t.homeAccountId&&-1===r.indexOf(t.homeAccountId.toLowerCase()))}readAppMetadataFromCache(e){const t={environment:e,clientId:this.clientId},r=this.getAppMetadataFilteredBy(t),n=Object.keys(r).map((e=>r[e])),o=n.length;if(o<1)return null;if(o>1)throw Be(he);return n[0]}isAppMetadataFOCI(e){const t=this.readAppMetadataFromCache(e);return!(!t||t.familyId!==R)}matchHomeAccountId(e,t){return!("string"!=typeof e.homeAccountId||t!==e.homeAccountId)}matchLocalAccountIdFromTokenClaims(e,t){return t===(e.oid||e.sub)}matchLocalAccountIdFromTenantProfile(e,t){return e.localAccountId===t}matchName(e,t){return!(t.toLowerCase()!==e.name?.toLowerCase())}matchUsername(e,t){return!(!e||"string"!=typeof e||t?.toLowerCase()!==e.toLowerCase())}matchUserAssertionHash(e,t){return!(!e.userAssertionHash||t!==e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){const r=function(e,t){let r;const n=e.canonicalAuthority;if(n){const o=new jt(n).getUrlComponents().HostNameAndPort;r=Vt(o,e.cloudDiscoveryMetadata?.metadata,P,t)||Vt(o,Wt.metadata,N,t)||e.knownAuthorities}return r||[]}(this.staticAuthorityOptions,this.commonLogger);if(r.includes(t)&&r.includes(e.environment))return!0}const r=this.getAuthorityMetadataByAlias(t);return!!(r&&r.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!(!e.clientId||t!==e.clientId)}matchFamilyId(e,t){return!(!e.familyId||t!==e.familyId)}matchRealm(e,t){return!(e.realm?.toLowerCase()!==t.toLowerCase())}matchNativeAccountId(e,t){return!(!e.nativeAccountId||t!==e.nativeAccountId)}matchLoginHintFromTokenClaims(e,t){return e.login_hint===t||e.preferred_username===t||e.upn===t}matchSid(e,t){return e.sid===t}matchAuthorityType(e,t){return!(!e.authorityType||t.toLowerCase()!==e.authorityType.toLowerCase())}matchTarget(e,t){return!(e.credentialType!==S.ACCESS_TOKEN&&e.credentialType!==S.ACCESS_TOKEN_WITH_AUTH_SCHEME||!e.target)&&xt.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!(!e.tokenType||e.tokenType!==t)}matchKeyId(e,t){return!(!e.keyId||e.keyId!==t)}isAppMetadata(e){return-1!==e.indexOf(_)}isAuthorityMetadata(e){return-1!==e.indexOf(E)}generateAuthorityMetadataCacheKey(e){return`${E}-${this.clientId}-${e}`}static toObject(e,t){for(const r in t)e[r]=t[r];return e}}class or extends nr{setAccount(){throw Be(He)}getAccount(){throw Be(He)}getCachedAccountEntity(){throw Be(He)}setIdTokenCredential(){throw Be(He)}getIdTokenCredential(){throw Be(He)}setAccessTokenCredential(){throw Be(He)}getAccessTokenCredential(){throw Be(He)}setRefreshTokenCredential(){throw Be(He)}getRefreshTokenCredential(){throw Be(He)}setAppMetadata(){throw Be(He)}getAppMetadata(){throw Be(He)}setServerTelemetry(){throw Be(He)}getServerTelemetry(){throw Be(He)}setAuthorityMetadata(){throw Be(He)}getAuthorityMetadata(){throw Be(He)}getAuthorityMetadataKeys(){throw Be(He)}setThrottlingCache(){throw Be(He)}getThrottlingCache(){throw Be(He)}removeItem(){throw Be(He)}getKeys(){throw Be(He)}getAccountKeys(){throw Be(He)}getTokenKeys(){throw Be(He)}updateCredentialCacheKey(){throw Be(He)}removeOutdatedAccount(){throw Be(He)}}const ir={tokenRenewalOffsetSeconds:300,preventCorsPreflight:!1},sr={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:L.Info,correlationId:e.EMPTY_STRING},ar={claimsBasedCachingEnabled:!1},cr={async sendGetRequestAsync(){throw Be(He)},async sendPostRequestAsync(){throw Be(He)}},hr={sku:e.SKU,version:Fe,cpu:e.EMPTY_STRING,os:e.EMPTY_STRING},lr={clientSecret:e.EMPTY_STRING,clientAssertion:void 0},dr={azureCloudInstance:D,tenant:`${e.DEFAULT_COMMON_TENANT}`},ur={application:{appName:"",appVersion:""}};function gr(e){return e.authOptions.authority.options.protocolMode===K}var pr=r(14154).Promise;const mr={sendGetRequestAsync:()=>pr.reject(Be(He)),sendPostRequestAsync:()=>pr.reject(Be(He))},fr="acquireTokenByCode",yr="acquireTokenByRefreshToken",Cr="acquireTokenSilent",vr="acquireTokenSilentAsync",wr="acquireTokenPopup",Ir="acquireTokenRedirect",Tr="cryptoOptsGetPublicKeyThumbprint",Ar="cryptoOptsSignJwt",kr="silentCacheClientAcquireToken",br="silentIframeClientAcquireToken",Sr="silentRefreshClientAcquireToken",_r="ssoSilent",Rr="standardInteractionClientGetDiscoveredAuthority",Er="fetchAccountIdWithNativeBroker",Pr="nativeInteractionClientAcquireToken",Mr="networkClientSendPostRequestAsync",Or="refreshTokenClientExecutePostToTokenEndpoint",Nr="authorizationCodeClientExecutePostToTokenEndpoint",qr="refreshTokenClientExecuteTokenRequest",Hr="refreshTokenClientAcquireToken",xr="refreshTokenClientAcquireTokenWithCachedRefreshToken",Lr="refreshTokenClientAcquireTokenByRefreshToken",Ur="refreshTokenClientCreateTokenRequestBody",Br="acquireTokenFromCache",Kr="silentFlowClientAcquireCachedToken",Dr="silentFlowClientGenerateResultFromCacheRecord",Fr="acquireTokenBySilentIframe",$r="initializeBaseRequest",zr="initializeSilentRequest",Gr="initializeClientApplication",jr="silentIframeClientTokenHelper",Qr="silentHandlerInitiateAuthRequest",Wr="silentHandlerMonitorIframeForHash",Yr="silentHandlerLoadFrame",Vr="silentHandlerLoadFrameSync",Jr="standardInteractionClientCreateAuthCodeClient",Xr="standardInteractionClientGetClientConfiguration",Zr="standardInteractionClientInitializeAuthorizationRequest",en="standardInteractionClientInitializeAuthorizationCodeRequest",tn="getAuthCodeUrl",rn="handleCodeResponseFromServer",nn="handleCodeResponse",on="updateTokenEndpointAuthority",sn="authClientAcquireToken",an="authClientExecuteTokenRequest",cn="authClientCreateTokenRequestBody",hn="authClientCreateQueryString",ln="popTokenGenerateCnf",dn="popTokenGenerateKid",un="handleServerTokenResponse",gn="deserializeResponse",pn="authorityFactoryCreateDiscoveredInstance",mn="authorityResolveEndpointsAsync",fn="authorityGetCloudDiscoveryMetadataFromNetwork",yn="authorityUpdateCloudDiscoveryMetadata",Cn="authorityGetEndpointMetadataFromNetwork",vn="authorityUpdateEndpointMetadata",wn="authorityUpdateMetadataWithRegionalInformation",In="regionDiscoveryDetectRegion",Tn="regionDiscoveryGetRegionFromIMDS",An="regionDiscoveryGetCurrentVersion",kn="acquireTokenByCodeAsync",bn="handleRedirectPromise",Sn="handleNativeRedirectPromise",_n="nativeMessageHandlerHandshake",Rn="removeHiddenIframe",En="clearTokensAndKeysWithClaims",Pn="cacheManagerGetRefreshToken",Mn="generatePkceCodes",On="generateCodeVerifier",Nn="generateCodeChallengeFromVerifier",qn="sha256Digest",Hn="getRandomValues",xn=(new Map([[fr,"ATByCode"],[yr,"ATByRT"],[Cr,"ATS"],[vr,"ATSAsync"],[wr,"ATPopup"],[Ir,"ATRedirect"],[Tr,"CryptoGetPKThumb"],[Ar,"CryptoSignJwt"],[kr,"SltCacheClientAT"],[br,"SltIframeClientAT"],[Sr,"SltRClientAT"],[_r,"SsoSlt"],[Rr,"StdIntClientGetDiscAuth"],[Er,"FetchAccIdWithNtvBroker"],[Pr,"NtvIntClientAT"],["baseClientCreateTokenRequestHeaders","BaseClientCreateTReqHead"],[Mr,"NetClientSendPost"],[Or,"RTClientExecPost"],[Nr,"AuthCodeClientExecPost"],["brokerHandshake","BrokerHandshake"],["acquireTokenByRefreshTokenInBroker","ATByRTInBroker"],["acquireTokenByBroker","ATByBroker"],[qr,"RTClientExecTReq"],[Hr,"RTClientAT"],[xr,"RTClientATWithCachedRT"],[Lr,"RTClientATByRT"],[Ur,"RTClientCreateTReqBody"],[Br,"ATFromCache"],[Kr,"SltFlowClientATCached"],[Dr,"SltFlowClientGenResFromCache"],[Fr,"ATBySltIframe"],[$r,"InitBaseReq"],[zr,"InitSltReq"],[Gr,"InitClientApplication"],[jr,"SIClientTHelper"],[Qr,"SHandlerInitAuthReq"],[Wr,"SltHandlerMonitorIframeForHash"],[Yr,"SHandlerLoadFrame"],[Vr,"SHandlerLoadFrameSync"],[Jr,"StdIntClientCreateAuthCodeClient"],[Xr,"StdIntClientGetClientConf"],[Zr,"StdIntClientInitAuthReq"],[en,"StdIntClientInitAuthCodeReq"],[tn,"GetAuthCodeUrl"],[rn,"HandleCodeResFromServer"],[nn,"HandleCodeResp"],[on,"UpdTEndpointAuth"],[sn,"AuthClientAT"],[an,"AuthClientExecTReq"],[cn,"AuthClientCreateTReqBody"],[hn,"AuthClientCreateQueryStr"],[ln,"PopTGenCnf"],[dn,"PopTGenKid"],[un,"HandleServerTRes"],[gn,"DeserializeRes"],[pn,"AuthFactCreateDiscInst"],[mn,"AuthResolveEndpointsAsync"],["authorityResolveEndpointsFromLocalSources","AuthResolveEndpointsFromLocal"],[fn,"AuthGetCDMetaFromNet"],[yn,"AuthUpdCDMeta"],[Cn,"AuthUpdCDMetaFromNet"],[vn,"AuthUpdEndpointMeta"],[wn,"AuthUpdMetaWithRegInfo"],[In,"RegDiscDetectReg"],[Tn,"RegDiscGetRegFromIMDS"],[An,"RegDiscGetCurrentVer"],[kn,"ATByCodeAsync"],["getEndpointMetadataFromNetwork","GetEndpointMetaFromNet"],["getCloudDiscoveryMetadataFromNetworkMeasurement","GetCDMetaFromNet"],[bn,"HandleRedirectPromise"],[Sn,"HandleNtvRedirectPromise"],["updateCloudDiscoveryMetadataMeasurement","UpdateCDMeta"],["usernamePasswordClientAcquireToken","UserPassClientAT"],[_n,"NtvMsgHandlerHandshake"],["nativeGenerateAuthResult","NtvGenAuthRes"],[Rn,"RemoveHiddenIframe"],[En,"ClearTAndKeysWithClaims"],[Pn,"CacheManagerGetRT"],[Mn,"GenPkceCodes"],[On,"GenCodeVerifier"],[Nn,"GenCodeChallengeFromVerifier"],[qn,"Sha256Digest"],[Hn,"GetRandomValues"]]),1);new Set(["accessTokenSize","durationMs","idTokenSize","matsSilentStatus","matsHttpStatus","refreshTokenSize","queuedTimeMs","startTimeMs","status","multiMatchedAT","multiMatchedID","multiMatchedRT"]);class Ln{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class Un{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:xn,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new Ln}}startPerformanceMeasurement(){return new Ln}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}const Bn="invalid_grant",Kn="msal",Dn="msal.js.browser",Fn="53ee284d-920a-4b59-9d30-a60315b26836",$n="ppnbnpeolgkicgegkbkbjmhlideopiji",zn="Handshake",Gn="GetToken",jn="localStorage",Qn="sessionStorage",Wn="memoryStorage",Yn="request.state",Vn="request.origin",Jn="urlHash",Xn="request.params",Zn="interaction.status",eo="ccs.credential",to="request.correlationId",ro="request.native",no="msal.account.keys",oo="msal.token.keys",io="wrapper.sku",so="wrapper.version",ao=861,co=862;var ho;!function(e){e.Redirect="redirect",e.Popup="popup",e.Silent="silent",e.None="none"}(ho||(ho={}));const lo={scopes:t},uo="msal.db",go=`${uo}.keys`,po=[0,5,4];var mo=r(14154).Promise;class fo{navigateInternal(e,t){return fo.defaultNavigateWindow(e,t)}navigateExternal(e,t){return fo.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new mo((e=>{setTimeout((()=>{e(!0)}),t.timeout)}))}}class yo extends G{constructor(e,t,r){super(e.errorCode,e.errorMessage,e.subError),Object.setPrototypeOf(this,yo.prototype),this.name="NetworkError",this.error=e,this.httpStatus=t,this.responseHeaders=r}}function Co(e,t,r){return new yo(e,t,r)}const vo="pkce_not_created",wo="crypto_nonexistent",Io="empty_navigate_uri",To="hash_empty_error",Ao="no_state_in_hash",ko="hash_does_not_contain_known_properties",bo="unable_to_parse_state",So="state_interaction_type_mismatch",_o="interaction_in_progress",Ro="popup_window_error",Eo="empty_window_error",Po="user_cancelled",Mo="monitor_popup_timeout",Oo="monitor_window_timeout",No="redirect_in_iframe",qo="block_iframe_reload",Ho="block_nested_popups",xo="iframe_closed_prematurely",Lo="silent_logout_unsupported",Uo="no_account_error",Bo="silent_prompt_value_error",Ko="no_token_request_cache_error",Do="unable_to_parse_token_request_cache_error",Fo="no_cached_authority_error",$o="auth_request_not_set_error",zo="invalid_cache_type",Go="non_browser_environment",jo="database_not_open",Qo="no_network_connectivity",Wo="post_request_failed",Yo="get_request_failed",Vo="failed_to_parse_response",Jo="unable_to_load_token",Xo="crypto_key_not_found",Zo="auth_code_required",ei="auth_code_or_nativeAccountId_required",ti="spa_code_and_nativeAccountId_present",ri="database_unavailable",ni="unable_to_acquire_token_from_native_platform",oi="native_handshake_timeout",ii="native_extension_not_installed",si="native_connection_not_established",ai="uninitialized_public_client_application",ci="native_prompt_not_supported",hi="invalid_base64_string",li="invalid_pop_token_request",di="failed_to_build_headers",ui="failed_to_parse_headers",gi="For more visit: aka.ms/msaljs/browser-errors",pi={[vo]:"The PKCE code challenge and verifier could not be generated.",[wo]:"The crypto object or function is not available.",[Io]:"Navigation URI is empty. Please check stack trace for more info.",[To]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${gi}`,[Ao]:"Hash does not contain state. Please verify that the request originated from msal.",[ko]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${gi}`,[bo]:"Unable to parse state. Please verify that the request originated from msal.",[So]:"Hash contains state but the interaction type does not match the caller.",[_o]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${gi}`,[Ro]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[Eo]:"window.open returned null or undefined window object.",[Po]:"User cancelled the flow.",[Mo]:`Token acquisition in popup failed due to timeout.  ${gi}`,[Oo]:`Token acquisition in iframe failed due to timeout.  ${gi}`,[No]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[qo]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${gi}`,[Ho]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",[xo]:"The iframe being monitored was closed prematurely.",[Lo]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[Uo]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",[Bo]:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[Ko]:"No token request found in cache.",[Do]:"The cached token request could not be parsed.",[Fo]:"No cached authority found.",[$o]:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",[zo]:"Invalid cache type",[Go]:"Login and token requests are not supported in non-browser environments.",[jo]:"Database is not open!",[Qo]:"No network connectivity. Check your internet connection.",[Wo]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[Yo]:"Network request failed. Please check the network trace to determine root cause.",[Vo]:"Failed to parse network response. Check network trace.",[Jo]:"Error loading token to cache.",[Xo]:"Cryptographic Key or Keypair not found in browser storage.",[Zo]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[ei]:"An authorization code or nativeAccountId must be provided to this flow.",[ti]:"Request cannot contain both spa code and native account id.",[ri]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[ni]:`Unable to acquire token from native platform.  ${gi}`,[oi]:"Timed out while attempting to establish connection to browser extension",[ii]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[si]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${gi}`,[ai]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${gi}`,[ci]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[hi]:"Invalid base64 encoded string.",[li]:"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true.",[di]:"Failed to build request headers object.",[ui]:"Failed to parse response headers"};class mi extends G{constructor(e,t){super(e,pi[e],t),Object.setPrototypeOf(this,mi.prototype),this.name="BrowserAuthError"}}function fi(e,t){return new mi(e,t)}class yi{async sendGetRequestAsync(e,t){let r,n={},o=0;const i=Ci(t);try{r=await fetch(e,{method:"GET",headers:i})}catch(e){throw fi(window.navigator.onLine?Yo:Qo)}n=vi(r.headers);try{return o=r.status,{headers:n,body:await r.json(),status:o}}catch(e){throw Co(fi(Vo),o,n)}}async sendPostRequestAsync(e,t){const r=t&&t.body||"",n=Ci(t);let o,i=0,s={};try{o=await fetch(e,{method:"POST",headers:n,body:r})}catch(e){throw fi(window.navigator.onLine?Wo:Qo)}s=vi(o.headers);try{return i=o.status,{headers:s,body:await o.json(),status:i}}catch(e){throw Co(fi(Vo),i,s)}}}function Ci(e){try{const t=new Headers;if(!e||!e.headers)return t;const r=e.headers;return Object.entries(r).forEach((([e,r])=>{t.append(e,r)})),t}catch(e){throw fi(di)}}function vi(e){try{const t={};return e.forEach(((e,r)=>{t[r]=e})),t}catch(e){throw fi(ui)}}function wi(e){return encodeURIComponent(Ti(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function Ii(e){return Ai(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function Ti(e){return Ai((new TextEncoder).encode(e))}function Ai(e){const t=Array.from(e,(e=>String.fromCodePoint(e))).join("");return btoa(t)}const ki="SHA-256",bi=new Uint8Array([1,0,1]),Si="0123456789abcdef",_i=new Uint32Array(1),Ri={name:"RSASSA-PKCS1-v1_5",hash:ki,modulusLength:2048,publicExponent:bi};async function Ei(e,t,r){t?.addQueueMeasurement(qn,r);const n=(new TextEncoder).encode(e);return window.crypto.subtle.digest(ki,n)}function Pi(e){return window.crypto.getRandomValues(e)}function Mi(){return window.crypto.getRandomValues(_i),_i[0]}function Oi(){const e=Date.now(),t=1024*Mi()+(1023&Mi()),r=new Uint8Array(16),n=Math.trunc(t/2**30),o=t&2**30-1,i=Mi();r[0]=e/2**40,r[1]=e/2**32,r[2]=e/2**24,r[3]=e/65536,r[4]=e/256,r[5]=e,r[6]=112|n>>>8,r[7]=n,r[8]=128|o>>>24,r[9]=o>>>16,r[10]=o>>>8,r[11]=o,r[12]=i>>>24,r[13]=i>>>16,r[14]=i>>>8,r[15]=i;let s="";for(let e=0;e<r.length;e++)s+=Si.charAt(r[e]>>>4),s+=Si.charAt(15&r[e]),3!==e&&5!==e&&7!==e&&9!==e||(s+="-");return s}async function Ni(e){return window.crypto.subtle.exportKey("jwk",e)}async function qi(e){const t=await Ei(e);return Ii(new Uint8Array(t))}const Hi="storage_not_supported",xi="stubbed_public_client_application_called",Li="in_mem_redirect_unavailable",Ui={[Hi]:"Given storage configuration option was not supported.",[xi]:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[Li]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."};class Bi extends G{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,Bi.prototype)}}function Ki(e){return new Bi(e,Ui[e])}function Di(){return window.parent!==window}function Fi(){return window.location.href.split("?")[0].split("#")[0]}function $i(){if("undefined"==typeof window)throw fi(Go)}function zi(e){if(!e)throw fi(ai)}function Gi(e){$i(),function(){if(jt.hashContainsKnownProperties(window.location.hash)&&Di())throw fi(qo)}(),function(){if("undefined"!=typeof window&&window.opener&&window.opener!==window&&"string"==typeof window.name&&0===window.name.indexOf(`${Kn}.`))throw fi(Ho)}(),zi(e)}function ji(e,t){if(Gi(e),function(e){if(Di()&&!e)throw fi(No)}(t.system.allowRedirectInIframe),t.cache.cacheLocation===Wn&&!t.cache.storeAuthStateInCookie)throw Ki(Li)}function Qi(e){const t=document.createElement("link");t.rel="preconnect",t.href=new URL(e).origin,t.crossOrigin="anonymous",document.head.appendChild(t),window.setTimeout((()=>{try{document.head.removeChild(t)}catch{}}),1e4)}const Wi="3.28.0";class Yi{static loggerCallback(e,t){switch(e){case L.Error:return void console.error(t);case L.Info:return void console.info(t);case L.Verbose:return void console.debug(t);case L.Warning:return void console.warn(t);default:return void console.log(t)}}constructor(t){let r;this.browserEnvironment="undefined"!=typeof window,this.config=function({auth:t,cache:r,system:n,telemetry:o},i){const s={clientId:e.EMPTY_STRING,authority:`${e.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:e.EMPTY_STRING,authorityMetadata:e.EMPTY_STRING,redirectUri:"undefined"!=typeof window?Fi():"",postLogoutRedirectUri:e.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:B,OIDCOptions:{serverResponseType:T.FRAGMENT,defaultScopes:[e.OPENID_SCOPE,e.PROFILE_SCOPE,e.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:D,tenant:e.EMPTY_STRING},skipAuthorityMetadataCache:!1,supportsNestedAppAuth:!1,instanceAware:!1},a={cacheLocation:Qn,temporaryCacheLocation:Qn,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!(!r||r.cacheLocation!==jn),claimsBasedCachingEnabled:!1},c={loggerCallback:()=>{},logLevel:L.Info,piiLoggingEnabled:!1},h={...{...ir,loggerOptions:c,networkClient:i?new yi:mr,navigationClient:new fo,loadFrameTimeout:0,windowHashTimeout:n?.loadFrameTimeout||6e4,iframeHashTimeout:n?.loadFrameTimeout||1e4,navigateFrameWait:0,redirectNavigationTimeout:3e4,asyncPopups:!1,allowRedirectInIframe:!1,allowNativeBroker:!1,nativeBrokerHandshakeTimeout:n?.nativeBrokerHandshakeTimeout||2e3,pollIntervalMilliseconds:30},...n,loggerOptions:n?.loggerOptions||c},l={application:{appName:e.EMPTY_STRING,appVersion:e.EMPTY_STRING},client:new Un};if(t?.protocolMode!==K&&t?.OIDCOptions&&new U(h.loggerOptions).warning(JSON.stringify(qt(Et))),t?.protocolMode&&t.protocolMode!==B&&h?.allowNativeBroker)throw qt(Pt);return{auth:{...s,...t,OIDCOptions:{...s.OIDCOptions,...t?.OIDCOptions}},cache:{...a,...r},system:h,telemetry:{...l,...o}}}(t,this.browserEnvironment);try{r=window[Qn]}catch(e){}const n=r?.getItem("msal.browser.log.level"),o=r?.getItem("msal.browser.log.pii")?.toLowerCase(),i="true"===o||"false"!==o&&void 0,s={...this.config.system.loggerOptions},a=n&&Object.keys(L).includes(n)?L[n]:void 0;a&&(s.loggerCallback=Yi.loggerCallback,s.logLevel=a),void 0!==i&&(s.piiLoggingEnabled=i),this.logger=new U(s,"@azure/msal-browser",Wi),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}class Vi extends Yi{getModuleName(){return Vi.MODULE_NAME}getId(){return Vi.ID}async initialize(){return this.available="undefined"!=typeof window,this.available}}Vi.MODULE_NAME="",Vi.ID="StandardOperatingContext";const Ji="missing_kid_error",Xi="missing_alg_error",Zi={[Ji]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[Xi]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class es extends G{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,es.prototype)}}function ts(e){return new es(e,Zi[e])}class rs{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw ts(Ji);if(!e.alg)throw ts(Xi);const t=new rs({typ:e.typ||"pop",kid:e.kid,alg:e.alg});return JSON.stringify(t)}}function ns(e){return(new TextDecoder).decode(function(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw fi(hi)}const r=atob(t);return Uint8Array.from(r,(e=>e.codePointAt(0)||0))}(e))}var os=r(14154).Promise;class is{constructor(){this.dbName=uo,this.version=1,this.tableName=go,this.dbOpen=!1}async open(){return new os(((e,t)=>{const r=window.indexedDB.open(this.dbName,this.version);r.addEventListener("upgradeneeded",(e=>{e.target.result.createObjectStore(this.tableName)})),r.addEventListener("success",(t=>{const r=t;this.db=r.target.result,this.dbOpen=!0,e()})),r.addEventListener("error",(()=>t(fi(ri))))}))}closeConnection(){const e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return this.open()}async getItem(e){return await this.validateDbIsOpen(),new os(((t,r)=>{if(!this.db)return r(fi(jo));const n=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);n.addEventListener("success",(e=>{const r=e;this.closeConnection(),t(r.target.result)})),n.addEventListener("error",(e=>{this.closeConnection(),r(e)}))}))}async setItem(e,t){return await this.validateDbIsOpen(),new os(((r,n)=>{if(!this.db)return n(fi(jo));const o=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);o.addEventListener("success",(()=>{this.closeConnection(),r()})),o.addEventListener("error",(e=>{this.closeConnection(),n(e)}))}))}async removeItem(e){return await this.validateDbIsOpen(),new os(((t,r)=>{if(!this.db)return r(fi(jo));const n=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);n.addEventListener("success",(()=>{this.closeConnection(),t()})),n.addEventListener("error",(e=>{this.closeConnection(),r(e)}))}))}async getKeys(){return await this.validateDbIsOpen(),new os(((e,t)=>{if(!this.db)return t(fi(jo));const r=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();r.addEventListener("success",(t=>{const r=t;this.closeConnection(),e(r.target.result)})),r.addEventListener("error",(e=>{this.closeConnection(),t(e)}))}))}async containsKey(e){return await this.validateDbIsOpen(),new os(((t,r)=>{if(!this.db)return r(fi(jo));const n=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);n.addEventListener("success",(e=>{const r=e;this.closeConnection(),t(1===r.target.result)})),n.addEventListener("error",(e=>{this.closeConnection(),r(e)}))}))}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new os(((e,t)=>{const r=window.indexedDB.deleteDatabase(uo),n=setTimeout((()=>t(!1)),200);r.addEventListener("success",(()=>(clearTimeout(n),e(!0)))),r.addEventListener("blocked",(()=>(clearTimeout(n),e(!0)))),r.addEventListener("error",(()=>(clearTimeout(n),t(!1))))}))}}class ss{constructor(){this.cache=new Map}getItem(e){return this.cache.get(e)||null}setItem(e,t){this.cache.set(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){const e=[];return this.cache.forEach(((t,r)=>{e.push(r)})),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}}class as{constructor(e){this.inMemoryCache=new ss,this.indexedDBCache=new is,this.logger=e}handleDatabaseAccessError(e){if(!(e instanceof mi&&e.errorCode===ri))throw e;this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.")}async getItem(e){const t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(e){this.handleDatabaseAccessError(e)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(e){this.handleDatabaseAccessError(e)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(e){this.handleDatabaseAccessError(e)}}async getKeys(){const e=this.inMemoryCache.getKeys();if(0===e.length)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(e){this.handleDatabaseAccessError(e)}return e}async containsKey(e){const t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(e){this.handleDatabaseAccessError(e)}return t}clearInMemory(){this.logger.verbose("Deleting in-memory keystore"),this.inMemoryCache.clear(),this.logger.verbose("In-memory keystore deleted")}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");const e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}class cs{constructor(e,t){this.logger=e,function(){if(!window)throw fi(Go);if(!window.crypto)throw fi(wo);if(!window.crypto.subtle)throw fi(wo,"crypto_subtle_undefined")}(),this.cache=new as(this.logger),this.performanceClient=t}createNewGuid(){return Oi()}base64Encode(e){return Ti(e)}base64Decode(e){return ns(e)}base64UrlEncode(e){return wi(e)}encodeKid(e){return this.base64UrlEncode(JSON.stringify({kid:e}))}async getPublicKeyThumbprint(e){const t=this.performanceClient?.startMeasurement(Tr,e.correlationId),r=await async function(e,t){return window.crypto.subtle.generateKey(Ri,e,t)}(cs.EXTRACTABLE,cs.POP_KEY_USAGES),n=await Ni(r.publicKey),o=hs({e:n.e,kty:n.kty,n:n.n}),i=await this.hashString(o),s=await Ni(r.privateKey),a=await async function(e){return window.crypto.subtle.importKey("jwk",e,Ri,!1,["sign"])}(s);return await this.cache.setItem(i,{privateKey:a,publicKey:r.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),t&&t.end({success:!0}),i}async removeTokenBindingKey(e){return await this.cache.removeItem(e),!await this.cache.containsKey(e)}async clearKeystore(){this.cache.clearInMemory();try{return await this.cache.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}async signJwt(e,t,r,n){const o=this.performanceClient?.startMeasurement(Ar,n),i=await this.cache.getItem(t);if(!i)throw fi(Xo);const s=await Ni(i.publicKey),a=hs(s),c=wi(JSON.stringify({kid:t})),h=wi(rs.getShrHeaderString({...r?.header,alg:s.alg,kid:c}));e.cnf={jwk:JSON.parse(a)};const l=`${h}.${wi(JSON.stringify(e))}`,d=(new TextEncoder).encode(l),u=await async function(e,t){return window.crypto.subtle.sign(Ri,e,t)}(i.privateKey,d),g=`${l}.${Ii(new Uint8Array(u))}`;return o&&o.end({success:!0}),g}async hashString(e){return qi(e)}}function hs(e){return JSON.stringify(e,Object.keys(e).sort())}cs.POP_KEY_USAGES=["sign","verify"],cs.EXTRACTABLE=!0;const ls=(e,t,r,n,o)=>(...i)=>{r.trace(`Executing function ${t}`);const s=n?.startMeasurement(t,o);if(o){const e=t+"CallCount";n?.incrementFields({[e]:1},o)}try{const n=e(...i);return s?.end({success:!0}),r.trace(`Returning result from ${t}`),n}catch(e){r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(e))}catch(e){r.trace("Unable to print error message.")}throw s?.end({success:!1},e),e}},ds=(e,t,r,n,o)=>(...i)=>{r.trace(`Executing function ${t}`);const s=n?.startMeasurement(t,o);if(o){const e=t+"CallCount";n?.incrementFields({[e]:1},o)}return n?.setPreQueueTime(t,o),e(...i).then((e=>(r.trace(`Returning result from ${t}`),s?.end({success:!0}),e))).catch((e=>{r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(e))}catch(e){r.trace("Unable to print error message.")}throw s?.end({success:!1},e),e}))};class us{constructor(e,t,r,n){this.networkInterface=e,this.logger=t,this.performanceClient=r,this.correlationId=n}async detectRegion(t,r){this.performanceClient?.addQueueMeasurement(In,this.correlationId);let n=t;if(n)r.region_source="3";else{const t=us.IMDS_OPTIONS;try{const o=await ds(this.getRegionFromIMDS.bind(this),Tn,this.logger,this.performanceClient,this.correlationId)(e.IMDS_VERSION,t);if(200===o.status&&(n=o.body,r.region_source="4"),400===o.status){const e=await ds(this.getCurrentVersion.bind(this),An,this.logger,this.performanceClient,this.correlationId)(t);if(!e)return r.region_source="1",null;const o=await ds(this.getRegionFromIMDS.bind(this),Tn,this.logger,this.performanceClient,this.correlationId)(e,t);200===o.status&&(n=o.body,r.region_source="4")}}catch(e){return r.region_source="1",null}}return n||(r.region_source="1"),n||null}async getRegionFromIMDS(t,r){return this.performanceClient?.addQueueMeasurement(Tn,this.correlationId),this.networkInterface.sendGetRequestAsync(`${e.IMDS_ENDPOINT}?api-version=${t}&format=text`,r,e.IMDS_TIMEOUT)}async getCurrentVersion(t){this.performanceClient?.addQueueMeasurement(An,this.correlationId);try{const r=await this.networkInterface.sendGetRequestAsync(`${e.IMDS_ENDPOINT}?format=json`,t);return 400===r.status&&r.body&&r.body["newest-versions"]&&r.body["newest-versions"].length>0?r.body["newest-versions"][0]:null}catch(e){return null}}}us.IMDS_OPTIONS={headers:{Metadata:"true"}};class gs{constructor(e,t,r,n,o,i,s,a){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=r,this.authorityOptions=n,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=o,this.performanceClient=s,this.correlationId=i,this.managedIdentity=a||!1,this.regionDiscovery=new us(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(t){if(t.HostNameAndPort.endsWith(e.CIAM_AUTH_URL))return 3;const r=t.PathSegments;if(r.length)switch(r[0].toLowerCase()){case e.ADFS:return 1;case e.DSTS:return 2}return 0}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new jt(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw Be(J)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw Be(J)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw Be(J)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw Be(Pe);return this.replacePath(this.metadata.end_session_endpoint)}throw Be(J)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw Be(J)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw Be(J)}canReplaceTenant(e){return 1===e.PathSegments.length&&!gs.reservedTenantDomains.has(e.PathSegments[0])&&0===this.getAuthorityType(e)&&this.protocolMode===B}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e;const r=new jt(this.metadata.canonical_authority).getUrlComponents(),n=r.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach(((e,o)=>{let i=n[o];if(0===o&&this.canReplaceTenant(r)){const e=new jt(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];i!==e&&(this.logger.verbose(`Replacing tenant domain name ${i} with id ${e}`),i=e)}e!==i&&(t=t.replace(`/${i}/`,`/${e}/`))})),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){const e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||1===this.authorityType||this.protocolMode!==B&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){this.performanceClient?.addQueueMeasurement(mn,this.correlationId);const e=this.getCurrentMetadataEntity(),t=await ds(this.updateCloudDiscoveryMetadata.bind(this),yn,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);const r=await ds(this.updateEndpointMetadata.bind(this),vn,this.logger,this.performanceClient,this.correlationId)(e);this.updateCachedMetadata(e,t,{source:r}),this.performanceClient?.addFields({cloudDiscoverySource:t,authorityEndpointSource:r},this.correlationId)}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e={aliases:[],preferred_cache:this.hostnameAndPort,preferred_network:this.hostnameAndPort,canonical_authority:this.canonicalAuthority,authorization_endpoint:"",token_endpoint:"",end_session_endpoint:"",issuer:"",aliasesFromNetwork:!1,endpointsFromNetwork:!1,expiresAt:st(),jwks_uri:""}),e}updateCachedMetadata(e,t,r){t!==M&&r?.source!==M&&(e.expiresAt=st(),e.canonical_authority=this.canonicalAuthority);const n=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(n,e),this.metadata=e}async updateEndpointMetadata(e){this.performanceClient?.addQueueMeasurement(vn,this.correlationId);const t=this.updateEndpointMetadataFromLocalSources(e);if(t)return t.source===N&&this.authorityOptions.azureRegionConfiguration?.azureRegion&&t.metadata&&(at(e,await ds(this.updateMetadataWithRegionalInformation.bind(this),wn,this.logger,this.performanceClient,this.correlationId)(t.metadata),!1),e.canonical_authority=this.canonicalAuthority),t.source;let r=await ds(this.getEndpointMetadataFromNetwork.bind(this),Cn,this.logger,this.performanceClient,this.correlationId)();if(r)return this.authorityOptions.azureRegionConfiguration?.azureRegion&&(r=await ds(this.updateMetadataWithRegionalInformation.bind(this),wn,this.logger,this.performanceClient,this.correlationId)(r)),at(e,r,!0),O;throw Be(Z,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");const t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),at(e,t,!1),{source:P};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{const t=this.getEndpointMetadataFromHardcodedValues();if(t)return at(e,t,!1),{source:N,metadata:t};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}const r=ht(e);return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!r?(this.logger.verbose("Found endpoint metadata in the cache."),{source:M}):(r&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new jt(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch(e){throw qt(At)}return null}async getEndpointMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(Cn,this.correlationId);const e={},t=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${t}`);try{const r=await this.networkInterface.sendGetRequestAsync(t,e),n=function(e){return e.hasOwnProperty("authorization_endpoint")&&e.hasOwnProperty("token_endpoint")&&e.hasOwnProperty("issuer")&&e.hasOwnProperty("jwks_uri")}(r.body);return n?r.body:(this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null)}catch(e){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`),null}}getEndpointMetadataFromHardcodedValues(){return this.hostnameAndPort in Qt?Qt[this.hostnameAndPort]:null}async updateMetadataWithRegionalInformation(t){this.performanceClient?.addQueueMeasurement(wn,this.correlationId);const r=this.authorityOptions.azureRegionConfiguration?.azureRegion;if(r){if(r!==e.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome="2",this.regionDiscoveryMetadata.region_used=r,gs.replaceWithRegionalInformation(t,r);const n=await ds(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),In,this.logger,this.performanceClient,this.correlationId)(this.authorityOptions.azureRegionConfiguration?.environmentRegion,this.regionDiscoveryMetadata);if(n)return this.regionDiscoveryMetadata.region_outcome="4",this.regionDiscoveryMetadata.region_used=n,gs.replaceWithRegionalInformation(t,n);this.regionDiscoveryMetadata.region_outcome="5"}return t}async updateCloudDiscoveryMetadata(e){this.performanceClient?.addQueueMeasurement(yn,this.correlationId);const t=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(t)return t;const r=await ds(this.getCloudDiscoveryMetadataFromNetwork.bind(this),fn,this.logger,this.performanceClient,this.correlationId)();if(r)return ct(e,r,!0),O;throw qt(kt)}updateCloudDiscoveryMetadataFromLocalSources(t){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||e.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||e.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${t.canonical_authority||e.NOT_APPLICABLE}`);const r=this.getCloudDiscoveryMetadataFromConfig();if(r)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),ct(t,r,!1),P;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{const e=(n=this.hostnameAndPort,Jt(Wt.metadata,n));if(e)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),ct(t,e,!1),N;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}var n;const o=ht(t);return this.isAuthoritySameType(t)&&t.aliasesFromNetwork&&!o?(this.logger.verbose("Found cloud discovery metadata in the cache."),M):(o&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(3===this.authorityType)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),gs.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");const e=Jt(JSON.parse(this.authorityOptions.cloudDiscoveryMetadata).metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),e)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),e;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch(e){throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),qt(Tt)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),gs.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(fn,this.correlationId);const t=`${e.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,r={};let n=null;try{const o=await this.networkInterface.sendGetRequestAsync(t,r);let i,s;if(function(e){return e.hasOwnProperty("tenant_discovery_endpoint")&&e.hasOwnProperty("metadata")}(o.body))i=o.body,s=i.metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${i.tenant_discovery_endpoint}`);else{if(!function(e){return e.hasOwnProperty("error")&&e.hasOwnProperty("error_description")}(o.body))return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${o.status}`),i=o.body,i.error===e.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${i.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${i.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),s=[]}this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),n=Jt(s,this.hostnameAndPort)}catch(e){if(e instanceof G)this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\nError: ${e.errorCode}\nError Description: ${e.errorMessage}`);else{const t=e;this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\nError: ${t.name}\nError Description: ${t.message}`)}return null}return n||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),n=gs.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),n}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter((e=>e&&jt.getDomainFromUrl(e).toLowerCase()===this.hostnameAndPort)).length>0}static generateAuthority(t,r){let n;if(r&&r.azureCloudInstance!==D){const t=r.tenant?r.tenant:e.DEFAULT_COMMON_TENANT;n=`${r.azureCloudInstance}/${t}/`}return n||t}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.managedIdentity)return e.DEFAULT_AUTHORITY_HOST;if(this.discoveryComplete())return this.metadata.preferred_cache;throw Be(J)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return Yt.has(e)}static isPublicCloudAuthority(t){return e.KNOWN_PUBLIC_CLOUDS.indexOf(t)>=0}static buildRegionalAuthorityString(t,r,n){const o=new jt(t);o.validateAsUri();const i=o.getUrlComponents();let s=`${r}.${i.HostNameAndPort}`;this.isPublicCloudAuthority(i.HostNameAndPort)&&(s=`${r}.${e.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);const a=jt.constructAuthorityUriFromObject({...o.getUrlComponents(),HostNameAndPort:s}).urlString;return n?`${a}?${n}`:a}static replaceWithRegionalInformation(e,t){const r={...e};return r.authorization_endpoint=gs.buildRegionalAuthorityString(r.authorization_endpoint,t),r.token_endpoint=gs.buildRegionalAuthorityString(r.token_endpoint,t),r.end_session_endpoint&&(r.end_session_endpoint=gs.buildRegionalAuthorityString(r.end_session_endpoint,t)),r}static transformCIAMAuthority(t){let r=t;const n=new jt(t).getUrlComponents();return 0===n.PathSegments.length&&n.HostNameAndPort.endsWith(e.CIAM_AUTH_URL)&&(r=`${r}${n.HostNameAndPort.split(".")[0]}${e.AAD_TENANT_DOMAIN_SUFFIX}`),r}}function ps(t){return t.endsWith(e.FORWARD_SLASH)?t:`${t}${e.FORWARD_SLASH}`}gs.reservedTenantDomains=new Set(["{tenant}","{tenantid}",f,C,y]);const ms="no_tokens_found",fs="native_account_unavailable",ys="refresh_token_expired",Cs="bad_token",vs=["interaction_required","consent_required","login_required",Cs],ws=["message_only","additional_action","basic_action","user_password_expired","consent_required","bad_token"],Is={[ms]:"No refresh token found in the cache. Please sign-in.",[fs]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",[ys]:"Refresh token has expired.",[Cs]:"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve."};class Ts extends G{constructor(t,r,n,o,i,s,a,c){super(t,r,n),Object.setPrototypeOf(this,Ts.prototype),this.timestamp=o||e.EMPTY_STRING,this.traceId=i||e.EMPTY_STRING,this.correlationId=s||e.EMPTY_STRING,this.claims=a||e.EMPTY_STRING,this.name="InteractionRequiredAuthError",this.errorNo=c}}function As(e,t,r){const n=!!e&&vs.indexOf(e)>-1,o=!!r&&ws.indexOf(r)>-1,i=!!t&&vs.some((e=>t.indexOf(e)>-1));return n||i||o}function ks(e){return new Ts(e,Is[e])}class bs{static setRequestState(t,r,n){const o=bs.generateLibraryState(t,n);return r?`${o}${e.RESOURCE_DELIM}${r}`:o}static generateLibraryState(e,t){if(!e)throw Be(Ie);const r={id:e.createNewGuid()};t&&(r.meta=t);const n=JSON.stringify(r);return e.base64Encode(n)}static parseRequestState(t,r){if(!t)throw Be(Ie);if(!r)throw Be(te);try{const n=r.split(e.RESOURCE_DELIM),o=n[0],i=n.length>1?n.slice(1).join(e.RESOURCE_DELIM):e.EMPTY_STRING,s=t.base64Decode(o),a=JSON.parse(s);return{userRequestState:i||e.EMPTY_STRING,libraryState:a}}catch(e){throw Be(te)}}}const Ss="home_account_id",_s="UPN";class Rs{constructor(){if(!window.localStorage)throw Ki(Hi)}getItem(e){return window.localStorage.getItem(e)}setItem(e,t){window.localStorage.setItem(e,t)}removeItem(e){window.localStorage.removeItem(e)}getKeys(){return Object.keys(window.localStorage)}containsKey(e){return window.localStorage.hasOwnProperty(e)}}class Es{constructor(){if(!window.sessionStorage)throw Ki(Hi)}getItem(e){return window.sessionStorage.getItem(e)}setItem(e,t){window.sessionStorage.setItem(e,t)}removeItem(e){window.sessionStorage.removeItem(e)}getKeys(){return Object.keys(window.sessionStorage)}containsKey(e){return window.sessionStorage.hasOwnProperty(e)}}function Ps(e,t){if(!t)return null;try{return bs.parseRequestState(e,t).libraryState.meta}catch(e){throw Be(te)}}class Ms{getItem(e){const t=`${encodeURIComponent(e)}`,r=document.cookie.split(";");for(let e=0;e<r.length;e++){const n=r[e],[o,...i]=decodeURIComponent(n).trim().split("="),s=i.join("=");if(o===t)return s}return""}setItem(e,t,r,n=!0){let o=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=Lax;`;if(r){const e=function(e){const t=new Date;return new Date(t.getTime()+864e5*e).toUTCString()}(r);o+=`expires=${e};`}n&&(o+="Secure;"),document.cookie=o}removeItem(e){this.setItem(e,"",-1)}getKeys(){const e=document.cookie.split(";"),t=[];return e.forEach((e=>{const r=decodeURIComponent(e).trim().split("=");t.push(r[0])})),t}containsKey(e){return this.getKeys().includes(e)}}var Os=r(14154).Promise;class Ns extends nr{constructor(e,t,r,n,o,i){super(e,r,n,o),this.cacheConfig=t,this.logger=n,this.internalStorage=new ss,this.browserStorage=this.setupBrowserStorage(this.cacheConfig.cacheLocation),this.temporaryCacheStorage=this.setupBrowserStorage(this.cacheConfig.temporaryCacheLocation),this.cookieStorage=new Ms,t.cacheMigrationEnabled&&(this.migrateCacheEntries(),this.createKeyMaps()),this.performanceClient=i}setupBrowserStorage(e){try{switch(e){case jn:return new Rs;case Qn:return new Es}}catch(e){this.logger.error(e)}return this.cacheConfig.cacheLocation=Wn,new ss}migrateCacheEntries(){const t=`${e.CACHE_PREFIX}.${h}`,r=`${e.CACHE_PREFIX}.${l}`,n=`${e.CACHE_PREFIX}.${u}`,o=`${e.CACHE_PREFIX}.${g}`,i=[this.browserStorage.getItem(t),this.browserStorage.getItem(r),this.browserStorage.getItem(n),this.browserStorage.getItem(o)];[h,l,u,g].forEach(((e,t)=>{const r=i[t];r&&this.setTemporaryCache(e,r,!0)}))}createKeyMaps(){this.logger.trace("BrowserCacheManager - createKeyMaps called.");const e=this.getItem(no),t=this.getItem(`${oo}.${this.clientId}`);e&&t?this.logger.verbose("BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration."):this.browserStorage.getKeys().forEach((e=>{if(this.isCredentialKey(e)){const t=this.getItem(e);if(t){const r=this.validateAndParseJson(t);if(r&&r.hasOwnProperty("credentialType"))switch(r.credentialType){case S.ID_TOKEN:if(Ze(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${e} found, saving key to token key map`);const t=r,n=this.updateCredentialCacheKey(e,t);return void this.addTokenKey(n,S.ID_TOKEN)}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${e}`);break;case S.ACCESS_TOKEN:case S.ACCESS_TOKEN_WITH_AUTH_SCHEME:if(Xe(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${e} found, saving key to token key map`);const t=r,n=this.updateCredentialCacheKey(e,t);return void this.addTokenKey(n,S.ACCESS_TOKEN)}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${e}`);break;case S.REFRESH_TOKEN:if(et(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${e} found, saving key to token key map`);const t=r,n=this.updateCredentialCacheKey(e,t);return void this.addTokenKey(n,S.REFRESH_TOKEN)}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${e}`)}}}if(this.isAccountKey(e)){const t=this.getItem(e);if(t){const r=this.validateAndParseJson(t);r&&$t.isAccountEntity(r)&&(this.logger.trace("BrowserCacheManager:createKeyMaps - account found, saving key to account key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${e} found, saving key to account key map`),this.addAccountKeyToMap(e))}}}))}validateAndParseJson(e){try{const t=JSON.parse(e);return t&&"object"==typeof t?t:null}catch(e){return null}}getItem(e){return this.browserStorage.getItem(e)}setItem(e,t){this.browserStorage.setItem(e,t)}getAccount(e,t){this.logger.trace("BrowserCacheManager.getAccount called");const r=this.getCachedAccountEntity(e);return this.updateOutdatedCachedAccount(e,r,t)}getCachedAccountEntity(e){const t=this.getItem(e);if(!t)return this.removeAccountKeyFromMap(e),null;const r=this.validateAndParseJson(t);return r&&$t.isAccountEntity(r)?nr.toObject(new $t,r):(this.removeAccountKeyFromMap(e),null)}setAccount(e){this.logger.trace("BrowserCacheManager.setAccount called");const t=e.generateAccountKey();this.setItem(t,JSON.stringify(e)),this.addAccountKeyToMap(t)}getAccountKeys(){this.logger.trace("BrowserCacheManager.getAccountKeys called");const e=this.getItem(no);return e?JSON.parse(e):(this.logger.verbose("BrowserCacheManager.getAccountKeys - No account keys found"),[])}addAccountKeyToMap(e){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);const t=this.getAccountKeys();-1===t.indexOf(e)?(t.push(e),this.setItem(no,JSON.stringify(t)),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added")):this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map")}removeAccountKeyFromMap(e){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);const t=this.getAccountKeys(),r=t.indexOf(e);r>-1?(t.splice(r,1),this.setItem(no,JSON.stringify(t)),this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")):this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}async removeAccount(e){super.removeAccount(e),this.removeAccountKeyFromMap(e)}removeOutdatedAccount(e){this.removeItem(e),this.removeAccountKeyFromMap(e)}removeIdToken(e){super.removeIdToken(e),this.removeTokenKey(e,S.ID_TOKEN)}async removeAccessToken(e){super.removeAccessToken(e),this.removeTokenKey(e,S.ACCESS_TOKEN)}removeRefreshToken(e){super.removeRefreshToken(e),this.removeTokenKey(e,S.REFRESH_TOKEN)}getTokenKeys(){this.logger.trace("BrowserCacheManager.getTokenKeys called");const e=this.getItem(`${oo}.${this.clientId}`);if(e){const t=this.validateAndParseJson(e);if(t&&t.hasOwnProperty("idToken")&&t.hasOwnProperty("accessToken")&&t.hasOwnProperty("refreshToken"))return t;this.logger.error("BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.")}else this.logger.verbose("BrowserCacheManager.getTokenKeys - No token keys found");return{idToken:[],accessToken:[],refreshToken:[]}}addTokenKey(e,t){this.logger.trace("BrowserCacheManager addTokenKey called");const r=this.getTokenKeys();switch(t){case S.ID_TOKEN:-1===r.idToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),r.idToken.push(e));break;case S.ACCESS_TOKEN:-1===r.accessToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - accessToken added to map"),r.accessToken.push(e));break;case S.REFRESH_TOKEN:-1===r.refreshToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),r.refreshToken.push(e));break;default:throw this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${t}`),Be(Te)}this.setItem(`${oo}.${this.clientId}`,JSON.stringify(r))}removeTokenKey(e,t){this.logger.trace("BrowserCacheManager removeTokenKey called");const r=this.getTokenKeys();switch(t){case S.ID_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${e} from map`);const n=r.idToken.indexOf(e);n>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - idToken removed from map"),r.idToken.splice(n,1)):this.logger.info("BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.");break;case S.ACCESS_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${e} from map`);const o=r.accessToken.indexOf(e);o>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - accessToken removed from map"),r.accessToken.splice(o,1)):this.logger.info("BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.");break;case S.REFRESH_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${e} from map`);const i=r.refreshToken.indexOf(e);i>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken removed from map"),r.refreshToken.splice(i,1)):this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.");break;default:throw this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${t}`),Be(Te)}this.setItem(`${oo}.${this.clientId}`,JSON.stringify(r))}getIdTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,S.ID_TOKEN),null;const r=this.validateAndParseJson(t);return r&&Ze(r)?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,S.ID_TOKEN),null)}setIdTokenCredential(e){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");const t=Qe(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,S.ID_TOKEN)}getAccessTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,S.ACCESS_TOKEN),null;const r=this.validateAndParseJson(t);return r&&Xe(r)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,S.ACCESS_TOKEN),null)}setAccessTokenCredential(e){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");const t=Qe(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,S.ACCESS_TOKEN)}getRefreshTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,S.REFRESH_TOKEN),null;const r=this.validateAndParseJson(t);return r&&et(r)?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,S.REFRESH_TOKEN),null)}setRefreshTokenCredential(e){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");const t=Qe(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,S.REFRESH_TOKEN)}getAppMetadata(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&((n=r)&&0===e.indexOf(_)&&n.hasOwnProperty("clientId")&&n.hasOwnProperty("environment"))?(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),r):(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null);var n}setAppMetadata(e){this.logger.trace("BrowserCacheManager.setAppMetadata called");const t=function({environment:e,clientId:t}){return[_,e,t].join(b).toLowerCase()}(e);this.setItem(t,JSON.stringify(e))}getServerTelemetry(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){const r=0===e.indexOf(q.CACHE_KEY);let n=!0;return t&&(n=t.hasOwnProperty("failedRequests")&&t.hasOwnProperty("errors")&&t.hasOwnProperty("cacheHits")),r&&n}(e,r)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),r):(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null)}setServerTelemetry(e,t){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t))}getAuthorityMetadata(e){const t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){return!!t&&0===e.indexOf(E)&&t.hasOwnProperty("aliases")&&t.hasOwnProperty("preferred_cache")&&t.hasOwnProperty("preferred_network")&&t.hasOwnProperty("canonical_authority")&&t.hasOwnProperty("authorization_endpoint")&&t.hasOwnProperty("token_endpoint")&&t.hasOwnProperty("issuer")&&t.hasOwnProperty("aliasesFromNetwork")&&t.hasOwnProperty("endpointsFromNetwork")&&t.hasOwnProperty("expiresAt")&&t.hasOwnProperty("jwks_uri")}(e,r)?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),r):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter((e=>this.isAuthorityMetadata(e)))}setWrapperMetadata(e,t){this.internalStorage.setItem(io,e),this.internalStorage.setItem(so,t)}getWrapperMetadata(){return[this.internalStorage.getItem(io)||e.EMPTY_STRING,this.internalStorage.getItem(so)||e.EMPTY_STRING]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(){const e=this.generateCacheKey(m),t=this.getItem(e);if(!t){this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema");const e=this.generateCacheKey(p),t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null;const r=this.getAccountInfoFilteredBy({localAccountId:t});return r?(this.logger.trace("BrowserCacheManager.getActiveAccount: Legacy active account cache schema found"),this.logger.trace("BrowserCacheManager.getActiveAccount: Adding active account filters cache schema"),this.setActiveAccount(r),r):null}const r=this.validateAndParseJson(t);return r?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoFilteredBy({homeAccountId:r.homeAccountId,localAccountId:r.localAccountId,tenantId:r.tenantId})):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e){const t=this.generateCacheKey(m),r=this.generateCacheKey(p);if(e){this.logger.verbose("setActiveAccount: Active account set");const n={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId,tenantId:e.tenantId};this.browserStorage.setItem(t,JSON.stringify(n)),this.browserStorage.setItem(r,e.localAccountId)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(t),this.browserStorage.removeItem(r)}getThrottlingCache(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){let r=!1;e&&(r=0===e.indexOf(x));let n=!0;return t&&(n=t.hasOwnProperty("throttleTime")),r&&n}(e,r)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),r):(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null)}setThrottlingCache(e,t){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t))}getTemporaryCache(e,t){const r=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){const e=this.cookieStorage.getItem(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),e}const n=this.temporaryCacheStorage.getItem(r);if(!n){if(this.cacheConfig.cacheLocation===jn){const e=this.browserStorage.getItem(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),e}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),n}setTemporaryCache(e,t,r){const n=r?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(n,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.cookieStorage.setItem(n,t,void 0,this.cacheConfig.secureCookies))}removeItem(e){this.browserStorage.removeItem(e)}removeTemporaryItem(e){this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.cookieStorage.removeItem(e))}getKeys(){return this.browserStorage.getKeys()}async clear(){await this.removeAllAccounts(),this.removeAppMetadata(),this.temporaryCacheStorage.getKeys().forEach((t=>{-1===t.indexOf(e.CACHE_PREFIX)&&-1===t.indexOf(this.clientId)||this.removeTemporaryItem(t)})),this.browserStorage.getKeys().forEach((t=>{-1===t.indexOf(e.CACHE_PREFIX)&&-1===t.indexOf(this.clientId)||this.browserStorage.removeItem(t)})),this.internalStorage.clear()}async clearTokensAndKeysWithClaims(e,t){e.addQueueMeasurement(En,t);const r=this.getTokenKeys(),n=[];r.accessToken.forEach((e=>{const t=this.getAccessTokenCredential(e);t?.requestedClaimsHash&&e.includes(t.requestedClaimsHash.toLowerCase())&&n.push(this.removeAccessToken(e))})),await Os.all(n),n.length>0&&this.logger.warning(`${n.length} access tokens with claims in the cache keys have been removed from the cache.`)}generateCacheKey(t){return this.validateAndParseJson(t)?JSON.stringify(t):Ht.startsWith(t,e.CACHE_PREFIX)||Ht.startsWith(t,d)?t:`${e.CACHE_PREFIX}.${this.clientId}.${t}`}generateAuthorityKey(e){const{libraryState:{id:t}}=bs.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`authority.${t}`)}generateNonceKey(e){const{libraryState:{id:t}}=bs.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`nonce.id_token.${t}`)}generateStateKey(e){const{libraryState:{id:t}}=bs.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${Yn}.${t}`)}getCachedAuthority(e){const t=this.generateStateKey(e),r=this.getTemporaryCache(t);if(!r)return null;const n=this.generateAuthorityKey(r);return this.getTemporaryCache(n)}updateCacheEntries(e,t,r,n,o){this.logger.trace("BrowserCacheManager.updateCacheEntries called");const i=this.generateStateKey(e);this.setTemporaryCache(i,e,!1);const s=this.generateNonceKey(e);this.setTemporaryCache(s,t,!1);const a=this.generateAuthorityKey(e);if(this.setTemporaryCache(a,r,!1),o){const e={credential:o.homeAccountId,type:Ss};this.setTemporaryCache(eo,JSON.stringify(e),!0)}else if(n){const e={credential:n,type:_s};this.setTemporaryCache(eo,JSON.stringify(e),!0)}}resetRequestCache(e){this.logger.trace("BrowserCacheManager.resetRequestCache called"),e&&(this.temporaryCacheStorage.getKeys().forEach((t=>{-1!==t.indexOf(e)&&this.removeTemporaryItem(t)})),this.removeTemporaryItem(this.generateStateKey(e)),this.removeTemporaryItem(this.generateNonceKey(e)),this.removeTemporaryItem(this.generateAuthorityKey(e))),this.removeTemporaryItem(this.generateCacheKey(Xn)),this.removeTemporaryItem(this.generateCacheKey(Vn)),this.removeTemporaryItem(this.generateCacheKey(Jn)),this.removeTemporaryItem(this.generateCacheKey(to)),this.removeTemporaryItem(this.generateCacheKey(eo)),this.removeTemporaryItem(this.generateCacheKey(ro)),this.setInteractionInProgress(!1)}cleanRequestByState(t){if(this.logger.trace("BrowserCacheManager.cleanRequestByState called"),t){const r=this.generateStateKey(t),n=this.temporaryCacheStorage.getItem(r);this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${n}`),this.resetRequestCache(n||e.EMPTY_STRING)}}cleanRequestByInteractionType(e){this.logger.trace("BrowserCacheManager.cleanRequestByInteractionType called"),this.temporaryCacheStorage.getKeys().forEach((t=>{if(-1===t.indexOf(Yn))return;const r=this.temporaryCacheStorage.getItem(t);if(!r)return;const n=Ps(this.cryptoImpl,r);n&&n.interactionType===e&&(this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${r}`),this.resetRequestCache(r))})),this.setInteractionInProgress(!1)}cacheCodeRequest(e){this.logger.trace("BrowserCacheManager.cacheCodeRequest called");const t=Ti(JSON.stringify(e));this.setTemporaryCache(Xn,t,!0)}getCachedRequest(e){this.logger.trace("BrowserCacheManager.getCachedRequest called");const t=this.getTemporaryCache(Xn,!0);if(!t)throw fi(Ko);let r;try{r=JSON.parse(ns(t))}catch(e){throw this.logger.errorPii(`Attempted to parse: ${t}`),this.logger.error(`Parsing cached token request threw with error: ${e}`),fi(Do)}if(this.removeTemporaryItem(this.generateCacheKey(Xn)),!r.authority){const t=this.generateAuthorityKey(e),n=this.getTemporaryCache(t);if(!n)throw fi(Fo);r.authority=n}return r}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");const e=this.getTemporaryCache(ro,!0);if(!e)return this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null;return this.validateAndParseJson(e)||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null)}isInteractionInProgress(e){const t=this.getInteractionInProgress();return e?t===this.clientId:!!t}getInteractionInProgress(){const t=`${e.CACHE_PREFIX}.${Zn}`;return this.getTemporaryCache(t,!1)}setInteractionInProgress(t){const r=`${e.CACHE_PREFIX}.${Zn}`;if(t){if(this.getInteractionInProgress())throw fi(_o);this.setTemporaryCache(r,this.clientId,!1)}else t||this.getInteractionInProgress()!==this.clientId||this.removeTemporaryItem(r)}getLegacyLoginHint(){const e=this.getTemporaryCache(d);e&&(this.browserStorage.removeItem(d),this.logger.verbose("Cached ADAL id token retrieved."));const t=this.getTemporaryCache(h,!0);t&&(this.browserStorage.removeItem(this.generateCacheKey(h)),this.logger.verbose("Cached MSAL.js v1 id token retrieved"));const r=t||e;if(r){const e=$e(r,ns);if(e.preferred_username)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint"),e.preferred_username;if(e.upn)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint"),e.upn;this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.")}return null}updateCredentialCacheKey(e,t){const r=Qe(t);if(e!==r){const n=this.getItem(e);if(n)return this.browserStorage.removeItem(e),this.setItem(r,n),this.logger.verbose(`Updated an outdated ${t.credentialType} cache key`),r;this.logger.error(`Attempted to update an outdated ${t.credentialType} cache key but no item matching the outdated key was found in storage`)}return e}async hydrateCache(e,t){const r=We(e.account?.homeAccountId,e.account?.environment,e.idToken,this.clientId,e.tenantId);let n;t.claims&&(n=await this.cryptoImpl.hashString(t.claims));const o={idToken:r,accessToken:Ye(e.account?.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),e.expiresOn?e.expiresOn.getTime()/1e3:0,e.extExpiresOn?e.extExpiresOn.getTime()/1e3:0,ns,void 0,e.tokenType,void 0,t.sshKid,t.claims,n)};return this.saveCacheRecord(o)}async saveCacheRecord(e,t,r){try{await super.saveCacheRecord(e,t,r)}catch(e){if(e instanceof tr&&this.performanceClient&&r)try{const e=this.getTokenKeys();this.performanceClient.addFields({cacheRtCount:e.refreshToken.length,cacheIdCount:e.idToken.length,cacheAtCount:e.accessToken.length},r)}catch(e){}throw e}}}const qs="msal:initializeEnd",Hs="msal:loginStart",xs="msal:loginSuccess",Ls="msal:loginFailure",Us="msal:acquireTokenStart",Bs="msal:acquireTokenSuccess",Ks="msal:acquireTokenFailure",Ds="msal:acquireTokenByCodeFailure",Fs="msal:handleRedirectEnd",$s="msal:popupOpened",zs="msal:logoutStart",Gs="msal:logoutSuccess",js="msal:logoutFailure",Qs="msal:logoutEnd";class Ws{constructor(e){this.eventCallbacks=new Map,this.logger=e||new U({})}addEventCallback(e,t,r){if("undefined"!=typeof window){const n=r||Oi();return this.eventCallbacks.has(n)?(this.logger.error(`Event callback with id: ${n} is already registered. Please provide a unique id or remove the existing callback and try again.`),null):(this.eventCallbacks.set(n,[e,t||[]]),this.logger.verbose(`Event callback registered with id: ${n}`),n)}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}emitEvent(e,t,r,n){if("undefined"!=typeof window){const o={eventType:e,interactionType:t||null,payload:r||null,error:n||null,timestamp:Date.now()};this.eventCallbacks.forEach((([t,r],n)=>{(0===r.length||r.includes(e))&&(this.logger.verbose(`Emitting event to callback ${n}: ${e}`),t.apply(null,[o]))}))}}}class Ys extends G{constructor(e,t,r,n,o){super(e,t,r),this.name="ServerError",this.errorNo=n,this.status=o,Object.setPrototypeOf(this,Ys.prototype)}}class Vs{static generateThrottlingStorageKey(e){return`${x}.${JSON.stringify(e)}`}static preProcess(t,r){const n=Vs.generateThrottlingStorageKey(r),o=t.getThrottlingCache(n);if(o){if(o.throttleTime<Date.now())return void t.removeItem(n);throw new Ys(o.errorCodes?.join(" ")||e.EMPTY_STRING,o.errorMessage,o.subError)}}static postProcess(e,t,r){if(Vs.checkResponseStatus(r)||Vs.checkResponseForRetryAfter(r)){const n={throttleTime:Vs.calculateThrottleTime(parseInt(r.headers[i])),error:r.body.error,errorCodes:r.body.error_codes,errorMessage:r.body.error_description,subError:r.body.suberror};e.setThrottlingCache(Vs.generateThrottlingStorageKey(t),n)}}static checkResponseStatus(e){return 429===e.status||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return!!e.headers&&e.headers.hasOwnProperty(i)&&(e.status<200||e.status>=300)}static calculateThrottleTime(e){const t=e<=0?0:e,r=Date.now()/1e3;return Math.floor(1e3*Math.min(r+(t||60),r+3600))}static removeThrottle(e,t,r,n){const o={clientId:t,authority:r.authority,scopes:r.scopes,homeAccountIdentifier:n,claims:r.claims,authenticationScheme:r.authenticationScheme,resourceRequestMethod:r.resourceRequestMethod,resourceRequestUri:r.resourceRequestUri,shrClaims:r.shrClaims,sshKid:r.sshKid},i=this.generateThrottlingStorageKey(o);e.removeItem(i)}}const Js="client_id",Xs="redirect_uri",Zs="response_type",ea="token_type",ta="req_cnf",ra="return_spa_code",na="x-client-xtra-sku",oa="brk_client_id",ia="brk_redirect_uri";class sa{static validateRedirectUri(e){if(!e)throw qt(lt)}static validatePrompt(e){const t=[];for(const e in w)t.push(w[e]);if(t.indexOf(e)<0)throw qt(ft)}static validateClaims(e){try{JSON.parse(e)}catch(e){throw qt(yt)}}static validateCodeChallengeParams(e,t){if(!e||!t)throw qt(It);this.validateCodeChallengeMethod(t)}static validateCodeChallengeMethod(e){if([I.PLAIN,I.S256].indexOf(e)<0)throw qt(wt)}}class aa{constructor(e,t){this.parameters=new Map,this.performanceClient=t,this.correlationId=e}addResponseTypeCode(){this.parameters.set(Zs,encodeURIComponent(e.CODE_RESPONSE_TYPE))}addResponseTypeForTokenAndIdToken(){this.parameters.set(Zs,encodeURIComponent(`${e.TOKEN_RESPONSE_TYPE} ${e.ID_TOKEN_RESPONSE_TYPE}`))}addResponseMode(e){this.parameters.set("response_mode",encodeURIComponent(e||A.QUERY))}addNativeBroker(){this.parameters.set("nativebroker",encodeURIComponent("1"))}addScopes(e,r=!0,n=t){!r||n.includes("openid")||e.includes("openid")||n.push("openid");const o=r?[...e||[],...n]:e||[],i=new xt(o);this.parameters.set("scope",encodeURIComponent(i.printScopes()))}addClientId(e){this.parameters.set(Js,encodeURIComponent(e))}addRedirectUri(e){sa.validateRedirectUri(e),this.parameters.set(Xs,encodeURIComponent(e))}addPostLogoutRedirectUri(e){sa.validateRedirectUri(e),this.parameters.set("post_logout_redirect_uri",encodeURIComponent(e))}addIdTokenHint(e){this.parameters.set("id_token_hint",encodeURIComponent(e))}addDomainHint(e){this.parameters.set("domain_hint",encodeURIComponent(e))}addLoginHint(e){this.parameters.set("login_hint",encodeURIComponent(e))}addCcsUpn(e){this.parameters.set(s,encodeURIComponent(`UPN:${e}`))}addCcsOid(e){this.parameters.set(s,encodeURIComponent(`Oid:${e.uid}@${e.utid}`))}addSid(e){this.parameters.set("sid",encodeURIComponent(e))}addClaims(e,t){const r=this.addClientCapabilitiesToClaims(e,t);sa.validateClaims(r),this.parameters.set("claims",encodeURIComponent(r))}addCorrelationId(e){this.parameters.set("client-request-id",encodeURIComponent(e))}addLibraryInfo(e){this.parameters.set("x-client-SKU",e.sku),this.parameters.set("x-client-VER",e.version),e.os&&this.parameters.set("x-client-OS",e.os),e.cpu&&this.parameters.set("x-client-CPU",e.cpu)}addApplicationTelemetry(e){e?.appName&&this.parameters.set("x-app-name",e.appName),e?.appVersion&&this.parameters.set("x-app-ver",e.appVersion)}addPrompt(e){sa.validatePrompt(e),this.parameters.set("prompt",encodeURIComponent(e))}addState(e){e&&this.parameters.set("state",encodeURIComponent(e))}addNonce(e){this.parameters.set("nonce",encodeURIComponent(e))}addCodeChallengeParams(e,t){if(sa.validateCodeChallengeParams(e,t),!e||!t)throw qt(It);this.parameters.set("code_challenge",encodeURIComponent(e)),this.parameters.set("code_challenge_method",encodeURIComponent(t))}addAuthorizationCode(e){this.parameters.set("code",encodeURIComponent(e))}addDeviceCode(e){this.parameters.set("device_code",encodeURIComponent(e))}addRefreshToken(e){this.parameters.set("refresh_token",encodeURIComponent(e))}addCodeVerifier(e){this.parameters.set("code_verifier",encodeURIComponent(e))}addClientSecret(e){this.parameters.set("client_secret",encodeURIComponent(e))}addClientAssertion(e){e&&this.parameters.set("client_assertion",encodeURIComponent(e))}addClientAssertionType(e){e&&this.parameters.set("client_assertion_type",encodeURIComponent(e))}addOboAssertion(e){this.parameters.set("assertion",encodeURIComponent(e))}addRequestTokenUse(e){this.parameters.set("requested_token_use",encodeURIComponent(e))}addGrantType(e){this.parameters.set("grant_type",encodeURIComponent(e))}addClientInfo(){this.parameters.set("client_info","1")}addExtraQueryParameters(e){Object.entries(e).forEach((([e,t])=>{!this.parameters.has(e)&&t&&this.parameters.set(e,t)}))}addClientCapabilitiesToClaims(e,t){let r;if(e)try{r=JSON.parse(e)}catch(e){throw qt(yt)}else r={};return t&&t.length>0&&(r.hasOwnProperty(v)||(r[v]={}),r[v].xms_cc={values:t}),JSON.stringify(r)}addUsername(e){this.parameters.set("username",encodeURIComponent(e))}addPassword(e){this.parameters.set("password",encodeURIComponent(e))}addPopToken(e){e&&(this.parameters.set(ea,H.POP),this.parameters.set(ta,encodeURIComponent(e)))}addSshJwk(e){e&&(this.parameters.set(ea,H.SSH),this.parameters.set(ta,encodeURIComponent(e)))}addServerTelemetry(e){this.parameters.set("x-client-current-telemetry",e.generateCurrentRequestHeaderValue()),this.parameters.set("x-client-last-telemetry",e.generateLastRequestHeaderValue())}addThrottling(){this.parameters.set("x-ms-lib-capability","retry-after, h429")}addLogoutHint(e){this.parameters.set("logout_hint",encodeURIComponent(e))}addBrokerParameters(e){const t={};t[oa]=e.brokerClientId,t[ia]=e.brokerRedirectUri,this.addExtraQueryParameters(t)}createQueryString(){const e=new Array;return this.parameters.forEach(((t,r)=>{e.push(`${r}=${t}`)})),function(e,t,r){if(!t)return;const n=e.get(Js);n&&e.has(oa)&&r?.addFields({embeddedClientId:n,embeddedRedirectUri:e.get(Xs)},t)}(this.parameters,this.correlationId,this.performanceClient),e.join("&")}}async function ca(e,t,r,n,o,i,s){s?.addQueueMeasurement(pn,i);const a=gs.transformCIAMAuthority(ps(e)),c=new gs(a,t,r,n,o,i,s);try{return await ds(c.resolveEndpointsAsync.bind(c),mn,o,s,i)(),c}catch(e){throw Be(J)}}class ha{constructor(e,t){this.config=function({authOptions:e,systemOptions:t,loggerOptions:r,cacheOptions:n,storageInterface:o,networkInterface:i,cryptoInterface:s,clientCredentials:a,libraryInfo:c,telemetry:h,serverTelemetryManager:l,persistencePlugin:d,serializableCache:u}){const g={...sr,...r};return{authOptions:(p=e,{clientCapabilities:[],azureCloudOptions:dr,skipAuthorityMetadataCache:!1,instanceAware:!1,...p}),systemOptions:{...ir,...t},loggerOptions:g,cacheOptions:{...ar,...n},storageInterface:o||new or(e.clientId,Ke,new U(g)),networkInterface:i||cr,cryptoInterface:s||Ke,clientCredentials:a||lr,libraryInfo:{...hr,...c},telemetry:{...ur,...h},serverTelemetryManager:l||null,persistencePlugin:d||null,serializableCache:u||null};var p}(e),this.logger=new U(this.config.loggerOptions,De,Fe),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(t){const r={};if(r[o]=e.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&t)switch(t.type){case Ss:try{const e=Ut(t.credential);r[s]=`Oid:${e.uid}@${e.utid}`}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case _s:r[s]=`UPN: ${t.credential}`}return r}async executePostToTokenEndpoint(e,t,r,n,o,i){i&&this.performanceClient?.addQueueMeasurement(i,o);const s=await this.sendPostRequest(n,e,{body:t,headers:r},o);return this.config.serverTelemetryManager&&s.status<500&&429!==s.status&&this.config.serverTelemetryManager.clearTelemetryCache(),s}async sendPostRequest(e,t,r,n){let i;Vs.preProcess(this.cacheManager,e);try{i=await ds(this.networkClient.sendPostRequestAsync.bind(this.networkClient),Mr,this.logger,this.performanceClient,n)(t,r);const e=i.headers||{};this.performanceClient?.addFields({refreshTokenSize:i.body.refresh_token?.length||0,httpVerToken:e[c]||"",requestId:e[a]||""},n)}catch(e){if(e instanceof yo){const t=e.responseHeaders;throw t&&this.performanceClient?.addFields({httpVerToken:t[c]||"",requestId:t[a]||"",contentTypeHeader:t[o]||void 0,contentLengthHeader:t["Content-Length"]||void 0,httpStatus:e.httpStatus},n),e.error}throw e instanceof G?e:Be(X)}return Vs.postProcess(this.cacheManager,e,i),i}async updateAuthority(e,t){this.performanceClient?.addQueueMeasurement(on,t);const r=`https://${e}/${this.authority.tenant}/`,n=await ca(r,this.networkClient,this.cacheManager,this.authority.options,this.logger,t,this.performanceClient);this.authority=n}createTokenQueryParameters(e){const t=new aa(e.correlationId,this.performanceClient);return e.embeddedClientId&&t.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),e.tokenQueryParameters&&t.addExtraQueryParameters(e.tokenQueryParameters),t.addCorrelationId(e.correlationId),t.createQueryString()}}class la{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){this.performanceClient?.addQueueMeasurement(ln,e.correlationId);const r=await ds(this.generateKid.bind(this),ln,t,this.performanceClient,e.correlationId)(e),n=this.cryptoUtils.base64UrlEncode(JSON.stringify(r));return{kid:r.kid,reqCnfString:n}}async generateKid(e){return this.performanceClient?.addQueueMeasurement(dn,e.correlationId),{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:"sw"}}async signPopToken(e,t,r){return this.signPayload(e,t,r)}async signPayload(e,t,r,n){const{resourceRequestMethod:o,resourceRequestUri:i,shrClaims:s,shrNonce:a,shrOptions:c}=r,h=i?new jt(i):void 0,l=h?.getUrlComponents();return this.cryptoUtils.signJwt({at:e,ts:Ge(),m:o?.toUpperCase(),u:l?.HostNameAndPort,nonce:a||this.cryptoUtils.createNewGuid(),p:l?.AbsolutePath,q:l?.QueryString?[[],l.QueryString]:void 0,client_claims:s||void 0,...n},t,c,r.correlationId)}}class da{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}class ua{constructor(e,t,r,n,o,i,s){this.clientId=e,this.cacheStorage=t,this.cryptoObj=r,this.logger=n,this.serializableCache=o,this.persistencePlugin=i,this.performanceClient=s}validateServerAuthorizationCodeResponse(e,t){if(!e.state||!t)throw e.state?Be(ne,"Cached State"):Be(ne,"Server State");let r,n;try{r=decodeURIComponent(e.state)}catch(t){throw Be(te,e.state)}try{n=decodeURIComponent(t)}catch(t){throw Be(te,e.state)}if(r!==n)throw Be(re);if(e.error||e.error_description||e.suberror){const t=function(e){const t=e.error_uri?.lastIndexOf("code=");return t&&t>=0?e.error_uri?.substring(t+5):void 0}(e);if(As(e.error,e.error_description,e.suberror))throw new Ts(e.error||"",e.error_description,e.suberror,e.timestamp||"",e.trace_id||"",e.correlation_id||"",e.claims||"",t);throw new Ys(e.error||"",e.error_description,e.suberror,t)}}validateTokenResponse(t,r){if(t.error||t.error_description||t.suberror){const n=`Error(s): ${t.error_codes||e.NOT_AVAILABLE} - Timestamp: ${t.timestamp||e.NOT_AVAILABLE} - Description: ${t.error_description||e.NOT_AVAILABLE} - Correlation ID: ${t.correlation_id||e.NOT_AVAILABLE} - Trace ID: ${t.trace_id||e.NOT_AVAILABLE}`,o=t.error_codes?.length?t.error_codes[0]:void 0,i=new Ys(t.error,n,t.suberror,o,t.status);if(r&&t.status&&t.status>=500&&t.status<=599)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\n${i}`);if(r&&t.status&&t.status>=400&&t.status<=499)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\n${i}`);if(As(t.error,t.error_description,t.suberror))throw new Ts(t.error,t.error_description,t.suberror,t.timestamp||e.EMPTY_STRING,t.trace_id||e.EMPTY_STRING,t.correlation_id||e.EMPTY_STRING,t.claims||e.EMPTY_STRING,o);throw i}}async handleServerTokenResponse(t,r,n,o,i,s,a,c,h){let l,d;if(this.performanceClient?.addQueueMeasurement(un,t.correlation_id),t.id_token){if(l=$e(t.id_token||e.EMPTY_STRING,this.cryptoObj.base64Decode),i&&i.nonce&&l.nonce!==i.nonce)throw Be(oe);if(o.maxAge||0===o.maxAge){const e=l.auth_time;if(!e)throw Be(ie);ze(e,o.maxAge)}}this.homeAccountIdentifier=$t.generateHomeAccountId(t.client_info||e.EMPTY_STRING,r.authorityType,this.logger,this.cryptoObj,l),i&&i.state&&(d=bs.parseRequestState(this.cryptoObj,i.state)),t.key_id=t.key_id||o.sshKid||void 0;const u=this.generateCacheRecord(t,r,n,o,l,s,i);let g;try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),g=new da(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(g)),a&&!c&&u.account){const e=u.account.generateAccountKey();if(!this.cacheStorage.getAccount(e,this.logger))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),await ua.generateAuthenticationResult(this.cryptoObj,r,u,!1,o,l,d,void 0,h)}await this.cacheStorage.saveCacheRecord(u,o.storeInCache,o.correlationId)}finally{this.persistencePlugin&&this.serializableCache&&g&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(g))}return ua.generateAuthenticationResult(this.cryptoObj,r,u,!1,o,l,d,t,h)}generateCacheRecord(e,t,r,n,o,i,s){const a=t.getPreferredCache();if(!a)throw Be(ve);const c=Ft(o);let h,l;e.id_token&&o&&(h=We(this.homeAccountIdentifier,a,e.id_token,this.clientId,c||""),l=ga(this.cacheStorage,t,this.homeAccountIdentifier,this.cryptoObj.base64Decode,o,e.client_info,a,c,s,void 0,this.logger));let d=null;if(e.access_token){const o=e.scope?xt.fromString(e.scope):new xt(n.scopes||[]),s=("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0,h=("string"==typeof e.ext_expires_in?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,l=("string"==typeof e.refresh_in?parseInt(e.refresh_in,10):e.refresh_in)||void 0,u=r+s,g=u+h,p=l&&l>0?r+l:void 0;d=Ye(this.homeAccountIdentifier,a,e.access_token,this.clientId,c||t.tenant||"",o.printScopes(),u,g,this.cryptoObj.base64Decode,p,e.token_type,i,e.key_id,n.claims,n.requestedClaimsHash)}let u=null;if(e.refresh_token){let t;e.refresh_token_expires_in&&(t=r+("string"==typeof e.refresh_token_expires_in?parseInt(e.refresh_token_expires_in,10):e.refresh_token_expires_in)),u=Ve(this.homeAccountIdentifier,a,e.refresh_token,this.clientId,e.foci,i,t)}let g=null;return e.foci&&(g={clientId:this.clientId,environment:a,familyId:e.foci}),{account:l,idToken:h,accessToken:d,refreshToken:u,appMetadata:g}}static async generateAuthenticationResult(t,r,n,o,i,s,a,c,h){let l,d,u=e.EMPTY_STRING,g=[],p=null,m=e.EMPTY_STRING;if(n.accessToken){if(n.accessToken.tokenType!==H.POP||i.popKid)u=n.accessToken.secret;else{const e=new la(t),{secret:r,keyId:o}=n.accessToken;if(!o)throw Be(Me);u=await e.signPopToken(r,o,i)}g=xt.fromString(n.accessToken.target).asArray(),p=new Date(1e3*Number(n.accessToken.expiresOn)),l=new Date(1e3*Number(n.accessToken.extendedExpiresOn)),n.accessToken.refreshOn&&(d=new Date(1e3*Number(n.accessToken.refreshOn)))}n.appMetadata&&(m=n.appMetadata.familyId===R?R:"");const f=s?.oid||s?.sub||"",y=s?.tid||"";c?.spa_accountid&&n.account&&(n.account.nativeAccountId=c?.spa_accountid);const C=n.account?Dt(n.account.getAccountInfo(),void 0,s,n.idToken?.secret):null;return{authority:r.canonicalAuthority,uniqueId:f,tenantId:y,scopes:g,account:C,idToken:n?.idToken?.secret||"",idTokenClaims:s||{},accessToken:u,fromCache:o,expiresOn:p,extExpiresOn:l,refreshOn:d,correlationId:i.correlationId,requestId:h||e.EMPTY_STRING,familyId:m,tokenType:n.accessToken?.tokenType||e.EMPTY_STRING,state:a?a.userRequestState:e.EMPTY_STRING,cloudGraphHostName:n.account?.cloudGraphHostName||e.EMPTY_STRING,msGraphHost:n.account?.msGraphHost||e.EMPTY_STRING,code:c?.spa_code,fromNativeBroker:!1}}}function ga(e,t,r,n,o,i,s,a,c,h,l){l?.verbose("setCachedAccount called");const d=e.getAccountKeys().find((e=>e.startsWith(r)));let u=null;d&&(u=e.getAccount(d,l));const g=u||$t.createAccount({homeAccountId:r,idTokenClaims:o,clientInfo:i,environment:s,cloudGraphHostName:c?.cloud_graph_host_name,msGraphHost:c?.msgraph_host,nativeAccountId:h},t,n),p=g.tenantProfiles||[],m=a||g.realm;if(m&&!p.find((e=>e.tenantId===m))){const e=Kt(r,g.localAccountId,m,o);p.push(e)}return g.tenantProfiles=p,g}async function pa(e,t,r){return"string"==typeof e?e:e({clientId:t,tokenEndpoint:r})}class ma extends ha{constructor(e,t){super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=this.config.authOptions.authority.options.OIDCOptions?.defaultScopes}async getAuthCodeUrl(e){this.performanceClient?.addQueueMeasurement(tn,e.correlationId);const t=await ds(this.createAuthCodeUrlQueryString.bind(this),hn,this.logger,this.performanceClient,e.correlationId)(e);return jt.appendQueryString(this.authority.authorizationEndpoint,t)}async acquireToken(e,t){if(this.performanceClient?.addQueueMeasurement(sn,e.correlationId),!e.code)throw Be(le);const r=Ge(),n=await ds(this.executeTokenRequest.bind(this),an,this.logger,this.performanceClient,e.correlationId)(this.authority,e),o=n.headers?.[a],i=new ua(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return i.validateTokenResponse(n.body),ds(i.handleServerTokenResponse.bind(i),un,this.logger,this.performanceClient,e.correlationId)(n.body,this.authority,r,e,t,void 0,void 0,void 0,o)}handleFragmentResponse(e,t){if(new ua(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,null,null).validateServerAuthorizationCodeResponse(e,t),!e.code)throw Be(Re);return e}getLogoutUri(e){if(!e)throw qt(vt);const t=this.createLogoutUrlQueryString(e);return jt.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(an,t.correlationId);const r=this.createTokenQueryParameters(t),n=jt.appendQueryString(e.tokenEndpoint,r),o=await ds(this.createTokenRequestBody.bind(this),cn,this.logger,this.performanceClient,t.correlationId)(t);let i;if(t.clientInfo)try{const e=Lt(t.clientInfo,this.cryptoUtils.base64Decode);i={credential:`${e.uid}.${e.utid}`,type:Ss}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}const s=this.createTokenRequestHeaders(i||t.ccsCredential),a={clientId:t.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:e.canonicalAuthority,scopes:t.scopes,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid};return ds(this.executePostToTokenEndpoint.bind(this),Nr,this.logger,this.performanceClient,t.correlationId)(n,o,s,a,t.correlationId,Nr)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(cn,e.correlationId);const t=new aa(e.correlationId,this.performanceClient);if(t.addClientId(e.embeddedClientId||e.tokenBodyParameters?.[Js]||this.config.authOptions.clientId),this.includeRedirectUri?t.addRedirectUri(e.redirectUri):sa.validateRedirectUri(e.redirectUri),t.addScopes(e.scopes,!0,this.oidcDefaultScopes),t.addAuthorizationCode(e.code),t.addLibraryInfo(this.config.libraryInfo),t.addApplicationTelemetry(this.config.telemetry.application),t.addThrottling(),this.serverTelemetryManager&&!gr(this.config)&&t.addServerTelemetry(this.serverTelemetryManager),e.codeVerifier&&t.addCodeVerifier(e.codeVerifier),this.config.clientCredentials.clientSecret&&t.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const r=this.config.clientCredentials.clientAssertion;t.addClientAssertion(await pa(r.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),t.addClientAssertionType(r.assertionType)}if(t.addGrantType("authorization_code"),t.addClientInfo(),e.authenticationScheme===H.POP){const r=new la(this.cryptoUtils,this.performanceClient);let n;n=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await ds(r.generateCnf.bind(r),ln,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,t.addPopToken(n)}else if(e.authenticationScheme===H.SSH){if(!e.sshJwk)throw qt(bt);t.addSshJwk(e.sshJwk)}let r;if((!Ht.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.clientInfo)try{const t=Lt(e.clientInfo,this.cryptoUtils.base64Decode);r={credential:`${t.uid}.${t.utid}`,type:Ss}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}else r=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&r)switch(r.type){case Ss:try{const e=Ut(r.credential);t.addCcsOid(e)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case _s:t.addCcsUpn(r.credential)}return e.embeddedClientId&&t.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),e.tokenBodyParameters&&t.addExtraQueryParameters(e.tokenBodyParameters),!e.enableSpaAuthorizationCode||e.tokenBodyParameters&&e.tokenBodyParameters[ra]||t.addExtraQueryParameters({[ra]:"1"}),t.createQueryString()}async createAuthCodeUrlQueryString(e){const t=e.correlationId||this.config.cryptoInterface.createNewGuid();this.performanceClient?.addQueueMeasurement(hn,t);const r=new aa(t,this.performanceClient);r.addClientId(e.embeddedClientId||e.extraQueryParameters?.[Js]||this.config.authOptions.clientId);const n=[...e.scopes||[],...e.extraScopesToConsent||[]];if(r.addScopes(n,!0,this.oidcDefaultScopes),r.addRedirectUri(e.redirectUri),r.addCorrelationId(t),r.addResponseMode(e.responseMode),r.addResponseTypeCode(),r.addLibraryInfo(this.config.libraryInfo),gr(this.config)||r.addApplicationTelemetry(this.config.telemetry.application),r.addClientInfo(),e.codeChallenge&&e.codeChallengeMethod&&r.addCodeChallengeParams(e.codeChallenge,e.codeChallengeMethod),e.prompt&&r.addPrompt(e.prompt),e.domainHint&&r.addDomainHint(e.domainHint),e.prompt!==w.SELECT_ACCOUNT)if(e.sid&&e.prompt===w.NONE)this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),r.addSid(e.sid);else if(e.account){const t=this.extractAccountSid(e.account);let n=this.extractLoginHint(e.account);if(n&&e.domainHint&&(this.logger.warning('AuthorizationCodeClient.createAuthCodeUrlQueryString: "domainHint" param is set, skipping opaque "login_hint" claim. Please consider not passing domainHint'),n=null),n){this.logger.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),r.addLoginHint(n);try{const t=Ut(e.account.homeAccountId);r.addCcsOid(t)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(t&&e.prompt===w.NONE){this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),r.addSid(t);try{const t=Ut(e.account.homeAccountId);r.addCcsOid(t)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e.loginHint)this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),r.addLoginHint(e.loginHint),r.addCcsUpn(e.loginHint);else if(e.account.username){this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),r.addLoginHint(e.account.username);try{const t=Ut(e.account.homeAccountId);r.addCcsOid(t)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else e.loginHint&&(this.logger.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),r.addLoginHint(e.loginHint),r.addCcsUpn(e.loginHint));else this.logger.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");if(e.nonce&&r.addNonce(e.nonce),e.state&&r.addState(e.state),(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&r.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.embeddedClientId&&r.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),this.addExtraQueryParams(e,r),e.nativeBroker&&(r.addNativeBroker(),e.authenticationScheme===H.POP)){const t=new la(this.cryptoUtils);let n;n=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await ds(t.generateCnf.bind(t),ln,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,r.addPopToken(n)}return r.createQueryString()}createLogoutUrlQueryString(e){const t=new aa(e.correlationId,this.performanceClient);return e.postLogoutRedirectUri&&t.addPostLogoutRedirectUri(e.postLogoutRedirectUri),e.correlationId&&t.addCorrelationId(e.correlationId),e.idTokenHint&&t.addIdTokenHint(e.idTokenHint),e.state&&t.addState(e.state),e.logoutHint&&t.addLogoutHint(e.logoutHint),this.addExtraQueryParams(e,t),t.createQueryString()}addExtraQueryParams(e,t){!(e.extraQueryParameters&&e.extraQueryParameters.hasOwnProperty("instance_aware"))&&this.config.authOptions.instanceAware&&(e.extraQueryParameters=e.extraQueryParameters||{},e.extraQueryParameters.instance_aware="true"),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters)}extractAccountSid(e){return e.idTokenClaims?.sid||null}extractLoginHint(e){return e.idTokenClaims?.login_hint||null}}class fa{constructor(t,r){this.cacheOutcome="0",this.cacheManager=r,this.apiId=t.apiId,this.correlationId=t.correlationId,this.wrapperSKU=t.wrapperSKU||e.EMPTY_STRING,this.wrapperVer=t.wrapperVer||e.EMPTY_STRING,this.telemetryCacheKey=q.CACHE_KEY+b+t.clientId}generateCurrentRequestHeaderValue(){const e=`${this.apiId}${q.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer],r=this.getNativeBrokerErrorCode();r?.length&&t.push(`broker_error=${r}`);const n=t.join(q.VALUE_SEPARATOR),o=[e,this.getRegionDiscoveryFields()].join(q.VALUE_SEPARATOR);return[q.SCHEMA_VERSION,o,n].join(q.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){const e=this.getLastRequests(),t=fa.maxErrorsToSend(e),r=e.failedRequests.slice(0,2*t).join(q.VALUE_SEPARATOR),n=e.errors.slice(0,t).join(q.VALUE_SEPARATOR),o=e.errors.length,i=[o,t<o?q.OVERFLOW_TRUE:q.OVERFLOW_FALSE].join(q.VALUE_SEPARATOR);return[q.SCHEMA_VERSION,e.cacheHits,r,n,i].join(q.CATEGORY_SEPARATOR)}cacheFailedRequest(e){const t=this.getLastRequests();t.errors.length>=q.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof G?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(q.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}incrementCacheHits(){const e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e),e.cacheHits}getLastRequests(){return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||{failedRequests:[],errors:[],cacheHits:0}}clearTelemetryCache(){const e=this.getLastRequests(),t=fa.maxErrorsToSend(e);if(t===e.errors.length)this.cacheManager.removeItem(this.telemetryCacheKey);else{const r={failedRequests:e.failedRequests.slice(2*t),errors:e.errors.slice(t),cacheHits:0};this.cacheManager.setServerTelemetry(this.telemetryCacheKey,r)}}static maxErrorsToSend(t){let r,n=0,o=0;const i=t.errors.length;for(r=0;r<i;r++){const i=t.failedRequests[2*r]||e.EMPTY_STRING,s=t.failedRequests[2*r+1]||e.EMPTY_STRING,a=t.errors[r]||e.EMPTY_STRING;if(o+=i.toString().length+s.toString().length+a.length+3,!(o<q.MAX_LAST_HEADER_BYTES))break;n+=1}return n}getRegionDiscoveryFields(){const t=[];return t.push(this.regionUsed||e.EMPTY_STRING),t.push(this.regionSource||e.EMPTY_STRING),t.push(this.regionOutcome||e.EMPTY_STRING),t.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}setNativeBrokerErrorCode(e){const t=this.getLastRequests();t.nativeBrokerErrorCode=e,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}getNativeBrokerErrorCode(){return this.getLastRequests().nativeBrokerErrorCode}clearNativeBrokerErrorCode(){const e=this.getLastRequests();delete e.nativeBrokerErrorCode,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e)}static makeExtraSkuString(e){return function(e){const{skus:t,libraryName:r,libraryVersion:n,extensionName:o,extensionVersion:i}=e,s=new Map([[0,[r,n]],[2,[o,i]]]);let a=[];if(t?.length){if(a=t.split(","),a.length<4)return t}else a=Array.from({length:4},(()=>"|"));return s.forEach(((e,t)=>{2===e.length&&e[0]?.length&&e[1]?.length&&function(e){const{skuArr:t,index:r,skuName:n,skuVersion:o}=e;r>=t.length||(t[r]=[n,o].join("|"))}({skuArr:a,index:t,skuName:e[0],skuVersion:e[1]})})),a.join(",")}(e)}}class ya{constructor(e,t,r,n,o,i,s,a,c){this.config=e,this.browserStorage=t,this.browserCrypto=r,this.networkClient=this.config.system.networkClient,this.eventHandler=o,this.navigationClient=i,this.nativeMessageHandler=a,this.correlationId=c||Oi(),this.logger=n.clone(Dn,Wi,this.correlationId),this.performanceClient=s}async clearCacheOnLogout(e){if(e){$t.accountInfoIsEqual(e,this.browserStorage.getActiveAccount(),!1)&&(this.logger.verbose("Setting active account to null"),this.browserStorage.setActiveAccount(null));try{await this.browserStorage.removeAccount($t.generateAccountCacheKey(e)),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch(e){this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),await this.browserStorage.clear(),await this.browserCrypto.clearKeystore()}catch(e){this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}getRedirectUri(e){this.logger.verbose("getRedirectUri called");const t=e||this.config.auth.redirectUri;return jt.getAbsoluteUrl(t,Fi())}initializeServerTelemetryManager(e,t){this.logger.verbose("initializeServerTelemetryManager called");const r={clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]};return new fa(r,this.browserStorage)}async getDiscoveredAuthority(e){const{account:t}=e,r=e.requestExtraQueryParameters&&e.requestExtraQueryParameters.hasOwnProperty("instance_aware")?e.requestExtraQueryParameters.instance_aware:void 0;this.performanceClient.addQueueMeasurement(Rr,this.correlationId);const n={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},o=e.requestAuthority||this.config.auth.authority,i=r?.length?"true"===r:this.config.auth.instanceAware,s=t&&i?this.config.auth.authority.replace(jt.getDomainFromUrl(o),t.environment):o,a=gs.generateAuthority(s,e.requestAzureCloudOptions||this.config.auth.azureCloudOptions),c=await ds(ca,pn,this.logger,this.performanceClient,this.correlationId)(a,this.config.system.networkClient,this.browserStorage,n,this.logger,this.correlationId,this.performanceClient);if(t&&!c.isAlias(t.environment))throw qt(Mt);return c}}async function Ca(e,t,r){e.addQueueMeasurement(Mn,r);const n=ls(va,On,t,e,r)(e,t,r);return{verifier:n,challenge:await ds(wa,Nn,t,e,r)(n,e,t,r)}}function va(e,t,r){try{const n=new Uint8Array(32);return ls(Pi,Hn,t,e,r)(n),Ii(n)}catch(e){throw fi(vo)}}async function wa(e,t,r,n){t.addQueueMeasurement(Nn,n);try{const o=await ds(Ei,qn,r,t,n)(e,t,n);return Ii(new Uint8Array(o))}catch(e){throw fi(vo)}}async function Ia(e,t,r,n){r.addQueueMeasurement($r,e.correlationId);const o=e.authority||t.auth.authority,i=[...e&&e.scopes||[]],s={...e,correlationId:e.correlationId,authority:o,scopes:i};if(s.authenticationScheme){if(s.authenticationScheme===H.SSH){if(!e.sshJwk)throw qt(bt);if(!e.sshKid)throw qt(St)}n.verbose(`Authentication Scheme set to "${s.authenticationScheme}" as configured in Auth request`)}else s.authenticationScheme=H.BEARER,n.verbose('Authentication Scheme wasn\'t explicitly set in request, defaulting to "Bearer" request');return t.cache.claimsBasedCachingEnabled&&e.claims&&!Ht.isEmptyObj(e.claims)&&(s.requestedClaimsHash=await qi(e.claims)),s}async function Ta(e,t,r,n,o){n.addQueueMeasurement(zr,e.correlationId);const i=await ds(Ia,$r,o,n,e.correlationId)(e,r,n,o);return{...e,...i,account:t,forceRefresh:e.forceRefresh||!1}}class Aa extends ya{async initializeAuthorizationCodeRequest(t){this.performanceClient.addQueueMeasurement(en,this.correlationId);const r=await ds(Ca,Mn,this.logger,this.performanceClient,this.correlationId)(this.performanceClient,this.logger,this.correlationId),n={...t,redirectUri:t.redirectUri,code:e.EMPTY_STRING,codeVerifier:r.verifier};return t.codeChallenge=r.challenge,t.codeChallengeMethod=e.S256_CODE_CHALLENGE_METHOD,n}initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",e?.correlationId);const t={correlationId:this.correlationId||Oi(),...e};if(e)if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){const r=this.getLogoutHintFromIdTokenClaims(e.account);r&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=r)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set");else this.logger.verbose("logoutHint will not be set since no logout request was configured");return e&&null===e.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId):e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=jt.getAbsoluteUrl(e.postLogoutRedirectUri,Fi())):null===this.config.auth.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=jt.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,Fi())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=jt.getAbsoluteUrl(Fi(),Fi())),t}getLogoutHintFromIdTokenClaims(e){const t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e){this.performanceClient.addQueueMeasurement(Jr,this.correlationId);const t=await ds(this.getClientConfiguration.bind(this),Xr,this.logger,this.performanceClient,this.correlationId)(e);return new ma(t,this.performanceClient)}async getClientConfiguration(t){const{serverTelemetryManager:r,requestAuthority:n,requestAzureCloudOptions:o,requestExtraQueryParameters:i,account:s}=t;this.performanceClient.addQueueMeasurement(Xr,this.correlationId);const a=await ds(this.getDiscoveredAuthority.bind(this),Rr,this.logger,this.performanceClient,this.correlationId)({requestAuthority:n,requestAzureCloudOptions:o,requestExtraQueryParameters:i,account:s}),c=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:a,clientCapabilities:this.config.auth.clientCapabilities,redirectUri:this.config.auth.redirectUri},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:c.loggerCallback,piiLoggingEnabled:c.piiLoggingEnabled,logLevel:c.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:r,libraryInfo:{sku:Dn,version:Wi,cpu:e.EMPTY_STRING,os:e.EMPTY_STRING},telemetry:this.config.telemetry}}async initializeAuthorizationRequest(t,r){this.performanceClient.addQueueMeasurement(Zr,this.correlationId);const n=this.getRedirectUri(t.redirectUri),o={interactionType:r},i=bs.setRequestState(this.browserCrypto,t&&t.state||e.EMPTY_STRING,o),s={...await ds(Ia,$r,this.logger,this.performanceClient,this.correlationId)({...t,correlationId:this.correlationId},this.config,this.performanceClient,this.logger),redirectUri:n,state:i,nonce:t.nonce||Oi(),responseMode:this.config.auth.OIDCOptions.serverResponseType};if(t.loginHint||t.sid)return s;const a=t.account||this.browserStorage.getActiveAccount();if(a&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${a.homeAccountId}`,this.correlationId),s.account=a),!s.loginHint&&!a){const e=this.browserStorage.getLegacyLoginHint();e&&(s.loginHint=e)}return s}}const ka="user_switch",ba={[ka]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class Sa extends G{constructor(e,t,r){super(e,t),Object.setPrototypeOf(this,Sa.prototype),this.name="NativeAuthError",this.ext=r}}function _a(e){return!(!e.ext||!e.ext.status||"PERSISTENT_ERROR"!==e.ext.status&&"DISABLED"!==e.ext.status)||!(!e.ext||!e.ext.error||-2147186943!==e.ext.error)||"ContentError"===e.errorCode}function Ra(e,t,r){if(r&&r.status)switch(r.status){case"ACCOUNT_UNAVAILABLE":return ks(fs);case"USER_INTERACTION_REQUIRED":return new Ts(e,t);case"USER_CANCEL":return fi(Po);case"NO_NETWORK":return fi(Qo)}return new Sa(e,ba[e]||t,r)}class Ea extends ha{constructor(e,t){super(e,t)}async acquireToken(e){this.performanceClient?.addQueueMeasurement(Hr,e.correlationId);const t=Ge(),r=await ds(this.executeTokenRequest.bind(this),qr,this.logger,this.performanceClient,e.correlationId)(e,this.authority),n=r.headers?.[a],o=new ua(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return o.validateTokenResponse(r.body),ds(o.handleServerTokenResponse.bind(o),un,this.logger,this.performanceClient,e.correlationId)(r.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,n)}async acquireTokenByRefreshToken(e){if(!e)throw qt(Ct);if(this.performanceClient?.addQueueMeasurement(Lr,e.correlationId),!e.account)throw Be(ye);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return await ds(this.acquireTokenWithCachedRefreshToken.bind(this),xr,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(t){const r=t instanceof Ts&&t.errorCode===ms,n=t instanceof Ys&&"invalid_grant"===t.errorCode&&"client_mismatch"===t.subError;if(r||n)return ds(this.acquireTokenWithCachedRefreshToken.bind(this),xr,this.logger,this.performanceClient,e.correlationId)(e,!1);throw t}return ds(this.acquireTokenWithCachedRefreshToken.bind(this),xr,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){this.performanceClient?.addQueueMeasurement(xr,e.correlationId);const r=ls(this.cacheManager.getRefreshToken.bind(this.cacheManager),Pn,this.logger,this.performanceClient,e.correlationId)(e.account,t,void 0,this.performanceClient,e.correlationId);if(!r)throw ks(ms);if(r.expiresOn&&je(r.expiresOn,e.refreshTokenExpirationOffsetSeconds||300))throw ks(ys);const n={...e,refreshToken:r.secret,authenticationScheme:e.authenticationScheme||H.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:Ss}};try{return await ds(this.acquireToken.bind(this),Hr,this.logger,this.performanceClient,e.correlationId)(n)}catch(e){if(e instanceof Ts&&e.subError===Cs){this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");const e=Qe(r);this.cacheManager.removeRefreshToken(e)}throw e}}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(qr,e.correlationId);const r=this.createTokenQueryParameters(e),n=jt.appendQueryString(t.tokenEndpoint,r),o=await ds(this.createTokenRequestBody.bind(this),Ur,this.logger,this.performanceClient,e.correlationId)(e),i=this.createTokenRequestHeaders(e.ccsCredential),s={clientId:e.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:t.canonicalAuthority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};return ds(this.executePostToTokenEndpoint.bind(this),Or,this.logger,this.performanceClient,e.correlationId)(n,o,i,s,e.correlationId,Or)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(Ur,e.correlationId);const t=e.correlationId,r=new aa(t,this.performanceClient);if(r.addClientId(e.embeddedClientId||e.tokenBodyParameters?.[Js]||this.config.authOptions.clientId),e.redirectUri&&r.addRedirectUri(e.redirectUri),r.addScopes(e.scopes,!0,this.config.authOptions.authority.options.OIDCOptions?.defaultScopes),r.addGrantType("refresh_token"),r.addClientInfo(),r.addLibraryInfo(this.config.libraryInfo),r.addApplicationTelemetry(this.config.telemetry.application),r.addThrottling(),this.serverTelemetryManager&&!gr(this.config)&&r.addServerTelemetry(this.serverTelemetryManager),r.addRefreshToken(e.refreshToken),this.config.clientCredentials.clientSecret&&r.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const t=this.config.clientCredentials.clientAssertion;r.addClientAssertion(await pa(t.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),r.addClientAssertionType(t.assertionType)}if(e.authenticationScheme===H.POP){const t=new la(this.cryptoUtils,this.performanceClient);let n;n=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await ds(t.generateCnf.bind(t),ln,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,r.addPopToken(n)}else if(e.authenticationScheme===H.SSH){if(!e.sshJwk)throw qt(bt);r.addSshJwk(e.sshJwk)}if((!Ht.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&r.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case Ss:try{const t=Ut(e.ccsCredential.credential);r.addCcsOid(t)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case _s:r.addCcsUpn(e.ccsCredential.credential)}return e.embeddedClientId&&r.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),e.tokenBodyParameters&&r.addExtraQueryParameters(e.tokenBodyParameters),r.createQueryString()}}class Pa extends ha{constructor(e,t){super(e,t)}async acquireToken(e){try{const[r,n]=await this.acquireCachedToken({...e,scopes:e.scopes?.length?e.scopes:[...t]});return"4"===n&&(this.logger.info("SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed."),new Ea(this.config,this.performanceClient).acquireTokenByRefreshToken(e).catch((()=>{}))),r}catch(t){if(t instanceof Ue&&t.errorCode===be)return new Ea(this.config,this.performanceClient).acquireTokenByRefreshToken(e);throw t}}async acquireCachedToken(e){this.performanceClient?.addQueueMeasurement(Kr,e.correlationId);let t="0";if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!Ht.isEmptyObj(e.claims))throw this.setCacheOutcome("1",e.correlationId),Be(be);if(!e.account)throw Be(ye);const r=e.account.tenantId||function(e){const t=new jt(e).getUrlComponents(),r=t.PathSegments.slice(-1)[0]?.toLowerCase();switch(r){case f:case y:case C:return;default:return r}}(e.authority),n=this.cacheManager.getTokenKeys(),o=this.cacheManager.getAccessToken(e.account,e,n,r,this.performanceClient,e.correlationId);if(!o)throw this.setCacheOutcome("2",e.correlationId),Be(be);if(i=o.cachedAt,Number(i)>Ge()||je(o.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome("3",e.correlationId),Be(be);var i;o.refreshOn&&je(o.refreshOn,0)&&(t="4");const s=e.authority||this.authority.getPreferredCache(),a={account:this.cacheManager.readAccountFromCache(e.account),accessToken:o,idToken:this.cacheManager.getIdToken(e.account,n,r,this.performanceClient,e.correlationId),refreshToken:null,appMetadata:this.cacheManager.readAppMetadataFromCache(s)};return this.setCacheOutcome(t,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await ds(this.generateResultFromCacheRecord.bind(this),Dr,this.logger,this.performanceClient,e.correlationId)(a,e),t]}setCacheOutcome(e,t){this.serverTelemetryManager?.setCacheOutcome(e),this.performanceClient?.addFields({cacheOutcome:e},t),"0"!==e&&this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){let r;if(this.performanceClient?.addQueueMeasurement(Dr,t.correlationId),e.idToken&&(r=$e(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||0===t.maxAge){const e=r?.auth_time;if(!e)throw Be(ie);ze(e,t.maxAge)}return ua.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,r)}}class Ma extends Aa{async acquireToken(e){this.performanceClient.addQueueMeasurement(kr,e.correlationId);const t=this.initializeServerTelemetryManager(61),r=await ds(this.getClientConfiguration.bind(this),Xr,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,account:e.account}),n=new Pa(r,this.performanceClient);this.logger.verbose("Silent auth client created");try{const t=(await ds(n.acquireCachedToken.bind(n),Kr,this.logger,this.performanceClient,e.correlationId)(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),t}catch(e){throw e instanceof mi&&e.errorCode===Xo&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),e}}logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t?.account)}}var Oa=r(14154).Promise;class Na extends ya{constructor(e,t,r,n,o,i,s,a,c,h,l,d){super(e,t,r,n,o,i,a,c,d),this.apiId=s,this.accountId=h,this.nativeMessageHandler=c,this.nativeStorageManager=l,this.silentCacheClient=new Ma(e,this.nativeStorageManager,r,n,o,i,a,c,d),this.serverTelemetryManager=this.initializeServerTelemetryManager(this.apiId);const u=this.nativeMessageHandler.getExtensionId()===$n?"chrome":this.nativeMessageHandler.getExtensionId()?.length?"unknown":void 0;this.skus=fa.makeExtraSkuString({libraryName:Dn,libraryVersion:Wi,extensionName:u,extensionVersion:this.nativeMessageHandler.getExtensionVersion()})}addRequestSKUs(e){e.extraParameters={...e.extraParameters,[na]:this.skus}}async acquireToken(e){this.performanceClient.addQueueMeasurement(Pr,e.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");const t=this.performanceClient.startMeasurement(Pr,e.correlationId),r=Ge();try{const n=await this.initializeNativeRequest(e);try{const e=await this.acquireTokensFromCache(this.accountId,n);return t.end({success:!0,isNativeBroker:!1,fromCache:!0}),e}catch(e){this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}const{...o}=n,i={method:Gn,request:o},s=await this.nativeMessageHandler.sendMessage(i),a=this.validateNativeResponse(s);return await this.handleNativeResponse(a,n,r).then((e=>(t.end({success:!0,isNativeBroker:!0,requestId:e.requestId}),this.serverTelemetryManager.clearNativeBrokerErrorCode(),e))).catch((e=>{throw t.end({success:!1,errorCode:e.errorCode,subErrorCode:e.subError,isNativeBroker:!0}),e}))}catch(e){throw e instanceof Sa&&this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode),e}}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:xt.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),Be(we);const r=this.browserStorage.getBaseAccountInfo({nativeAccountId:e});if(!r)throw Be(we);try{const e=this.createSilentCacheRequest(t,r),n=await this.silentCacheClient.acquireToken(e),o={...r,idTokenClaims:n?.idTokenClaims,idToken:n?.idToken};return{...n,account:o}}catch(e){throw e}}async acquireTokenRedirect(e,t){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");const{...r}=e;delete r.onRedirectNavigate;const n=await this.initializeNativeRequest(r),o={method:Gn,request:n};try{const e=await this.nativeMessageHandler.sendMessage(o);this.validateNativeResponse(e)}catch(e){if(e instanceof Sa&&(this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode),_a(e)))throw e}this.browserStorage.setTemporaryCache(ro,JSON.stringify(n),!0);const i={apiId:ao,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},s=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);t.end({success:!0}),await this.navigationClient.navigateExternal(s,i)}async handleRedirectPromise(e,t){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const r=this.browserStorage.getCachedNativeRequest();if(!r)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),e&&t&&e?.addFields({errorCode:"no_cached_request"},t),null;const{prompt:n,...o}=r;n&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(ro));const i={method:Gn,request:o},s=Ge();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");const e=await this.nativeMessageHandler.sendMessage(i);this.validateNativeResponse(e);const t=this.handleNativeResponse(e,o,s);this.browserStorage.setInteractionInProgress(!1);const r=await t;return this.serverTelemetryManager.clearNativeBrokerErrorCode(),r}catch(e){throw this.browserStorage.setInteractionInProgress(!1),e}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Oa.reject("Logout not implemented yet")}async handleNativeResponse(e,t,r){this.logger.trace("NativeInteractionClient - handleNativeResponse called.");const n=$e(e.id_token,ns),o=this.createHomeAccountIdentifier(e,n),i=this.browserStorage.getAccountInfoFilteredBy({nativeAccountId:t.accountId})?.homeAccountId;if(o!==i&&e.account.id!==t.accountId)throw Ra(ka);const s=await this.getDiscoveredAuthority({requestAuthority:t.authority}),a=ga(this.browserStorage,s,o,ns,n,e.client_info,void 0,n.tid,void 0,e.account.id,this.logger),c=await this.generateAuthenticationResult(e,t,n,a,s.canonicalAuthority,r);return this.cacheAccount(a),this.cacheNativeTokens(e,t,o,n,e.access_token,c.tenantId,r),c}createHomeAccountIdentifier(t,r){return $t.generateHomeAccountId(t.client_info||e.EMPTY_STRING,0,this.logger,this.browserCrypto,r)}generateScopes(e,t){return e.scope?xt.fromString(e.scope):xt.fromString(t.scope)}async generatePopAccessToken(e,t){if(t.tokenType===H.POP&&t.signPopToken){if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;const r=new la(this.browserCrypto),n={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw Be(Me);return r.signPopToken(e.access_token,t.keyId,n)}return e.access_token}async generateAuthenticationResult(t,r,n,o,i,s){const a=this.addTelemetryFromNativeResponse(t),c=t.scope?xt.fromString(t.scope):xt.fromString(r.scope),h=t.account.properties||{},l=h.UID||n.oid||n.sub||e.EMPTY_STRING,d=h.TenantId||n.tid||e.EMPTY_STRING,u=Dt(o.getAccountInfo(),void 0,n,t.id_token);u.nativeAccountId!==t.account.id&&(u.nativeAccountId=t.account.id);const g=await this.generatePopAccessToken(t,r),p=r.tokenType===H.POP?H.POP:H.BEARER;return{authority:i,uniqueId:l,tenantId:d,scopes:c.asArray(),account:u,idToken:t.id_token,idTokenClaims:n,accessToken:g,fromCache:!!a&&this.isResponseFromCache(a),expiresOn:new Date(1e3*Number(s+t.expires_in)),tokenType:p,correlationId:this.correlationId,state:t.state,fromNativeBroker:!0}}cacheAccount(e){this.browserStorage.setAccount(e),this.browserStorage.removeAccountContext(e).catch((e=>{this.logger.error(`Error occurred while removing account context from browser storage. ${e}`)}))}cacheNativeTokens(t,r,n,o,i,s,a){const c=We(n,r.authority,t.id_token||"",r.clientId,o.tid||""),h=a+(r.tokenType===H.POP?e.SHR_NONCE_VALIDITY:("string"==typeof t.expires_in?parseInt(t.expires_in,10):t.expires_in)||0),l=this.generateScopes(t,r),d={idToken:c,accessToken:Ye(n,r.authority,i,r.clientId,o.tid||s,l.printScopes(),h,0,ns,void 0,r.tokenType,void 0,r.keyId)};this.nativeStorageManager.saveCacheRecord(d,r.storeInCache)}addTelemetryFromNativeResponse(e){const t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.nativeMessageHandler.getExtensionId(),extensionVersion:this.nativeMessageHandler.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}validateNativeResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw j(F,"Response missing expected properties.")}getMATSFromResponse(e){if(e.properties.MATS)try{return JSON.parse(e.properties.MATS)}catch(e){this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return void 0===e.is_cached?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");const r=e.authority||this.config.auth.authority;e.account&&await this.getDiscoveredAuthority({requestAuthority:r,requestAzureCloudOptions:e.azureCloudOptions,account:e.account});const n=new jt(r);n.validateAsUri();const{scopes:o,...i}=e,s=new xt(o||[]);s.appendScopes(t);const a={...i,accountId:this.accountId,clientId:this.config.auth.clientId,authority:n.urlString,scope:s.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:(()=>{switch(this.apiId){case 863:case 61:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),w.NONE}if(e.prompt)switch(e.prompt){case w.NONE:case w.CONSENT:case w.LOGIN:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e.prompt;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e.prompt} is not compatible with native flow`),fi(ci)}else this.logger.trace("initializeNativeRequest: prompt was not provided")})(),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1,keyId:e.popKid};if(a.signPopToken&&e.popKid)throw fi(li);if(this.handleExtraBrokerParams(a),a.extraParameters=a.extraParameters||{},a.extraParameters.telemetry="MATS",e.authenticationScheme===H.POP){const t={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},r=new la(this.browserCrypto);let n;if(a.keyId)n=this.browserCrypto.base64UrlEncode(JSON.stringify({kid:a.keyId})),a.signPopToken=!1;else{const o=await ds(r.generateCnf.bind(r),ln,this.logger,this.performanceClient,e.correlationId)(t,this.logger);n=o.reqCnfString,a.keyId=o.kid,a.signPopToken=!0}a.reqCnf=n}return this.addRequestSKUs(a),a}handleExtraBrokerParams(e){const t=e.extraParameters&&e.extraParameters.hasOwnProperty(oa)&&e.extraParameters.hasOwnProperty(ia)&&e.extraParameters.hasOwnProperty(Js);if(!e.embeddedClientId&&!t)return;let r="";const n=e.redirectUri;e.embeddedClientId?(e.redirectUri=this.config.auth.redirectUri,r=e.embeddedClientId):e.extraParameters&&(e.redirectUri=e.extraParameters[ia],r=e.extraParameters[Js]),e.extraParameters={child_client_id:r,child_redirect_uri:n},this.performanceClient?.addFields({embeddedClientId:r,embeddedRedirectUri:n},e.correlationId)}}var qa=r(14154).Promise;class Ha{constructor(e,t,r,n){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=n,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=r,this.handshakeEvent=r.startMeasurement(_n)}async sendMessage(e){this.logger.trace("NativeMessageHandler - sendMessage called.");const t={channel:Fn,extensionId:this.extensionId,responseId:Oi(),body:e};return this.logger.trace("NativeMessageHandler - Sending request to browser extension"),this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(t)}`),this.messageChannel.port1.postMessage(t),new qa(((e,r)=>{this.resolvers.set(t.responseId,{resolve:e,reject:r})}))}static async createProvider(e,t,r){e.trace("NativeMessageHandler - createProvider called.");try{const n=new Ha(e,t,r,$n);return await n.sendHandshakeRequest(),n}catch(n){const o=new Ha(e,t,r);return await o.sendHandshakeRequest(),o}}async sendHandshakeRequest(){this.logger.trace("NativeMessageHandler - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);const e={channel:Fn,extensionId:this.extensionId,responseId:Oi(),body:{method:zn}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=e=>{this.onChannelMessage(e)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new qa(((t,r)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:r}),this.timeoutId=window.setTimeout((()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),r(fi(oi)),this.handshakeResolvers.delete(e.responseId)}),this.handshakeTimeoutMs)}))}onWindowMessage(e){if(this.logger.trace("NativeMessageHandler - onWindowMessage called"),e.source!==window)return;const t=e.data;if(t.channel&&t.channel===Fn&&(!t.extensionId||t.extensionId===this.extensionId)&&t.body.method===zn){const e=this.handshakeResolvers.get(t.responseId);if(!e)return void this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${t.responseId}`);this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),e.reject(fi(ii))}}onChannelMessage(e){this.logger.trace("NativeMessageHandler - onChannelMessage called.");const t=e.data,r=this.resolvers.get(t.responseId),n=this.handshakeResolvers.get(t.responseId);try{const e=t.body.method;if("Response"===e){if(!r)return;const e=t.body.response;if(this.logger.trace("NativeMessageHandler - Received response from browser extension"),this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(e)}`),"Success"!==e.status)r.reject(Ra(e.code,e.description,e.ext));else{if(!e.result)throw j(F,"Event does not contain result.");e.result.code&&e.result.description?r.reject(Ra(e.result.code,e.result.description,e.result.ext)):r.resolve(e.result)}this.resolvers.delete(t.responseId)}else if("HandshakeResponse"===e){if(!n)return void this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${t.responseId}`);clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),n.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(t){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${t}`),this.logger.errorPii(`Unable to parse ${e}`),r?r.reject(t):n&&n.reject(t)}}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}static isNativeAvailable(e,t,r,n){if(t.trace("isNativeAvailable called"),!e.system.allowNativeBroker)return t.trace("isNativeAvailable: allowNativeBroker is not enabled, returning false"),!1;if(!r)return t.trace("isNativeAvailable: WAM extension provider is not initialized, returning false"),!1;if(n)switch(n){case H.BEARER:case H.POP:return t.trace("isNativeAvailable: authenticationScheme is supported, returning true"),!0;default:return t.trace("isNativeAvailable: authenticationScheme is not supported, returning false"),!1}return!0}}class xa{constructor(e,t,r,n,o){this.authModule=e,this.browserStorage=t,this.authCodeRequest=r,this.logger=n,this.performanceClient=o}async handleCodeResponse(e,t){let r;this.performanceClient.addQueueMeasurement(nn,t.correlationId);try{r=this.authModule.handleFragmentResponse(e,t.state)}catch(e){throw e instanceof Ys&&e.subError===Po?fi(Po):e}return ds(this.handleCodeResponseFromServer.bind(this),rn,this.logger,this.performanceClient,t.correlationId)(r,t)}async handleCodeResponseFromServer(e,t,r=!0){if(this.performanceClient.addQueueMeasurement(rn,t.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called"),this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await ds(this.authModule.updateAuthority.bind(this.authModule),on,this.logger,this.performanceClient,t.correlationId)(e.cloud_instance_host_name,t.correlationId),r&&(e.nonce=t.nonce||void 0),e.state=t.state,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{const e=this.createCcsCredentials(t);e&&(this.authCodeRequest.ccsCredential=e)}return await ds(this.authModule.acquireToken.bind(this.authModule),sn,this.logger,this.performanceClient,t.correlationId)(this.authCodeRequest,e)}createCcsCredentials(e){return e.account?{credential:e.account.homeAccountId,type:Ss}:e.loginHint?{credential:e.loginHint,type:_s}:null}}function La(e,t,r){const n=Gt(e);if(!n)throw zt(e)?(r.error(`A ${t} is present in the iframe but it does not contain known properties. It's likely that the ${t} has been replaced by code running on the redirectUri page.`),r.errorPii(`The ${t} detected is: ${e}`),fi(ko)):(r.error(`The request has returned to the redirectUri but a ${t} is not present. It's likely that the ${t} has been removed or the page has been redirected by code running on the redirectUri page.`),fi(To));return n}var Ua=r(14154).Promise;class Ba extends Aa{constructor(e,t,r,n,o,i,s,a,c,h){super(e,t,r,n,o,i,s,c,h),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=a}acquireToken(e){try{const r={popupName:this.generatePopupName(e.scopes||t,e.authority||this.config.auth.authority),popupWindowAttributes:e.popupWindowAttributes||{},popupWindowParent:e.popupWindowParent??window};return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,r)):(this.logger.verbose("asyncPopup set to false, opening popup before acquiring token"),r.popup=this.openSizedPopup("about:blank",r),this.acquireTokenPopupAsync(e,r))}catch(e){return Ua.reject(e)}}logout(e){try{this.logger.verbose("logoutPopup called");const t=this.initializeLogoutRequest(e),r={popupName:this.generateLogoutPopupName(t),popupWindowAttributes:e?.popupWindowAttributes||{},popupWindowParent:e?.popupWindowParent??window},n=e&&e.authority,o=e&&e.mainWindowRedirectUri;return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,r,n,o)):(this.logger.verbose("asyncPopup set to false, opening popup"),r.popup=this.openSizedPopup("about:blank",r),this.logoutPopupAsync(t,r,n,o))}catch(e){return Ua.reject(e)}}async acquireTokenPopupAsync(e,t){this.logger.verbose("acquireTokenPopupAsync called");const r=this.initializeServerTelemetryManager(co),n=await ds(this.initializeAuthorizationRequest.bind(this),Zr,this.logger,this.performanceClient,this.correlationId)(e,ho.Popup);Qi(n.authority);try{const o=await ds(this.initializeAuthorizationCodeRequest.bind(this),en,this.logger,this.performanceClient,this.correlationId)(n),i=await ds(this.createAuthCodeClient.bind(this),Jr,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:r,requestAuthority:n.authority,requestAzureCloudOptions:n.azureCloudOptions,requestExtraQueryParameters:n.extraQueryParameters,account:n.account}),s=Ha.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme);let a;s&&(a=this.performanceClient.startMeasurement(Er,e.correlationId));const c=await i.getAuthCodeUrl({...n,nativeBroker:s}),h=new xa(i,this.browserStorage,o,this.logger,this.performanceClient),l=this.initiateAuthRequest(c,t);this.eventHandler.emitEvent($s,ho.Popup,{popupWindow:l},null);const d=await this.monitorPopupForHash(l,t.popupWindowParent),u=ls(La,gn,this.logger,this.performanceClient,this.correlationId)(d,this.config.auth.OIDCOptions.serverResponseType,this.logger);if(Vs.removeThrottle(this.browserStorage,this.config.auth.clientId,o),u.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),a&&a.end({success:!0,isNativeBroker:!0}),!this.nativeMessageHandler)throw fi(si);const e=new Na(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,co,this.performanceClient,this.nativeMessageHandler,u.accountId,this.nativeStorage,n.correlationId),{userRequestState:t}=bs.parseRequestState(this.browserCrypto,n.state);return await e.acquireToken({...n,state:t,prompt:void 0})}return await h.handleCodeResponse(u,n)}catch(e){throw t.popup?.close(),e instanceof G&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),e}}async logoutPopupAsync(e,t,r,n){this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(zs,ho.Popup,e);const o=this.initializeServerTelemetryManager(962);try{await this.clearCacheOnLogout(e.account);const i=await ds(this.createAuthCodeClient.bind(this),Jr,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:o,requestAuthority:r,account:e.account||void 0});try{i.authority.endSessionEndpoint}catch{if(e.account?.homeAccountId&&e.postLogoutRedirectUri&&i.authority.protocolMode===K){if(this.browserStorage.removeAccount(e.account?.homeAccountId),this.eventHandler.emitEvent(Gs,ho.Popup,e),n){const e={apiId:962,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=jt.getAbsoluteUrl(n,Fi());await this.navigationClient.navigateInternal(t,e)}return void t.popup?.close()}}const s=i.getLogoutUri(e);this.eventHandler.emitEvent(Gs,ho.Popup,e);const a=this.openPopup(s,t);if(this.eventHandler.emitEvent($s,ho.Popup,{popupWindow:a},null),await this.monitorPopupForHash(a,t.popupWindowParent).catch((()=>{})),n){const e={apiId:962,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=jt.getAbsoluteUrl(n,Fi());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${t}`),await this.navigationClient.navigateInternal(t,e)}else this.logger.verbose("No main window navigation requested")}catch(e){throw t.popup?.close(),e instanceof G&&(e.setCorrelationId(this.correlationId),o.cacheFailedRequest(e)),this.browserStorage.setInteractionInProgress(!1),this.eventHandler.emitEvent(js,ho.Popup,null,e),this.eventHandler.emitEvent(Qs,ho.Popup),e}this.eventHandler.emitEvent(Qs,ho.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),fi(Io)}monitorPopupForHash(e,t){return new Ua(((t,r)=>{this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");const n=setInterval((()=>{if(e.closed)return this.logger.error("PopupHandler.monitorPopupForHash - window closed"),clearInterval(n),void r(fi(Po));let o="";try{o=e.location.href}catch(e){}if(!o||"about:blank"===o)return;clearInterval(n);let i="";const s=this.config.auth.OIDCOptions.serverResponseType;e&&(i=s===T.QUERY?e.location.search:e.location.hash),this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),t(i)}),this.config.system.pollIntervalMilliseconds)})).finally((()=>{this.cleanPopup(e,t)}))}openPopup(e,t){try{let r;if(t.popup?(r=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),r.location.assign(e)):void 0===t.popup&&(this.logger.verbosePii(`Opening popup window to: ${e}`),r=this.openSizedPopup(e,t)),!r)throw fi(Eo);return r.focus&&r.focus(),this.currentWindow=r,t.popupWindowParent.addEventListener("beforeunload",this.unloadWindow),r}catch(e){throw this.logger.error("error opening popup "+e.message),this.browserStorage.setInteractionInProgress(!1),fi(Ro)}}openSizedPopup(e,{popupName:t,popupWindowAttributes:r,popupWindowParent:n}){const o=n.screenLeft?n.screenLeft:n.screenX,i=n.screenTop?n.screenTop:n.screenY,s=n.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,a=n.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;let c=r.popupSize?.width,h=r.popupSize?.height,l=r.popupPosition?.top,d=r.popupPosition?.left;return(!c||c<0||c>s)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),c=483),(!h||h<0||h>a)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),h=600),(!l||l<0||l>a)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),l=Math.max(0,a/2-300+i)),(!d||d<0||d>s)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),d=Math.max(0,s/2-241.5+o)),n.open(e,t,`width=${c}, height=${h}, top=${l}, left=${d}, scrollbars=yes`)}unloadWindow(e){this.browserStorage.cleanRequestByInteractionType(ho.Popup),this.currentWindow&&this.currentWindow.close(),e.preventDefault()}cleanPopup(e,t){e.close(),t.removeEventListener("beforeunload",this.unloadWindow),this.browserStorage.setInteractionInProgress(!1)}generatePopupName(e,t){return`${Kn}.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){const t=e.account&&e.account.homeAccountId;return`${Kn}.${this.config.auth.clientId}.${t}.${this.correlationId}`}}class Ka{constructor(e,t,r,n,o){this.authModule=e,this.browserStorage=t,this.authCodeRequest=r,this.logger=n,this.performanceClient=o}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){t.redirectStartPage&&(this.logger.verbose("RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page"),this.browserStorage.setTemporaryCache(Vn,t.redirectStartPage,!0)),this.browserStorage.setTemporaryCache(to,this.authCodeRequest.correlationId,!0),this.browserStorage.cacheCodeRequest(this.authCodeRequest),this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);const r={apiId:ao,timeout:t.redirectTimeout,noHistory:!1};return"function"==typeof t.onRedirectNavigate?(this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback"),!1!==t.onRedirectNavigate(e)?(this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),void await t.navigationClient.navigateExternal(e,r)):void this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation")):(this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),void await t.navigationClient.navigateExternal(e,r))}throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),fi(Io)}async handleCodeResponse(e,t){this.logger.verbose("RedirectHandler.handleCodeResponse called"),this.browserStorage.setInteractionInProgress(!1);const r=this.browserStorage.generateStateKey(t),n=this.browserStorage.getTemporaryCache(r);if(!n)throw Be(ne,"Cached State");let o;try{o=this.authModule.handleFragmentResponse(e,n)}catch(e){throw e instanceof Ys&&e.subError===Po?fi(Po):e}const i=this.browserStorage.generateNonceKey(n),s=this.browserStorage.getTemporaryCache(i);if(this.authCodeRequest.code=o.code,o.cloud_instance_host_name&&await ds(this.authModule.updateAuthority.bind(this.authModule),on,this.logger,this.performanceClient,this.authCodeRequest.correlationId)(o.cloud_instance_host_name,this.authCodeRequest.correlationId),o.nonce=s||void 0,o.state=n,o.client_info)this.authCodeRequest.clientInfo=o.client_info;else{const e=this.checkCcsCredentials();e&&(this.authCodeRequest.ccsCredential=e)}const a=await this.authModule.acquireToken(this.authCodeRequest,o);return this.browserStorage.cleanRequestByState(t),a}checkCcsCredentials(){const e=this.browserStorage.getTemporaryCache(eo,!0);if(e)try{return JSON.parse(e)}catch(t){this.authModule.logger.error("Cache credential could not be parsed"),this.authModule.logger.errorPii(`Cache credential could not be parsed: ${e}`)}return null}}class Da extends Aa{constructor(e,t,r,n,o,i,s,a,c,h){super(e,t,r,n,o,i,s,c,h),this.nativeStorage=a}async acquireToken(e){const t=await ds(this.initializeAuthorizationRequest.bind(this),Zr,this.logger,this.performanceClient,this.correlationId)(e,ho.Redirect);this.browserStorage.updateCacheEntries(t.state,t.nonce,t.authority,t.loginHint||"",t.account||null);const r=this.initializeServerTelemetryManager(ao),n=e=>{e.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.cleanRequestByState(t.state),this.eventHandler.emitEvent("msal:restoreFromBFCache",ho.Redirect))};try{const o=await ds(this.initializeAuthorizationCodeRequest.bind(this),en,this.logger,this.performanceClient,this.correlationId)(t),i=await ds(this.createAuthCodeClient.bind(this),Jr,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:r,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),s=new Ka(i,this.browserStorage,o,this.logger,this.performanceClient),a=await i.getAuthCodeUrl({...t,nativeBroker:Ha.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme)}),c=this.getRedirectStartPage(e.redirectStartPage);return this.logger.verbosePii(`Redirect start page: ${c}`),window.addEventListener("pageshow",n),await s.initiateAuthRequest(a,{navigationClient:this.navigationClient,redirectTimeout:this.config.system.redirectNavigationTimeout,redirectStartPage:c,onRedirectNavigate:e.onRedirectNavigate||this.config.auth.onRedirectNavigate})}catch(e){throw e instanceof G&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),window.removeEventListener("pageshow",n),this.browserStorage.cleanRequestByState(t.state),e}}async handleRedirectPromise(t="",r){const n=this.initializeServerTelemetryManager(865);try{if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const[o,i]=this.getRedirectResponse(t||"");if(!o)return this.logger.info("handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache."),this.browserStorage.cleanRequestByInteractionType(ho.Redirect),"back_forward"!==function(){if("undefined"==typeof window||void 0===window.performance||"function"!=typeof window.performance.getEntriesByType)return;const e=window.performance.getEntriesByType("navigation"),t=e.length?e[0]:void 0;return t?.type}()?r.event.errorCode="no_server_response":this.logger.verbose("Back navigation event detected. Muting no_server_response error"),null;const s=this.browserStorage.getTemporaryCache(Vn,!0)||e.EMPTY_STRING;if(jt.removeHashFromUrl(s)===jt.removeHashFromUrl(window.location.href)&&this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("Current page is loginRequestUrl, handling response"),s.indexOf("#")>-1&&function(e){const t=e.split("#");t.shift(),window.location.hash=t.length>0?t.join("#"):""}(s),await this.handleResponse(o,n);if(!this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling response"),await this.handleResponse(o,n);if(!Di()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(Jn,i,!0);const e={apiId:865,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0};let t=!0;if(s&&"null"!==s)this.logger.verbose(`Navigating to loginRequestUrl: ${s}`),t=await this.navigationClient.navigateInternal(s,e);else{const r=function(){const e=new jt(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}();this.browserStorage.setTemporaryCache(Vn,r,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),t=await this.navigationClient.navigateInternal(r,e)}if(!t)return await this.handleResponse(o,n)}return null}catch(e){throw e instanceof G&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),this.browserStorage.cleanRequestByInteractionType(ho.Redirect),e}}getRedirectResponse(e){this.logger.verbose("getRedirectResponseHash called");let t=e;t||(t=this.config.auth.OIDCOptions.serverResponseType===T.QUERY?window.location.search:window.location.hash);let r=Gt(t);if(r){try{!function(e,t,r){if(!e.state)throw fi(Ao);const n=Ps(t,e.state);if(!n)throw fi(bo);if(n.interactionType!==r)throw fi(So)}(r,this.browserCrypto,ho.Redirect)}catch(e){return e instanceof G&&this.logger.error(`Interaction type validation failed due to ${e.errorCode}: ${e.errorMessage}`),[null,""]}return(n=window).location.hash="","function"==typeof n.history.replaceState&&n.history.replaceState(null,"",`${n.location.origin}${n.location.pathname}${n.location.search}`),this.logger.verbose("Hash contains known properties, returning response hash"),[r,t]}var n;const o=this.browserStorage.getTemporaryCache(Jn,!0);return this.browserStorage.removeItem(this.browserStorage.generateCacheKey(Jn)),o&&(r=Gt(o),r)?(this.logger.verbose("Hash does not contain known properties, returning cached hash"),[r,o]):[null,""]}async handleResponse(e,t){const r=e.state;if(!r)throw fi(Ao);const n=this.browserStorage.getCachedRequest(r);if(this.logger.verbose("handleResponse called, retrieved cached request"),e.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw fi(si);const t=new Na(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,co,this.performanceClient,this.nativeMessageHandler,e.accountId,this.nativeStorage,n.correlationId),{userRequestState:o}=bs.parseRequestState(this.browserCrypto,r);return t.acquireToken({...n,state:o,prompt:void 0}).finally((()=>{this.browserStorage.cleanRequestByState(r)}))}const o=this.browserStorage.getCachedAuthority(r);if(!o)throw fi(Fo);const i=await ds(this.createAuthCodeClient.bind(this),Jr,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:o});return Vs.removeThrottle(this.browserStorage,this.config.auth.clientId,n),new Ka(i,this.browserStorage,n,this.logger,this.performanceClient).handleCodeResponse(e,r)}async logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e),r=this.initializeServerTelemetryManager(961);try{this.eventHandler.emitEvent(zs,ho.Redirect,e),await this.clearCacheOnLogout(t.account);const n={apiId:961,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},o=await ds(this.createAuthCodeClient.bind(this),Jr,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:r,requestAuthority:e&&e.authority,requestExtraQueryParameters:e?.extraQueryParameters,account:e&&e.account||void 0});if(o.authority.protocolMode===K)try{o.authority.endSessionEndpoint}catch{if(t.account?.homeAccountId)return this.browserStorage.removeAccount(t.account?.homeAccountId),void this.eventHandler.emitEvent(Gs,ho.Redirect,t)}const i=o.getLogoutUri(t);if(this.eventHandler.emitEvent(Gs,ho.Redirect,t),!e||"function"!=typeof e.onRedirectNavigate)return this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),void await this.navigationClient.navigateExternal(i,n);if(!1!==e.onRedirectNavigate(i))return this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),void await this.navigationClient.navigateExternal(i,n);this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation")}catch(e){throw e instanceof G&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),this.eventHandler.emitEvent(js,ho.Redirect,null,e),this.eventHandler.emitEvent(Qs,ho.Redirect),e}this.eventHandler.emitEvent(Qs,ho.Redirect)}getRedirectStartPage(e){const t=e||window.location.href;return jt.getAbsoluteUrl(t,Fi())}}var Fa=r(14154).Promise;async function $a(e,t,r,n,o){if(t.addQueueMeasurement(Qr,n),!e)throw r.info("Navigate url is empty"),fi(Io);return o?ds(Ga,Yr,r,t,n)(e,o,t,n):ls(ja,Vr,r,t,n)(e)}async function za(e,t,r,n,o,i,s){return n.addQueueMeasurement(Wr,i),new Fa(((n,i)=>{t<1e4&&o.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${t}ms) than the default (10000ms). This may result in timeouts.`);const a=window.setTimeout((()=>{window.clearInterval(c),i(fi(Oo))}),t),c=window.setInterval((()=>{let t="";const r=e.contentWindow;try{t=r?r.location.href:""}catch(e){}if(!t||"about:blank"===t)return;let o="";r&&(o=s===T.QUERY?r.location.search:r.location.hash),window.clearTimeout(a),window.clearInterval(c),n(o)}),r)})).finally((()=>{ls(Wa,Rn,o,n,i)(e)}))}function Ga(e,t,r,n){return r.addQueueMeasurement(Yr,n),new Fa(((r,n)=>{const o=Qa();window.setTimeout((()=>{o?(o.src=e,r(o)):n("Unable to load iframe")}),t)}))}function ja(e){const t=Qa();return t.src=e,t}function Qa(){const e=document.createElement("iframe");return e.className="msalSilentIframe",e.style.visibility="hidden",e.style.position="absolute",e.style.width=e.style.height="0",e.style.border="0",e.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.body.appendChild(e),e}function Wa(e){document.body===e.parentNode&&document.body.removeChild(e)}var Ya=r(14154).Promise;class Va extends Aa{constructor(e,t,r,n,o,i,s,a,c,h,l){super(e,t,r,n,o,i,a,h,l),this.apiId=s,this.nativeStorage=c}async acquireToken(e){this.performanceClient.addQueueMeasurement(br,e.correlationId),e.loginHint||e.sid||e.account&&e.account.username||this.logger.warning("No user hint provided. The authorization server may need more information to complete this request.");const t={...e};t.prompt?t.prompt!==w.NONE&&t.prompt!==w.NO_SESSION&&(this.logger.warning(`SilentIframeClient. Replacing invalid prompt ${t.prompt} with ${w.NONE}`),t.prompt=w.NONE):t.prompt=w.NONE;const r=await ds(this.initializeAuthorizationRequest.bind(this),Zr,this.logger,this.performanceClient,e.correlationId)(t,ho.Silent);Qi(r.authority);const n=this.initializeServerTelemetryManager(this.apiId);let o;try{return o=await ds(this.createAuthCodeClient.bind(this),Jr,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:n,requestAuthority:r.authority,requestAzureCloudOptions:r.azureCloudOptions,requestExtraQueryParameters:r.extraQueryParameters,account:r.account}),await ds(this.silentTokenHelper.bind(this),jr,this.logger,this.performanceClient,e.correlationId)(o,r)}catch(r){if(r instanceof G&&(r.setCorrelationId(this.correlationId),n.cacheFailedRequest(r)),!(o&&r instanceof G&&r.errorCode===Bn))throw r;this.performanceClient.addFields({retryError:r.errorCode},this.correlationId);const i=await ds(this.initializeAuthorizationRequest.bind(this),Zr,this.logger,this.performanceClient,e.correlationId)(t,ho.Silent);return await ds(this.silentTokenHelper.bind(this),jr,this.logger,this.performanceClient,this.correlationId)(o,i)}}logout(){return Ya.reject(fi(Lo))}async silentTokenHelper(e,t){const r=t.correlationId;this.performanceClient.addQueueMeasurement(jr,r);const n=await ds(this.initializeAuthorizationCodeRequest.bind(this),en,this.logger,this.performanceClient,r)(t),o=await ds(e.getAuthCodeUrl.bind(e),tn,this.logger,this.performanceClient,r)({...t,nativeBroker:Ha.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,t.authenticationScheme)}),i=new xa(e,this.browserStorage,n,this.logger,this.performanceClient),s=await ds($a,Qr,this.logger,this.performanceClient,r)(o,this.performanceClient,this.logger,r,this.config.system.navigateFrameWait),a=this.config.auth.OIDCOptions.serverResponseType,c=await ds(za,Wr,this.logger,this.performanceClient,r)(s,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,r,a),h=ls(La,gn,this.logger,this.performanceClient,this.correlationId)(c,a,this.logger);if(h.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw fi(si);const e=new Na(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.apiId,this.performanceClient,this.nativeMessageHandler,h.accountId,this.browserStorage,r),{userRequestState:n}=bs.parseRequestState(this.browserCrypto,t.state);return ds(e.acquireToken.bind(e),Pr,this.logger,this.performanceClient,r)({...t,state:n,prompt:t.prompt||w.NONE})}return ds(i.handleCodeResponse.bind(i),nn,this.logger,this.performanceClient,r)(h,t)}}var Ja=r(14154).Promise;class Xa extends Aa{async acquireToken(e){this.performanceClient.addQueueMeasurement(Sr,e.correlationId);const t=await ds(Ia,$r,this.logger,this.performanceClient,e.correlationId)(e,this.config,this.performanceClient,this.logger),r={...e,...t};e.redirectUri&&(r.redirectUri=this.getRedirectUri(e.redirectUri));const n=this.initializeServerTelemetryManager(61),o=await this.createRefreshTokenClient({serverTelemetryManager:n,authorityUrl:r.authority,azureCloudOptions:r.azureCloudOptions,account:r.account});return ds(o.acquireTokenByRefreshToken.bind(o),Lr,this.logger,this.performanceClient,e.correlationId)(r).catch((e=>{throw e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e),e}))}logout(){return Ja.reject(fi(Lo))}async createRefreshTokenClient(e){const t=await ds(this.getClientConfiguration.bind(this),Xr,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:e.serverTelemetryManager,requestAuthority:e.authorityUrl,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account});return new Ea(t,this.performanceClient)}}class Za{constructor(e,t,r,n){this.isBrowserEnvironment="undefined"!=typeof window,this.config=e,this.storage=t,this.logger=r,this.cryptoObj=n}loadExternalTokens(e,t,r){if(!this.isBrowserEnvironment)throw fi(Go);const n=t.id_token?$e(t.id_token,ns):void 0,o={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},i=e.authority?new gs(gs.generateAuthority(e.authority,e.azureCloudOptions),this.config.system.networkClient,this.storage,o,this.logger,e.correlationId||Oi()):void 0,s=this.loadAccount(e,r.clientInfo||t.client_info||"",n,i),a=this.loadIdToken(t,s.homeAccountId,s.environment,s.realm),c=this.loadAccessToken(e,t,s.homeAccountId,s.environment,s.realm,r),h=this.loadRefreshToken(t,s.homeAccountId,s.environment);return this.generateAuthenticationResult(e,{account:s,idToken:a,accessToken:c,refreshToken:h},n,i)}loadAccount(e,t,r,n){if(this.logger.verbose("TokenCache - loading account"),e.account){const t=$t.createFromAccountInfo(e.account);return this.storage.setAccount(t),t}if(!n||!t&&!r)throw this.logger.error("TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead."),fi(Jo);const o=$t.generateHomeAccountId(t,n.authorityType,this.logger,this.cryptoObj,r),i=r?.tid,s=ga(this.storage,n,o,ns,r,t,n.hostnameAndPort,i,void 0,void 0,this.logger);return this.storage.setAccount(s),s}loadIdToken(e,t,r,n){if(!e.id_token)return this.logger.verbose("TokenCache - no id token found in response"),null;this.logger.verbose("TokenCache - loading id token");const o=We(t,r,e.id_token,this.config.auth.clientId,n);return this.storage.setIdTokenCredential(o),o}loadAccessToken(e,t,r,n,o,i){if(!t.access_token)return this.logger.verbose("TokenCache - no access token found in response"),null;if(!t.expires_in)return this.logger.error("TokenCache - no expiration set on the access token. Cannot add it to the cache."),null;if(!(t.scope||e.scopes&&e.scopes.length))return this.logger.error("TokenCache - scopes not specified in the request or response. Cannot add token to the cache."),null;this.logger.verbose("TokenCache - loading access token");const s=t.scope?xt.fromString(t.scope):new xt(e.scopes),a=i.expiresOn||t.expires_in+(new Date).getTime()/1e3,c=i.extendedExpiresOn||(t.ext_expires_in||t.expires_in)+(new Date).getTime()/1e3,h=Ye(r,n,t.access_token,this.config.auth.clientId,o,s.printScopes(),a,c,ns);return this.storage.setAccessTokenCredential(h),h}loadRefreshToken(e,t,r){if(!e.refresh_token)return this.logger.verbose("TokenCache - no refresh token found in response"),null;this.logger.verbose("TokenCache - loading refresh token");const n=Ve(t,r,e.refresh_token,this.config.auth.clientId,e.foci,void 0,e.refresh_token_expires_in);return this.storage.setRefreshTokenCredential(n),n}generateAuthenticationResult(e,t,r,n){let o,i="",s=[],a=null;t?.accessToken&&(i=t.accessToken.secret,s=xt.fromString(t.accessToken.target).asArray(),a=new Date(1e3*Number(t.accessToken.expiresOn)),o=new Date(1e3*Number(t.accessToken.extendedExpiresOn)));const c=t.account;return{authority:n?n.canonicalAuthority:"",uniqueId:t.account.localAccountId,tenantId:t.account.realm,scopes:s,account:c.getAccountInfo(),idToken:t.idToken?.secret||"",idTokenClaims:r||{},accessToken:i,fromCache:!0,expiresOn:a,correlationId:e.correlationId||"",requestId:"",extExpiresOn:o,familyId:t.refreshToken?.familyId||"",tokenType:t?.accessToken?.tokenType||"",state:e.state||"",cloudGraphHostName:c.cloudGraphHostName||"",msGraphHost:c.msGraphHost||"",fromNativeBroker:!1}}}class ec extends ma{constructor(e){super(e),this.includeRedirectUri=!1}}var tc=r(14154).Promise;class rc extends Aa{constructor(e,t,r,n,o,i,s,a,c,h){super(e,t,r,n,o,i,a,c,h),this.apiId=s}async acquireToken(e){if(!e.code)throw fi(Zo);const t=await ds(this.initializeAuthorizationRequest.bind(this),Zr,this.logger,this.performanceClient,e.correlationId)(e,ho.Silent),r=this.initializeServerTelemetryManager(this.apiId);try{const n={...t,code:e.code},o=await ds(this.getClientConfiguration.bind(this),Xr,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:r,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),i=new ec(o);this.logger.verbose("Auth code client created");const s=new xa(i,this.browserStorage,n,this.logger,this.performanceClient);return await ds(s.handleCodeResponseFromServer.bind(s),rn,this.logger,this.performanceClient,e.correlationId)({code:e.code,msgraph_host:e.msGraphHost,cloud_graph_host_name:e.cloudGraphHostName,cloud_instance_host_name:e.cloudInstanceHostName},t,!1)}catch(e){throw e instanceof G&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),e}}logout(){return tc.reject(fi(Lo))}}var nc=r(14154).Promise;function oc(e){const t=e?.idTokenClaims;return t?.tfp||t?.acr?"B2C":t?.tid?"9188040d-6c67-4c5b-b112-36a304b66dad"===t?.tid?"MSA":"AAD":void 0}function ic(e,t){try{Gi(e)}catch(e){throw t.end({success:!1},e),e}}class sc{constructor(e){var t,r;this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new cs(this.logger,this.performanceClient):Ke,this.eventHandler=new Ws(this.logger),this.browserStorage=this.isBrowserEnvironment?new Ns(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,function(e){const t=e.cloudDiscoveryMetadata;let r;if(t)try{r=JSON.parse(t)}catch(e){throw qt(Tt)}return{canonicalAuthority:e.authority?ps(e.authority):void 0,knownAuthorities:e.knownAuthorities,cloudDiscoveryMetadata:r}}(this.config.auth),this.performanceClient):(t=this.config.auth.clientId,r=this.logger,new Ns(t,{cacheLocation:Wn,temporaryCacheLocation:Wn,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1},Ke,r));const n={cacheLocation:Wn,temporaryCacheLocation:Wn,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new Ns(this.config.auth.clientId,n,this.browserCrypto,this.logger,void 0,this.performanceClient),this.tokenCache=new Za(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this),this.listeningToStorageEvents=!1,this.handleAccountCacheChange=this.handleAccountCacheChange.bind(this)}static async createController(e,t){const r=new sc(e);return await r.initialize(t),r}trackPageVisibility(e){e&&(this.logger.info("Perf: Visibility change detected"),this.performanceClient.incrementFields({visibilityChangeCount:1},e))}async initialize(e){if(this.logger.trace("initialize called"),this.initialized)return void this.logger.info("initialize has already been called, exiting early.");if(!this.isBrowserEnvironment)return this.logger.info("in non-browser environment, exiting early."),this.initialized=!0,void this.eventHandler.emitEvent(qs);const t=e?.correlationId||this.getRequestCorrelationId(),r=this.config.system.allowNativeBroker,n=this.performanceClient.startMeasurement(Gr,t);if(this.eventHandler.emitEvent("msal:initializeStart"),r)try{this.nativeExtensionProvider=await Ha.createProvider(this.logger,this.config.system.nativeBrokerHandshakeTimeout,this.performanceClient)}catch(e){this.logger.verbose(e)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),await ds(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),En,this.logger,this.performanceClient,t)(this.performanceClient,t)),this.initialized=!0,this.eventHandler.emitEvent(qs),n.end({allowNativeBroker:r,success:!0})}async handleRedirectPromise(e){if(this.logger.verbose("handleRedirectPromise called"),zi(this.initialized),this.isBrowserEnvironment){const t=e||"";let r=this.redirectResponse.get(t);return void 0===r?(r=this.handleRedirectPromiseInternal(e),this.redirectResponse.set(t,r),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise")):this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call"),r}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async handleRedirectPromiseInternal(e){const t=this.getAllAccounts(),r=this.browserStorage.getCachedNativeRequest(),n=r&&Ha.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider)&&this.nativeExtensionProvider&&!e,o=n?r?.correlationId:this.browserStorage.getTemporaryCache(to,!0)||"",i=this.performanceClient.startMeasurement(Ir,o);let s;if(this.eventHandler.emitEvent("msal:handleRedirectStart",ho.Redirect),n&&this.nativeExtensionProvider){this.logger.trace("handleRedirectPromise - acquiring token from native platform");const e=new Na(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,865,this.performanceClient,this.nativeExtensionProvider,r.accountId,this.nativeInternalStorage,r.correlationId);s=ds(e.handleRedirectPromise.bind(e),Sn,this.logger,this.performanceClient,i.event.correlationId)(this.performanceClient,i.event.correlationId)}else{this.logger.trace("handleRedirectPromise - acquiring token from web flow");const t=this.createRedirectClient(o);s=ds(t.handleRedirectPromise.bind(t),bn,this.logger,this.performanceClient,i.event.correlationId)(e,i)}return s.then((e=>(e?(t.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(xs,ho.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(Bs,ho.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, acquire token success")),i.end({success:!0,accountType:oc(e.account)})):i.event.errorCode?i.end({success:!1}):i.discard(),this.eventHandler.emitEvent(Fs,ho.Redirect),e))).catch((e=>{const r=e;throw t.length>0?this.eventHandler.emitEvent(Ks,ho.Redirect,null,r):this.eventHandler.emitEvent(Ls,ho.Redirect,null,r),this.eventHandler.emitEvent(Fs,ho.Redirect),i.end({success:!1},r),e}))}async acquireTokenRedirect(e){const t=this.getRequestCorrelationId(e);this.logger.verbose("acquireTokenRedirect called",t);const r=this.performanceClient.startMeasurement("acquireTokenPreRedirect",t);r.add({accountType:oc(e.account),scenarioId:e.scenarioId});const n=e.onRedirectNavigate;if(n)e.onRedirectNavigate=e=>{const t="function"==typeof n?n(e):void 0;return!1!==t?r.end({success:!0}):r.discard(),t};else{const e=this.config.auth.onRedirectNavigate;this.config.auth.onRedirectNavigate=t=>{const n="function"==typeof e?e(t):void 0;return!1!==n?r.end({success:!0}):r.discard(),n}}const o=this.getAllAccounts().length>0;try{let n;return ji(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),o?this.eventHandler.emitEvent(Us,ho.Redirect,e):this.eventHandler.emitEvent(Hs,ho.Redirect,e),n=this.nativeExtensionProvider&&this.canUseNative(e)?new Na(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,ao,this.performanceClient,this.nativeExtensionProvider,this.getNativeAccountId(e),this.nativeInternalStorage,t).acquireTokenRedirect(e,r).catch((r=>{if(r instanceof Sa&&_a(r))return this.nativeExtensionProvider=void 0,this.createRedirectClient(t).acquireToken(e);if(r instanceof Ts)return this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createRedirectClient(t).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),r})):this.createRedirectClient(t).acquireToken(e),await n}catch(e){throw r.end({success:!1},e),o?this.eventHandler.emitEvent(Ks,ho.Redirect,null,e):this.eventHandler.emitEvent(Ls,ho.Redirect,null,e),e}}acquireTokenPopup(e){const t=this.getRequestCorrelationId(e),r=this.performanceClient.startMeasurement(wr,t);r.add({scenarioId:e.scenarioId,accountType:oc(e.account)});try{this.logger.verbose("acquireTokenPopup called",t),ic(this.initialized,r),this.browserStorage.setInteractionInProgress(!0)}catch(e){return nc.reject(e)}const n=this.getAllAccounts();let o;return n.length>0?this.eventHandler.emitEvent(Us,ho.Popup,e):this.eventHandler.emitEvent(Hs,ho.Popup,e),o=this.canUseNative(e)?this.acquireTokenNative({...e,correlationId:t},co).then((e=>(this.browserStorage.setInteractionInProgress(!1),r.end({success:!0,isNativeBroker:!0,accountType:oc(e.account)}),e))).catch((r=>{if(r instanceof Sa&&_a(r))return this.nativeExtensionProvider=void 0,this.createPopupClient(t).acquireToken(e);if(r instanceof Ts)return this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createPopupClient(t).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),r})):this.createPopupClient(t).acquireToken(e),o.then((e=>(n.length<this.getAllAccounts().length?this.eventHandler.emitEvent(xs,ho.Popup,e):this.eventHandler.emitEvent(Bs,ho.Popup,e),r.end({success:!0,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:oc(e.account)}),e))).catch((e=>(n.length>0?this.eventHandler.emitEvent(Ks,ho.Popup,null,e):this.eventHandler.emitEvent(Ls,ho.Popup,null,e),r.end({success:!1},e),nc.reject(e))))}trackPageVisibilityWithMeasurement(){const e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(e){const t=this.getRequestCorrelationId(e),r={...e,prompt:e.prompt,correlationId:t};let n;return this.ssoSilentMeasurement=this.performanceClient.startMeasurement(_r,t),this.ssoSilentMeasurement?.add({scenarioId:e.scenarioId,accountType:oc(e.account)}),ic(this.initialized,this.ssoSilentMeasurement),this.ssoSilentMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",t),this.eventHandler.emitEvent("msal:ssoSilentStart",ho.Silent,r),n=this.canUseNative(r)?this.acquireTokenNative(r,863).catch((e=>{if(e instanceof Sa&&_a(e))return this.nativeExtensionProvider=void 0,this.createSilentIframeClient(r.correlationId).acquireToken(r);throw e})):this.createSilentIframeClient(r.correlationId).acquireToken(r),n.then((e=>(this.eventHandler.emitEvent("msal:ssoSilentSuccess",ho.Silent,e),this.ssoSilentMeasurement?.end({success:!0,isNativeBroker:e.fromNativeBroker,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:oc(e.account)}),e))).catch((e=>{throw this.eventHandler.emitEvent("msal:ssoSilentFailure",ho.Silent,null,e),this.ssoSilentMeasurement?.end({success:!1},e),e})).finally((()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)}))}async acquireTokenByCode(e){const t=this.getRequestCorrelationId(e);this.logger.trace("acquireTokenByCode called",t);const r=this.performanceClient.startMeasurement(fr,t);ic(this.initialized,r),this.eventHandler.emitEvent("msal:acquireTokenByCodeStart",ho.Silent,e),r.add({scenarioId:e.scenarioId});try{if(e.code&&e.nativeAccountId)throw fi(ti);if(e.code){const n=e.code;let o=this.hybridAuthCodeResponses.get(n);return o?(this.logger.verbose("Existing acquireTokenByCode request found",t),r.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",t),o=this.acquireTokenByCodeAsync({...e,correlationId:t}).then((e=>(this.eventHandler.emitEvent("msal:acquireTokenByCodeSuccess",ho.Silent,e),this.hybridAuthCodeResponses.delete(n),r.end({success:!0,isNativeBroker:e.fromNativeBroker,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:oc(e.account)}),e))).catch((e=>{throw this.hybridAuthCodeResponses.delete(n),this.eventHandler.emitEvent(Ds,ho.Silent,null,e),r.end({success:!1},e),e})),this.hybridAuthCodeResponses.set(n,o)),await o}if(e.nativeAccountId){if(this.canUseNative(e,e.nativeAccountId)){const n=await this.acquireTokenNative({...e,correlationId:t},866,e.nativeAccountId).catch((e=>{throw e instanceof Sa&&_a(e)&&(this.nativeExtensionProvider=void 0),e}));return r.end({accountType:oc(n.account),success:!0}),n}throw fi(ni)}throw fi(ei)}catch(e){throw this.eventHandler.emitEvent(Ds,ho.Silent,null,e),r.end({success:!1},e),e}}async acquireTokenByCodeAsync(e){this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(kn,e.correlationId),this.acquireTokenByCodeAsyncMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement);const t=this.createSilentAuthCodeClient(e.correlationId);return await t.acquireToken(e).then((e=>(this.acquireTokenByCodeAsyncMeasurement?.end({success:!0,fromCache:e.fromCache,isNativeBroker:e.fromNativeBroker}),e))).catch((e=>{throw this.acquireTokenByCodeAsyncMeasurement?.end({success:!1},e),e})).finally((()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)}))}async acquireTokenFromCache(e,t){switch(this.performanceClient.addQueueMeasurement(Br,e.correlationId),t){case 0:case 1:case 2:const t=this.createSilentCacheClient(e.correlationId);return ds(t.acquireToken.bind(t),kr,this.logger,this.performanceClient,e.correlationId)(e);default:throw Be(be)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(yr,e.correlationId),t){case 0:case 2:case 3:case 4:const t=this.createSilentRefreshClient(e.correlationId);return ds(t.acquireToken.bind(t),Sr,this.logger,this.performanceClient,e.correlationId)(e);default:throw Be(be)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(Fr,e.correlationId);const t=this.createSilentIframeClient(e.correlationId);return ds(t.acquireToken.bind(t),br,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){const t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(e){const t=this.getRequestCorrelationId(e);return ji(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),this.createRedirectClient(t).logout(e)}logoutPopup(e){try{const t=this.getRequestCorrelationId(e);return Gi(this.initialized),this.browserStorage.setInteractionInProgress(!0),this.createPopupClient(t).logout(e)}catch(e){return nc.reject(e)}}async clearCache(e){if(!this.isBrowserEnvironment)return void this.logger.info("in non-browser environment, returning early.");const t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){return function(e,t,r,n){return e.verbose("getAllAccounts called"),r?t.getAllAccounts(n):[]}(this.logger,this.browserStorage,this.isBrowserEnvironment,e)}getAccount(e){return function(e,t,r){if(t.trace("getAccount called"),0===Object.keys(e).length)return t.warning("getAccount: No accountFilter provided"),null;const n=r.getAccountInfoFilteredBy(e);return n?(t.verbose("getAccount: Account matching provided filter found, returning"),n):(t.verbose("getAccount: No matching account found, returning null"),null)}(e,this.logger,this.browserStorage)}getAccountByUsername(e){return function(e,t,r){if(t.trace("getAccountByUsername called"),!e)return t.warning("getAccountByUsername: No username provided"),null;const n=r.getAccountInfoFilteredBy({username:e});return n?(t.verbose("getAccountByUsername: Account matching username found, returning"),t.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${e}`),n):(t.verbose("getAccountByUsername: No matching account found, returning null"),null)}(e,this.logger,this.browserStorage)}getAccountByHomeId(e){return function(e,t,r){if(t.trace("getAccountByHomeId called"),!e)return t.warning("getAccountByHomeId: No homeAccountId provided"),null;const n=r.getAccountInfoFilteredBy({homeAccountId:e});return n?(t.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),t.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${e}`),n):(t.verbose("getAccountByHomeId: No matching account found, returning null"),null)}(e,this.logger,this.browserStorage)}getAccountByLocalId(e){return function(e,t,r){if(t.trace("getAccountByLocalId called"),!e)return t.warning("getAccountByLocalId: No localAccountId provided"),null;const n=r.getAccountInfoFilteredBy({localAccountId:e});return n?(t.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),t.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${e}`),n):(t.verbose("getAccountByLocalId: No matching account found, returning null"),null)}(e,this.logger,this.browserStorage)}setActiveAccount(e){!function(e,t){t.setActiveAccount(e)}(e,this.browserStorage)}getActiveAccount(){return this.browserStorage.getActiveAccount()}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const r=$t.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return this.browserStorage.setAccount(r),e.fromNativeBroker?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}async acquireTokenNative(e,t,r){if(this.logger.trace("acquireTokenNative called"),!this.nativeExtensionProvider)throw fi(si);return new Na(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.nativeExtensionProvider,r||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e)}canUseNative(e,t){if(this.logger.trace("canUseNative called"),!Ha.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme))return this.logger.trace("canUseNative: isNativeAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case w.NONE:case w.CONSENT:case w.LOGIN:this.logger.trace("canUseNative: prompt is compatible with native flow");break;default:return this.logger.trace(`canUseNative: prompt = ${e.prompt} is not compatible with native flow, returning false`),!1}return!(!t&&!this.getNativeAccountId(e)&&(this.logger.trace("canUseNative: nativeAccountId is not available, returning false"),1))}getNativeAccountId(e){const t=e.account||this.getAccount({loginHint:e.loginHint,sid:e.sid})||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new Ba(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createRedirectClient(e){return new Da(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentIframeClient(e){return new Va(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,863,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentCacheClient(e){return new Ma(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentRefreshClient(e){return new Xa(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentAuthCodeClient(e){return new rc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,866,this.performanceClient,this.nativeExtensionProvider,e)}addEventCallback(e,t){return this.eventHandler.addEventCallback(e,t)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return $i(),this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){"undefined"!=typeof window&&(this.listeningToStorageEvents?this.logger.verbose("Account storage listener already registered."):(this.logger.verbose("Adding account storage listener."),this.listeningToStorageEvents=!0,window.addEventListener("storage",this.handleAccountCacheChange)))}disableAccountStorageEvents(){"undefined"!=typeof window&&(this.listeningToStorageEvents?(this.logger.verbose("Removing account storage listener."),window.removeEventListener("storage",this.handleAccountCacheChange),this.listeningToStorageEvents=!1):this.logger.verbose("No account storage listener registered."))}handleAccountCacheChange(e){try{e.key?.includes(m)&&this.eventHandler.emitEvent("msal:activeAccountChanged");const t=e.newValue||e.oldValue;if(!t)return;const r=JSON.parse(t);if("object"!=typeof r||!$t.isAccountEntity(r))return;const n=nr.toObject(new $t,r).getAccountInfo();!e.oldValue&&e.newValue?(this.logger.info("Account was added to cache in a different window"),this.eventHandler.emitEvent("msal:accountAdded",void 0,n)):!e.newValue&&e.oldValue&&(this.logger.info("Account was removed from cache in a different window"),this.eventHandler.emitEvent("msal:accountRemoved",void 0,n))}catch(e){return}}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}isBrowserEnv(){return this.isBrowserEnvironment}getRequestCorrelationId(t){return t?.correlationId?t.correlationId:this.isBrowserEnvironment?Oi():e.EMPTY_STRING}async loginRedirect(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||lo})}loginPopup(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||lo})}async acquireTokenSilent(t){const r=this.getRequestCorrelationId(t),n=this.performanceClient.startMeasurement(Cr,r);n.add({cacheLookupPolicy:t.cacheLookupPolicy,scenarioId:t.scenarioId}),ic(this.initialized,n),this.logger.verbose("acquireTokenSilent called",r);const o=t.account||this.getActiveAccount();if(!o)throw fi(Uo);n.add({accountType:oc(o)});const i={clientId:this.config.auth.clientId,authority:t.authority||e.EMPTY_STRING,scopes:t.scopes,homeAccountIdentifier:o.homeAccountId,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid,shrOptions:t.shrOptions},s=JSON.stringify(i),a=this.activeSilentTokenRequests.get(s);if(void 0===a){this.logger.verbose("acquireTokenSilent called for the first time, storing active request",r);const e=ds(this.acquireTokenSilentAsync.bind(this),vr,this.logger,this.performanceClient,r)({...t,correlationId:r},o).then((e=>(this.activeSilentTokenRequests.delete(s),n.end({success:!0,fromCache:e.fromCache,isNativeBroker:e.fromNativeBroker,cacheLookupPolicy:t.cacheLookupPolicy,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length}),e))).catch((e=>{throw this.activeSilentTokenRequests.delete(s),n.end({success:!1},e),e}));return this.activeSilentTokenRequests.set(s,e),{...await e,state:t.state}}return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",r),n.discard(),{...await a,state:t.state}}async acquireTokenSilentAsync(e,t){const r=()=>this.trackPageVisibility(e.correlationId);this.performanceClient.addQueueMeasurement(vr,e.correlationId),this.eventHandler.emitEvent(Us,ho.Silent,e),e.correlationId&&this.performanceClient.incrementFields({visibilityChangeCount:0},e.correlationId),document.addEventListener("visibilitychange",r);const n=await ds(Ta,zr,this.logger,this.performanceClient,e.correlationId)(e,t,this.config,this.performanceClient,this.logger),o=e.cacheLookupPolicy||0;return this.acquireTokenSilentNoIframe(n,o).catch((async e=>{const t=function(e,t){const r=!(e instanceof Ts&&e.subError!==Cs),n=e.errorCode===Bn||e.errorCode===be,o=r&&n||e.errorCode===ms||e.errorCode===ys,i=po.includes(t);return o&&i}(e,o);if(t){if(this.activeIframeRequest){if(5!==o){const[t,r]=this.activeIframeRequest;this.logger.verbose(`Iframe request is already in progress, awaiting resolution for request with correlationId: ${r}`,n.correlationId);const i=this.performanceClient.startMeasurement("awaitConcurrentIframe",n.correlationId);i.add({awaitIframeCorrelationId:r});const s=await t;if(i.end({success:s}),s)return this.logger.verbose(`Parallel iframe request with correlationId: ${r} succeeded. Retrying cache and/or RT redemption`,n.correlationId),this.acquireTokenSilentNoIframe(n,o);throw this.logger.info(`Iframe request with correlationId: ${r} failed. Interaction is required.`),e}return this.logger.warning("Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.",n.correlationId),ds(this.acquireTokenBySilentIframe.bind(this),Fr,this.logger,this.performanceClient,n.correlationId)(n)}{let e;return this.activeIframeRequest=[new nc((t=>{e=t})),n.correlationId],this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",n.correlationId),ds(this.acquireTokenBySilentIframe.bind(this),Fr,this.logger,this.performanceClient,n.correlationId)(n).then((t=>(e(!0),t))).catch((t=>{throw e(!1),t})).finally((()=>{this.activeIframeRequest=void 0}))}}throw e})).then((t=>(this.eventHandler.emitEvent(Bs,ho.Silent,t),e.correlationId&&this.performanceClient.addFields({fromCache:t.fromCache,isNativeBroker:t.fromNativeBroker},e.correlationId),t))).catch((e=>{throw this.eventHandler.emitEvent(Ks,ho.Silent,null,e),e})).finally((()=>{document.removeEventListener("visibilitychange",r)}))}async acquireTokenSilentNoIframe(e,t){return Ha.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme)&&e.account.nativeAccountId?(this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform"),this.acquireTokenNative(e,61).catch((async e=>{if(e instanceof Sa&&_a(e))throw this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.nativeExtensionProvider=void 0,Be(be);throw e}))):(this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow"),ds(this.acquireTokenFromCache.bind(this),Br,this.logger,this.performanceClient,e.correlationId)(e,t).catch((r=>{if(1===t)throw r;return this.eventHandler.emitEvent("msal:acquireTokenFromNetworkStart",ho.Silent,e),ds(this.acquireTokenByRefreshToken.bind(this),yr,this.logger,this.performanceClient,e.correlationId)(e,t)})))}}r(14154).Promise;class ac{static async createPublicClientApplication(e){const t=await async function(e){const t=new Vi(e);return await t.initialize(),sc.createController(t,void 0)}(e);return new ac(e,t)}constructor(e,t){this.controller=t||new sc(new Vi(e))}async initialize(e){return this.controller.initialize(e)}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e,t){return this.controller.addEventCallback(e,t)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}var cc,hc=r(14154).Promise,lc=function(e,t,r,n){return new(r||(r=hc))((function(o,i){function s(e){try{c(n.next(e))}catch(e){i(e)}}function a(e){try{c(n.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}c((n=n.apply(e,t||[])).next())}))},dc=function(e,t){var r,n,o,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]},s=Object.create(("function"==typeof Iterator?Iterator:Object).prototype);return s.next=a(0),s.throw=a(1),s.return=a(2),"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function a(a){return function(c){return function(a){if(r)throw new TypeError("Generator is already executing.");for(;s&&(s=0,a[0]&&(i=0)),i;)try{if(r=1,n&&(o=2&a[0]?n.return:a[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,a[1])).done)return o;switch(n=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,n=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((o=(o=i.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],n=0}finally{r=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,c])}}};function uc(e){return lc(this,void 0,void 0,(function(){var t,r,n,o,i;return dc(this,(function(s){switch(s.label){case 0:return t=JSON.parse(e.message),r=cc.getAccountByHomeId(t.userName),n={account:r,postLogoutRedirectUri:"".concat(window.location.origin,"/logoutcomplete/logoutcomplete.html")},[4,cc.logoutRedirect(n)];case 1:return s.sent(),o={messageType:"dialogClosed"},i=JSON.stringify(o),Office.context.ui.messageParent(i),[2]}}))}))}Office.onReady((function(){return lc(void 0,void 0,void 0,(function(){return dc(this,(function(e){switch(e.label){case 0:return Office.context.ui.addHandlerAsync(Office.EventType.DialogParentMessageReceived,uc),[4,(cc=new ac({auth:{clientId:"YOUR APP ID HERE",authority:"https://login.microsoftonline.com/common",redirectUri:"".concat(window.location.origin,"/login/login.html")},cache:{cacheLocation:"localStorage"}})).initialize()];case 1:return e.sent(),[2]}}))}))}))}()}();
//# sourceMappingURL=logout.js.map